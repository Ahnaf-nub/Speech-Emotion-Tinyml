/*
 * Copyright (c) 2025 EdgeImpulse Inc.
 *
 * Generated by Edge Impulse and licensed under the applicable Edge Impulse
 * Terms of Service. Community and Professional Terms of Service
 * (https://edgeimpulse.com/legal/terms-of-service) or Enterprise Terms of
 * Service (https://edgeimpulse.com/legal/enterprise-terms-of-service),
 * according to your product plan subscription (the “License”).
 *
 * This software, documentation and other associated files (collectively referred
 * to as the “Software”) is a single SDK variation generated by the Edge Impulse
 * platform and requires an active paid Edge Impulse subscription to use this
 * Software for any purpose.
 *
 * You may NOT use this Software unless you have an active Edge Impulse subscription
 * that meets the eligibility requirements for the applicable License, subject to
 * your full and continued compliance with the terms and conditions of the License,
 * including without limitation any usage restrictions under the applicable License.
 *
 * If you do not have an active Edge Impulse product plan subscription, or if use
 * of this Software exceeds the usage limitations of your Edge Impulse product plan
 * subscription, you are not permitted to use this Software and must immediately
 * delete and erase all copies of this Software within your control or possession.
 * Edge Impulse reserves all rights and remedies available to enforce its rights.
 *
 * Unless required by applicable law or agreed to in writing, the Software is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions, disclaimers and limitations under the License.
 */
// Generated on: 14.05.2025 14:32:17

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#define STRINGIZE(x) #x
#define STRINGIZE_VALUE_OF(x) STRINGIZE(x)

#if defined (__GNUC__)  /* GNU compiler */
#define ALIGN(X) __attribute__((aligned(X)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (_MSC_VER)
#define ALIGN(X) __declspec(align(X))
#elif defined (__TASKING__) /* TASKING Compiler */
#define ALIGN(X) __align(X)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ARMCC_VERSION) /* Arm Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ICCARM__) /* IAR Compiler */
#define ALIGN(x) __attribute__((aligned(x)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__clang__) /* LLVM/Clang Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#endif

#if defined(EI_MODEL_SECTION) && (defined(__GNUC__) || defined(__clang__))
#define MODEL_SECTION(X) __attribute__((section(STRINGIZE_VALUE_OF(X))))
#else
#define MODEL_SECTION(X)
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#ifndef CONFIG_IDF_TARGET_ESP32S3
#define EI_MAX_SCRATCH_BUFFER_COUNT 8
#else
#define EI_MAX_SCRATCH_BUFFER_COUNT 16
#endif // CONFIG_IDF_TARGET_ESP32S3
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 45072;
#else
constexpr int kTensorArenaSize = 44048;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
#if defined (EI_TENSOR_ARENA_LOCATION)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) DEFINE_SECTION(STRINGIZE_VALUE_OF(EI_TENSOR_ARENA_LOCATION));
#else
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#endif
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};

enum used_operators_e {
  OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};

struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];

namespace g0 {
const TfArray<2, int> tensor_dimension0 = { 2, { 1,4018 } };
const TfArray<1, float> quant0_scale = { 1, { 0.0038296568673104048, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data1[4] = { 1, 98, 41, 1, };
const TfArray<1, int> tensor_dimension1 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(8) int32_t tensor_data2[2] = { -1, 1344, };
const TfArray<1, int> tensor_dimension2 = { 1, { 2 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data3[6] = { -541, 315, 73, -904, -364, 1985, };
const TfArray<1, int> tensor_dimension3 = { 1, { 6 } };
const TfArray<1, float> quant3_scale = { 1, { 0.00041142615373246372, } };
const TfArray<1, int> quant3_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant3 = { (TfLiteFloatArray*)&quant3_scale, (TfLiteIntArray*)&quant3_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data4[6*1344] = { 
  -7, -1, -17, 0, 2, 3, -1, 3, 5, 5, 0, -10, -69, 1, 6, -10, -2, -2, -2, -5, -38, 3, -57, -22, -16, -21, -6, -19, -12, -4, 0, -45, 0, -3, 24, 14, -5, -3, 22, -50, -4, 16, -25, 15, -5, -2, -3, -13, -23, 12, -15, 15, -15, -5, 3, -8, -28, 8, 26, 15, -5, 4, -7, -9, -9, 3, 23, 6, -5, 17, -6, -1, 5, 2, -4, 7, 58, -58, 2, 16, 15, -4, 18, -12, -35, 1, 31, -7, 4, 23, 2, -4, 3, -10, 5, 5, -4, -5, -65, 50, 29, -4, 14, 24, -13, 14, -8, -60, -7, -6, 2, -85, -10, 27, -82, -5, 10, -9, 4, -2, -27, -3, 15, -8, -4, -6, -7, -3, 0, 2, 47, -1, 1, -78, 4, 0, -1, 23, 9, 2, 16, 0, 1, 7, -6, 5, -19, -12, 13, -3, 25, 22, 23, -5, 8, 27, 22, -6, 8, 32, 0, 0, -9, 28, 2, 4, 25, 24, -27, 26, -49, -15, -6, -8, -11, -91, -3, 30, 23, -59, -10, -1, 0, -53, -45, -1, -8, 23, -10, 4, -3, 20, -2, -6, -6, 0, 0, 12, -1, -3, 2, -13, -2, 3, 40, -41, 2, 5, -9, -1, -22, 0, -23, -3, 2, -4, -6, 3, -2, -50, -13, 5, -12, -9, -3, 2, -31, -2, 14, -4, -19, -47, -20, 0, -40, -14, 1, -3, -6, -6, -2, -10, -42, 23, -1, -3, 5, -9, 20, 7, 23, 10, -7, -1, 1, -4, 1, 0, 27, 3, 1, 37, -9, -4, 12, 8, -6, 1, 41, -1, -4, 5, -7, 0, 30, -7, -4, -6, -22, 14, -22, 4, 4, -20, 40, -9, 7, 11, -2, -7, -6, 14, -17, -1, -10, 40, -87, 16, 4, 24, -2, 1, -1, -49, -11, 2, -107, 20, -2, -4, -3, 12, -17, 5, 19, 39, -7, 2, 2, 9, 1, -3, 25, 2, 4, -41, -4, 4, 16, 44, -1, -13, 7, -39, 11, -5, 5, 0, -36, -9, 17, -3, 0, -46, -32, 10, -3, -38, 16, -5, 1, 7, 3, 25, 12, 25, 9, 3, -5, 7, -82, 16, -19, 12, 1, 2, -9, -36, -6, -20, -15, -40, -4, -10, 4, -78, 0, -7, 27, 10, -4, 1, 1, -15, -6, -4, 15, 2, -3, 42, -3, -2, 2, -31, 2, -11, 14, -49, 3, 10, -2, -3, -26, 24, -27, 0, 4, -6, 11, -3, 4, -3, -17, -6, -7, -4, 0, -10, -70, 1, 15, -1, 18, -24, -17, 31, 5, -31, -7, 0, -6, -11, -10, -24, 1, -19, -8, 2, -3, 1, -8, 1, 21, 25, -4, -2, 2, -1, 3, 4, 13, -4, 3, 1, -10, 13, -13, 11, 1, 18, 17, 15, -5, 3, 3, -1, 43, -26, 39, -4, -17, 20, 6, -1, 3, 0, 15, -6, -1, -16, 3, -13, 0, 16, -41, -2, -1, 23, -26, 18, -105, 19, -3, 0, 7, -38, -18, 10, -54, 35, -22, -11, -1, -38, -30, 2, 4, 8, 3, 2, 5, 26, -3, 4, -1, 1, 0, -16, 1, 1, -6, 16, 4, 9, -39, -3, 5, -1, 12, -2, 20, -16, 33, -3, -20, -20, -27, -5, -4, 12, 3, -1, 1, 55, -1, 13, 6, 2, -5, -3, -21, 7, -9, 12, -19, 29, -3, -6, 6, -8, -12, 5, 2, -22, -11, -5, -5, -29, 48, 4, 33, -28, -8, 4, 1, 13, -4, 0, -58, -1, -2, 31, -10, -3, -14, -24, -3, -5, 16, -18, 12, 17, -14, 3, 7, 7, -10, 2, 12, 19, 12, 5, 5, -29, -33, -8, 4, 26, -3, -51, -31, -7, 26, -7, 3, -15, 34, -9, -20, -63, -4, 5, -8, -23, -3, 13, -23, 6, 2, 4, -2, 11, -10, 3, 13, -5, -8, -4, 2, -11, 2, 2, -3, 5, 1, -35, -3, 12, -13, 8, -4, -2, -83, 24, 4, 33, 21, 4, 10, 3, -26, 0, -30, 18, 9, -13, -1, 5, 4, -8, 5, -34, 3, -25, -57, 5, -11, -3, 6, -43, -30, 5, -31, -36, -2, 4, 8, -47, 8, 30, -38, -29, 11, -1, -5, -19, -19, 3, 4, -15, -2, -4, 2, 13, 2, -5, -21, 1, -1, -46, -7, 3, -5, 6, -3, 2, -64, -4, 13, 10, 11, 1, 15, -4, 28, -3, 6, -14, 17, 11, 11, 12, 20, -3, -10, -18, 4, 10, 20, 14, -13, 2, -9, 3, -9, -14, -28, -2, 1, -3, 4, -24, -5, 0, 7, -10, 0, 1, 2, -22, -7, 6, 10, -26, -2, 0, 4, -5, -3, 3, -6, 0, 3, 22, -4, -4, -7, -53, -4, 2, 18, -29, 2, 12, 12, -3, -6, 7, -40, -3, -37, 19, 18, 8, -1, -44, -29, 0, -8, 14, -4, -4, -52, 4, 26, -4, -2, -42, 15, 10, -31, -52, -8, -1, -4, -58, -15, 8, -38, -36, -11, -3, 2, -16, 10, 6, 8, -17, -8, -6, 4, -9, -3, 2, -15, 2, 0, -12, -4, 0, -1, 1, -6, 0, -46, 7, -3, -12, 17, -2, -21, -19, 19, -6, 7, 10, 13, 40, 4, -25, -23, 8, 8, -22, 0, -4, -35, 26, -18, 2, -7, 7, 3, -7, -46, -28, 4, -2, 2, -45, -10, 2, 2, -44, 8, 5, -4, -33, -18, 2, 1, -14, -17, 8, 5, 11, -5, 1, -33, -2, 3, -6, 5, 3, 4, -10, 0, 9, -17, -26, 17, -8, 7, 1, -10, -7, -9, 1, -27, 11, 13, 28, 15, 13, 14, -5, 4, 2, -1, -7, -11, 27, 7, -3, 4, -13, -6, -14, -44, 14, -2, 1, -12, -8, -18, 15, -1, -25, 19, -4, -2, 26, 12, 6, 24, 24, 7, -5, -7, -8, -4, 4, -3, -6, -2, 16, -1, -2, -12, -33, -2, -5, -30, -38, -3, -22, -6, 2, 0, 10, -44, -3, -15, 24, 8, -21, -3, -35, -18, -8, 8, -5, 4, -3, -47, -35, 14, -2, -3, -37, 41, 18, -44, -35, -1, -2, -6, -14, -5, 17, -22, -6, 9, -6, 1, -25, -11, 4, 14, 0, -3, -2, -2, -5, 5, -2, -5, 3, -7, 1, 2, -1, -10, 0, -6, 1, 25, 9, -1, 0, -6, 0, 18, -22, 21, 0, -4, -5, -3, 15, -1, -24, -9, 1, -9, -22, 2, -21, -44, 12, 12, 1, 6, 30, 6, -6, 19, -27, 1, -2, -11, -26, -8, -26, 11, -9, -7, -3, -2, -19, 10, -1, 2, 9, -7, 3, -3, -25, 8, -5, -39, 6, -8, 0, -4, 0, -8, 5, 4, 10, 42, 4, -2, -3, -4, 6, -2, -5, 18, -6, -13, 32, 7, 2, -2, 10, -26, 0, 5, 31, -3, -17, -7, -2, 15, -2, 24, 11, 1, -15, -14, 4, 5, 2, -5, -39, -13, 6, 8, -41, 11, -2, 4, 5, 22, -9, 7, 7, -17, -2, 5, -10, -4, -5, -10, -2, -2, 10, -5, -10, -2, -8, -3, -3, -44, -10, -4, -2, -3, -7, -15, 13, -27, -2, -24, 10, -7, -8, -12, 3, -22, 0, -3, -38, 0, -44, -44, -2, -22, -8, -3, 12, 22, 11, -45, 11, -2, -3, 1, 23, -9, 0, -48, -10, 1, -4, 3, 7, -15, -6, 49, -20, -4, 3, 2, 11, 5, -2, -31, -8, -2, 33, 2, 6, 11, -3, 1, 5, 7, -16, -5, -14, -3, -2, 22, -7, -27, -2, -9, -5, -21, -7, 7, 6, 17, 8, 4, 27, -4, -16, 36, 3, 13, -2, 28, 4, -9, -16, 37, -9, -2, -8, 2, -26, -8, -21, -34, -19, 0, 0, -6, 2, -47, -4, -17, 1, -5, -3, 3, -29, -8, -3, -9, -3, 1, 1, -5, 7, 5, -13, -4, 10, 42, -4, -1, -2, 9, -2, -2, -7, -11, -2, -1, 3, -9, -1, 3, -3, 49, 5, -8, 33, 2, 9, 28, -17, -13, 3, -20, -7, -15, -11, -6, 30, -4, -1, -1, 52, -6, -7, 0, 2, -1, 5, -3, 4, -3, -4, 14, -12, -9, -2, -5, -3, 
  -8, -6, 8, 0, -5, 9, -6, -7, -7, -64, 1, -19, -25, 16, -1, -2, -1, 5, 9, -6, 43, 4, -35, -29, -36, -13, 1, -17, -15, 7, -9, 34, 4, -4, 1, -41, 9, -2, 1, -65, 4, 31, -45, 24, 2, -2, 4, -1, 7, -50, 20, 1, 0, 5, -2, 3, 0, -2, 19, 4, -2, 0, -3, -11, -3, -1, 17, -3, 1, -12, 1, -2, 6, -100, -8, -2, -26, -53, 3, -8, 1, 2, -78, -12, -2, 3, 31, -45, -4, -16, -2, 31, -11, 12, -22, 27, 0, -7, -42, -5, 4, 0, 5, 37, 19, -78, -59, -28, 8, 5, -1, -1, -3, -9, 18, 2, 0, 3, 0, 5, 4, -3, 21, -65, 1, -7, 3, -75, 4, -3, -51, -2, 5, 5, 0, 4, 0, -24, 1, 9, 5, -5, -1, -12, -21, -5, -46, 7, 15, -3, 21, -34, -16, -19, 0, -20, -6, 9, 6, 17, 2, -7, 0, -30, 12, 0, -4, 10, 16, -15, 41, 2, -6, 3, -5, -13, -12, -49, -16, 11, 12, 0, 0, 5, 14, 1, -8, -11, 3, 1, 5, -34, 1, 6, 2, 1, -6, 15, -5, -6, -24, -43, 1, 0, -33, 5, 8, 11, 12, -5, 41, -14, 13, -5, 8, 10, 12, 9, 3, 0, 1, 11, 13, 8, 4, -6, 1, 5, 14, 2, 24, -111, 24, 48, -90, 40, -3, 1, -4, 19, 2, 2, 46, 4, -16, 4, 1, 37, 0, 4, 9, 22, 2, -1, 1, -23, -4, -5, -24, 1, -3, -6, -5, 1, -5, -60, -4, -13, -18, -31, -1, 4, -12, 2, -64, -2, 4, -4, 8, -6, -6, -42, 2, 32, -66, 15, -3, 16, -2, -23, -63, -16, 32, 5, 19, -1, -16, -69, -19, -21, -6, 0, 4, -3, 5, 25, 7, -18, -17, -1, -3, 19, -8, 1, 8, 24, 2, 0, 1, -43, 0, -6, -1, -2, 2, 1, 0, 4, -12, -15, 4, 15, 37, 23, 3, 14, -15, 4, -16, -12, -37, -3, 15, -19, 4, -29, 1, 9, 25, 5, 2, -22, 2, 5, 18, -48, -37, -4, -28, 6, 34, -7, 49, 0, 1, 0, -13, 17, -6, -8, -13, 18, -13, 4, 0, -19, -4, -3, -77, -13, 5, -4, 7, 15, 1, -2, -6, 1, -1, -25, 1, -3, -8, -36, -8, 4, 20, 14, 6, -14, 7, 4, 12, -5, -3, 0, 24, 30, 41, 2, 3, 36, -4, 5, -4, 3, -5, -24, 35, 24, 9, -2, 17, 6, 25, 48, -71, 7, 6, -6, -2, 25, 5, 34, 6, 9, 5, -8, -2, 24, -23, -1, 24, 14, 8, 1, 7, -20, 6, 4, 9, -1, -2, 2, 1, -2, -11, -29, 11, 8, -43, -14, -15, -3, 0, 3, -35, 11, -41, -4, 40, -23, 12, -11, -2, 9, -54, 6, 12, 24, -4, 13, 25, -2, 46, 3, 30, 33, -50, -41, -14, -4, 2, 1, 7, 1, 4, 0, 9, -4, -12, 2, 6, 6, -25, 6, 6, -9, 11, 4, -2, -59, -2, 0, 12, -5, 0, 15, -5, 4, -2, 6, -6, -17, -12, -23, -8, 0, -10, 1, -56, 13, -24, -1, -5, 21, 46, 4, 4, 0, 30, 11, 29, -57, -4, 24, 7, -13, -55, 5, -32, 8, 20, -14, -2, -1, 2, -1, 4, -1, -7, -12, 7, 10, -5, -2, -3, 23, -12, -7, 25, -27, 7, -5, -2, 31, 1, 0, 25, -4, -5, -2, 6, 8, 9, -16, -1, 16, 14, -5, 0, -23, -14, -5, -4, 7, -2, 1, 29, 5, 5, 3, 0, 21, 17, 9, 8, 25, -3, 26, 19, 3, 8, -2, -27, 13, 29, 22, -26, 10, 0, -2, 0, 28, 1, 1, 25, 28, -6, -5, 0, 28, -5, -3, 4, 8, 8, -1, 4, -52, 2, 2, 13, -4, 0, -25, 5, -4, 8, 16, -3, -4, 28, -37, 2, -12, -9, -2, 31, -3, -16, -3, -14, -30, -29, -34, 1, -10, -34, 3, -1, 51, 2, 18, 19, -7, 40, 3, 33, 37, -22, -32, -31, 21, -1, -9, 3, 15, -13, -5, -18, 12, 1, 3, -7, -13, -64, 0, 1, 20, 2, 5, 3, -25, 0, -2, 14, -2, 2, 8, 2, 2, 1, 22, 2, 11, 38, 10, 4, 5, -2, 1, -40, -5, -28, -3, 11, -3, 5, -13, -2, -18, -2, -5, 11, -27, 4, -3, 20, -16, -35, 3, 1, 12, -8, 10, -19, 0, 2, -7, 8, -3, -2, 3, 17, 2, -4, 1, 4, -12, 30, -1, 26, 0, 11, 7, -1, 10, 3, 6, -10, -2, 1, -27, 1, 4, -10, 18, -6, 0, -22, 10, -3, -8, -10, 0, 8, 6, 14, -7, 5, -12, 18, 11, -6, 19, 18, 1, 1, -7, 1, -20, -22, 36, -16, 1, -26, 17, 13, 6, 1, 23, 5, 5, -2, 24, -9, 8, 5, 29, -5, 7, -5, 1, -56, -4, -31, 9, 6, 0, -3, 31, -3, 2, -4, -1, 4, -20, -5, 2, -7, 2, 8, 1, -8, -6, 1, 20, 4, 3, 32, -13, -14, 2, 2, -7, -26, -23, 7, 25, 5, -7, 25, 54, 3, -33, 11, 25, 45, 0, 29, 30, -19, 4, -47, -4, 3, 3, -3, -3, -19, 59, -54, -25, -2, -1, -3, -29, -7, -3, 12, -4, 16, -6, 7, -7, -2, 1, 2, -6, -2, 5, 0, -3, -4, 28, 4, 10, 23, -23, 4, 9, -4, 3, -13, -9, -29, -3, 12, -17, 33, 7, 0, 8, 24, 3, 2, -3, 5, 33, -2, -8, -22, -1, 15, -1, -5, 8, -3, -24, -8, -8, 1, 3, -10, 22, -2, 7, 12, -3, 6, -37, 22, -3, -12, 15, 9, -9, -7, 19, -7, -1, -6, -2, -2, -30, 4, -2, -6, 2, 0, -5, 9, 13, 2, 33, -4, -5, 3, 13, 1, 6, -2, -37, -7, 49, 0, 32, -34, 9, 16, -37, 3, 14, -9, 41, -45, -1, -29, -3, -10, 23, -14, 11, -5, 1, -10, 7, -27, -16, -27, -4, 2, -9, 0, -9, -88, -1, -42, 17, 3, 1, -2, 8, -9, -5, -14, -5, 1, -25, -2, 3, -6, 1, 4, 10, 17, -4, 10, 9, -9, 5, 20, -13, -2, 3, 1, 9, -23, 0, 0, 3, 10, 10, 10, 4, 2, 18, -8, 20, -11, -3, -4, 7, -20, -9, -29, -32, -4, 3, -7, -4, -2, 10, -33, -52, 15, -8, -1, -28, -13, 0, -9, -16, 5, -2, 2, 23, -3, -7, 3, 0, 6, -11, 0, 4, -4, 2, 0, 13, 22, -10, -4, 18, -3, -2, -27, -17, 23, 2, 19, -19, 1, 6, -1, 24, 26, 18, 12, 1, -6, 3, -13, 21, 17, 1, 10, -5, 5, -22, 49, -4, 2, -8, 1, 16, -13, 15, -22, 13, 6, 1, 0, -30, 16, -6, -29, 3, 10, -4, -1, 16, 7, 4, 31, 3, -1, -3, 3, 13, -4, -1, 6, 0, 6, -5, 3, 14, 7, -5, 9, -6, 12, -4, -6, -16, -31, -57, -15, -97, 20, 2, 11, -8, -1, 24, 11, -68, 10, 1, -12, -23, 8, 2, 1, 27, 4, 2, 4, -43, -9, -60, 18, -59, 2, -4, 2, -15, -34, 6, 31, 39, -7, -4, 4, 10, -7, 5, -7, -3, 0, -1, 3, 23, -9, 14, 3, -2, 25, 8, 1, 11, 11, 0, -3, -20, -60, -3, 4, 10, -20, -14, 9, -4, 16, -2, 10, 2, -3, -10, -16, -32, 23, 3, 24, 20, -14, -8, -34, -14, 2, -2, 0, 23, 0, -3, -22, -72, 0, -2, -4, -37, 9, 5, -6, -5, -1, -3, 5, 6, -2, 0, 8, 0, 5, -6, 2, 11, -12, 11, 0, -8, -13, -7, 8, 3, 2, 0, -21, -14, -21, 1, 24, 14, -2, -10, 5, 25, 11, 6, -4, -14, 2, -33, 11, 29, 6, -5, 7, -21, 20, 6, 6, 7, 2, 0, 2, -16, 6, 7, 7, 10, -3, -8, -6, 5, -8, -4, -17, 19, 11, 5, 6, 15, 
  -2, -3, -57, 6, -4, -2, 1, 0, -1, -77, -15, -7, 28, -21, -1, -11, 8, 1, -50, -7, -70, -3, -11, -6, 16, 46, -3, 21, -42, 4, -12, -1, 0, 3, 0, 17, 7, -5, -42, -61, 22, -47, 15, 13, -4, -1, -5, 13, 6, 16, -33, 10, 2, -8, -4, 10, 14, -5, -27, -32, 2, 5, 1, -59, -4, 5, -5, 11, -6, 18, 2, -1, -8, 8, 2, -13, -35, 2, 0, -13, 13, 2, 23, -19, 11, 0, -32, -21, 23, 27, -4, 1, -24, -1, 3, -47, 5, -6, -9, 15, -13, -3, -8, -58, -2, -15, 14, -50, 10, -1, 2, -20, -5, 4, -69, 2, -9, -12, -7, 28, 13, -3, -72, -8, 5, 2, -1, -10, -7, 2, 14, -2, -6, -35, -6, 3, -6, 3, -4, 7, 12, 30, 6, 3, 3, 0, 33, -6, 9, -3, -9, 13, 3, 2, -7, 1, 13, 12, -3, 23, 4, 8, 24, 13, 19, -5, 19, 4, -17, 5, 3, 10, 7, 4, 5, -3, 1, 20, 29, 19, -18, -1, -4, -61, -24, -3, -29, 8, 4, 5, -5, 10, -6, -4, -10, 1, 3, -71, 2, 7, -4, 40, -3, 6, -4, 7, -14, 2, -6, 0, -68, -34, -7, 1, -10, -34, -6, 5, -2, -25, -11, 1, 1, -29, -1, -21, 12, 12, -98, -2, -16, 39, -31, -13, 25, -25, -1, -2, -13, -22, -3, 17, -17, -32, 1, -8, -3, -42, -127, -2, -14, -22, -8, -1, 1, 39, -4, -2, -27, -3, 0, -32, 11, -2, -12, -10, -3, -7, -64, -43, 0, -27, -9, -2, -23, -23, -6, -5, -17, -51, 5, 11, 2, -26, -49, 12, 4, 53, -3, -18, 65, 19, -87, -1, 16, -17, -39, -38, -25, -17, -9, -9, -5, -41, -4, -15, -26, -45, 13, -5, -3, -23, -54, 6, 1, -82, -6, -2, 1, -19, -5, 4, -2, 1, -5, 25, -3, -3, -4, -25, -6, -6, 12, 15, -8, -12, 1, 2, -16, -5, 16, -4, -10, -24, -32, -19, -3, 1, -6, 2, -15, 22, 3, 21, -14, -9, -12, 2, 1, 2, -64, -6, -33, -30, -2, 0, 17, -58, -26, -3, -24, -19, -3, -6, 0, 4, 36, 1, -10, 27, 2, 2, -2, 1, 1, 0, 26, -5, 3, 27, 0, -3, -15, 46, -5, -18, 18, 2, -4, -19, 0, -2, -31, -22, -63, 6, 21, -54, -38, -43, 1, -47, 15, 8, 3, -11, 0, -27, 14, -10, -32, 2, -9, -7, -56, 7, -15, 3, -3, 6, -1, -22, -29, -27, -49, -92, -5, -17, -3, -7, -10, 0, -30, 13, 5, -2, -5, 25, -2, -1, -29, -6, -3, -9, 5, 1, -13, 10, 6, 3, -48, -23, 7, 0, -1, 4, 0, -34, -11, 0, -16, -64, -23, 13, 4, -47, -19, 7, -30, -65, 6, -36, 20, 22, -30, -6, -18, -11, -23, -14, -43, 17, 0, 0, -6, -55, -9, -33, 29, -61, 24, -18, -6, -48, 18, 0, 14, -20, -2, -2, 1, -14, -5, -3, 13, 2, 4, 31, -2, 0, -14, -23, 2, 8, -4, -36, -4, -20, 0, -3, -21, -20, -22, -5, -17, -14, -57, -18, -2, -37, -4, 3, -18, 19, -8, 20, -39, -17, 9, -1, 20, -15, 24, 2, 27, -28, -3, -3, -17, -76, -2, -11, -35, -72, -20, -7, -2, -1, 23, 1, -33, 33, 10, -2, -4, -14, 0, -1, 27, 6, 4, 23, 0, 4, -22, -2, -1, -6, -23, -1, -5, -24, 13, 5, -32, -17, -54, -2, -21, 20, 5, -55, -3, -30, 33, 10, -10, -41, -6, -17, 44, -24, 0, -9, -14, -48, -48, 49, -5, 13, 0, 0, 8, -87, -11, -8, 48, -84, 4, -12, 0, -19, 35, -1, -6, -13, 0, -5, 1, 31, 5, 2, -29, -2, 0, 8, 3, 6, -5, -20, -2, 15, -35, -29, 3, -18, -3, 2, -38, -17, -6, -4, 0, -8, 29, 52, -8, -28, 9, -6, -4, -70, -3, -18, -9, 28, 0, 4, -29, 13, 20, -21, -7, 4, -5, -1, -9, 17, -11, -28, 39, -12, -7, -15, -7, -20, 32, 4, 11, -17, -4, 0, 5, -7, -2, 5, -12, -4, -5, 27, 0, -2, 8, -33, 1, -3, -12, -9, -7, -18, -3, 1, -21, -18, -69, 1, -19, -8, -10, -13, -1, -33, -8, -1, -14, 39, 0, -16, -38, 4, 21, 3, 34, -18, 43, 0, 39, -53, 8, 5, -11, -37, -1, -56, -3, -29, 9, -5, 0, 5, 14, 3, -14, 35, -3, -5, 4, 11, 1, -6, 27, -4, -4, 0, 4, -3, 1, 13, -5, -8, -28, -59, 4, -7, -11, -8, -19, -3, -94, -1, -12, 22, -12, -31, 4, -27, 33, 6, 18, 6, -1, -21, 47, -69, -10, 3, 30, -38, -22, 36, -1, -4, -10, 0, 9, 26, 3, 16, 24, 31, 12, -14, -5, 19, 4, -1, 9, 33, -10, -1, 0, 19, -5, -3, 5, -3, 3, 2, 5, -1, 2, 6, -4, -1, 46, 0, 0, -4, -5, -6, 9, -3, -29, -1, -29, 12, -12, -10, -4, -19, 6, 3, -4, -46, -1, 9, 27, -33, 7, -3, 18, 25, -14, -16, 41, 16, -2, 4, 3, 12, 4, -12, 54, 28, -8, -7, 3, 45, 10, 0, 21, -5, 0, -6, -3, 38, 2, -2, 6, -1, 0, 16, -1, 0, -3, -14, -7, -10, 6, 36, -19, -18, -14, 4, 11, 0, 40, -5, -10, 23, 6, -19, -4, -40, -13, 2, -12, 37, 3, -51, -10, -17, 33, -4, 3, -15, 25, 19, -30, -35, -1, -3, -18, -29, -2, -20, -2, -26, -16, -11, -6, -10, 24, 0, -3, 3, -3, 0, 3, -10, 4, 5, 37, -6, 7, 33, 0, 9, 1, 6, -7, -4, -24, -69, 8, -3, -2, 3, 3, -8, -77, 3, -28, 23, 42, 7, 3, 8, 29, -13, 7, 15, 3, -41, 14, 34, 20, -5, 18, -21, 9, 26, -8, -3, -5, -2, -1, 21, 8, 39, 5, 29, -8, -13, 1, 24, 11, -4, 6, 28, 10, 2, 3, -6, -1, -1, -11, 2, 1, 34, -5, 3, -3, 16, 0, -1, -1, -21, -7, 3, -5, 2, -2, -21, 40, 4, 3, 34, 27, 1, -5, -29, -10, 7, 10, 6, -1, 21, 39, -16, 4, -2, 16, 16, 21, -20, -14, 30, -6, -5, -11, -19, 11, 14, 30, 38, -12, -5, -3, 49, 19, -5, 26, -7, 0, 1, -7, -1, -3, 0, 35, 1, -2, 8, 3, -5, -16, -34, 1, 13, 10, 4, -13, 3, 13, 4, -6, -31, -28, 6, -1, 3, 10, -9, 0, -37, 1, -6, -8, -14, -5, 22, -11, -14, -8, 5, -15, -14, -14, 37, -18, 13, 0, 1, -15, 14, -4, 0, -15, 15, 10, -5, -9, 23, -22, -5, 13, 17, 7, -1, -5, 22, 3, 1, -64, -5, 2, 38, 2, 10, -3, -12, -5, 0, 8, -32, -6, -10, 3, -1, -37, -22, -38, 5, -16, 17, 14, 27, 0, 36, 3, -2, -5, 22, 3, -12, -54, 17, -5, 0, -2, -23, -15, -35, -4, 4, -7, 2, -8, 6, 6, 38, -43, 28, -9, -4, -6, 24, 8, -2, -26, 9, 10, -3, -3, -19, 4, -5, -7, -5, 0, 14, 5, -8, -4, -6, -6, -2, 28, -13, -1, 5, -11, -1, -34, -4, -48, 3, 19, 3, 11, 16, -2, 23, -3, -7, -14, -13, 0, -49, -39, -5, -5, -2, -3, -1, -13, -31, 21, -21, 3, 2, 0, -27, -9, 4, -19, 53, -5, -11, -6, 14, 15, 2, 11, -9, 12, 5, -1, -4, 0, -3, 53, 2, 0, 1, 0, -18, -4, 34, 2, 12, 18, 14, -9, -3, -15, 2, 14, -26, 38, 0, 9, -19, 6, 0, -3, -16, -32, -5, -10, -33, -2, 20, -23, -13, -11, -3, 2, 29, 0, 29, -15, -17, 1, -4, -1, -23, -9, -6, -18, -14, 1, -5, -3, -14, 9, 6, 19, 14, 15, -3, 1, 26, 
  -1, 5, -48, -9, 4, -8, -6, 4, -22, -4, -12, -7, 50, -28, 5, -18, -20, 3, 1, 13, -23, -3, 53, 43, 14, 1, -2, 1, 12, -3, 0, 23, 1, -16, 2, -26, 7, 3, -8, -5, -12, 27, -33, -14, 0, 2, 0, 1, 6, 13, 26, -14, -5, 1, 2, -9, 31, -6, 9, -26, -10, -5, -3, 19, -6, 2, -65, -6, -2, -35, -4, 3, -19, 11, 5, -7, -25, 37, -13, -4, -21, 4, 12, 3, 4, 2, -39, 18, -2, 12, 1, -47, 3, -4, 9, -27, -2, -9, -5, -11, -20, -6, 6, -81, 8, 2, -46, 28, -6, 5, -7, 38, 7, 7, 14, 21, -15, 1, -2, -21, 7, -5, -12, 26, -6, -5, 3, 32, 1, 7, 8, -7, -3, -11, -3, 2, -6, 22, -10, -8, 8, -32, -3, 1, 13, -1, 31, -28, -16, 7, -31, -11, -31, -8, -13, -8, -26, -6, -13, -83, 1, -14, -5, -4, -55, -3, -31, -12, -49, -38, 12, -14, -4, -1, -3, -21, 0, -9, 19, -27, -11, -11, 1, 21, -26, -10, 32, -19, -17, 3, -4, 10, 0, -1, -73, -1, 7, 41, 2, 4, 13, -60, 4, 1, -39, -24, 1, -6, -12, 5, -34, -3, -48, 3, -16, 20, 1, -17, -2, 24, -62, -9, 6, 13, 6, 19, -28, -40, 6, 5, -16, -12, 39, -24, -30, 16, 5, 4, -8, -36, -1, -7, 13, 5, 2, -2, -3, -10, 8, -3, 20, -76, 0, -2, -4, -20, 2, -1, -7, 0, -2, 21, -4, -1, -6, -10, 2, -1, 2, 1, 9, -4, -5, 1, 21, -7, 5, -5, -1, 59, 29, 30, 1, -15, 41, -3, -8, -8, 0, -6, -39, 11, 18, 6, 38, -94, 48, 18, -8, -20, 0, 2, 0, -3, 6, 2, 30, -8, -1, -4, 4, -9, -1, -7, -7, 0, -11, 1, -6, -1, 1, 1, 16, 2, 3, 48, -2, 5, 8, 23, -2, 17, -31, -9, 4, 14, -8, 2, 33, 9, -36, -2, -4, 35, 35, 16, 4, 15, 7, -7, -1, -50, -1, -27, 11, 21, 23, -3, -6, 7, 37, -2, 34, -8, 0, 3, 6, -31, -15, 4, 21, -32, -18, -18, -2, 46, 38, 1, 31, -22, 4, -1, -5, 17, -2, -2, -79, 1, -4, -26, -3, 8, 5, -46, -7, 1, -26, -49, 2, 1, -9, -1, 6, 3, -3, 1, -16, 2, -16, -8, -1, -32, 6, -10, 9, 38, -1, -12, 16, -24, 1, 3, -39, -5, -12, -93, 12, 41, 2, -3, -1, -7, -14, 6, 33, -7, 1, 1, 1, -15, -7, -3, -22, -75, -2, -3, -3, -20, 3, 3, -1, -2, -3, 9, -4, -6, 8, 6, -5, -18, 62, 11, 2, -18, 10, -2, -36, 1, 19, 4, 12, 19, 10, 6, 1, 3, 24, -3, -19, 35, 2, -2, -80, -13, -45, 0, 24, -47, 14, 21, 50, -95, 5, 0, -4, -1, 14, 1, 13, -23, -8, 3, -1, 1, 31, 5, 6, 37, -15, -4, 2, 13, 0, 1, -1, 2, 8, 4, -1, 7, 13, 29, 4, -7, 64, 21, 4, 5, 7, -2, 43, 13, 5, 1, 19, -13, -12, 15, -4, 17, 4, -9, 12, -41, -3, -3, 24, 22, 18, 3, 32, 9, 9, 21, -4, -11, 5, 2, 12, -2, -16, -1, 34, -5, 9, 5, 7, -2, 11, 1, 0, 20, 6, 3, -3, 2, -6, 1, -19, 6, 7, -10, -10, 5, -10, -16, -1, -12, 17, 7, -3, 3, -4, -1, 16, 1, 13, 1, -51, -47, -19, 0, -1, -14, -34, -17, -9, 2, -5, -7, -24, -8, -29, 4, -5, -11, -42, -42, 20, 20, -9, 5, -4, -22, 5, -22, -29, -23, 2, -1, -1, -38, -22, -1, -41, -6, 0, -4, -7, 13, -3, 3, 17, 6, 0, 21, 1, -13, 8, -11, 0, -6, 45, 45, -9, 3, -5, -1, 6, 9, 10, -1, 8, -5, -2, 29, -1, 31, 9, -1, 2, 15, 1, -2, 25, 6, -9, -1, -11, -24, 0, 24, 37, -14, -1, 2, 2, 3, 0, -1, -15, 20, -6, -3, 4, 20, 14, -4, -4, 21, -3, -3, 2, -6, -1, -3, -19, -1, 2, 29, -2, 4, 0, 4, 6, 16, 39, -10, 1, 9, -28, -1, 21, 20, 16, -2, -21, -21, -17, 15, -11, -2, -10, -1, 12, -45, -4, -7, 9, -5, 3, -1, -29, -4, -11, -6, 13, -18, -4, -4, 16, -10, -11, 12, -11, 3, -17, -11, 3, 29, 9, -6, 2, 19, 1, -6, -3, -5, 3, 3, -22, 3, 2, 8, -13, -14, 9, -2, -6, -5, 26, -8, 5, 2, -6, 1, -12, 15, 12, -3, 16, -35, -66, -42, 0, -40, -20, -1, -9, 5, 1, -6, 15, -53, 5, 2, 4, 2, -9, -28, 9, 11, -7, 2, -1, -16, 10, -32, -25, -42, -8, -3, -2, -23, 0, -1, -3, 1, 5, 1, 0, -42, 1, 1, 12, -4, 5, -7, -2, -8, 6, 11, -2, -3, 22, -15, -2, -8, -15, -5, 20, 15, -1, 1, -10, 10, -4, 1, -5, 16, 13, 0, -4, 1, 4, -3, -18, 4, -9, 5, -14, -35, 13, 1, -22, -12, 0, 4, -6, 6, 10, -16, -12, 16, -22, -1, -2, -11, 24, -10, -25, 28, -1, -5, -1, -24, 1, 2, 10, -2, 6, 9, -3, -1, -14, 30, 0, 14, 35, 10, 3, 9, -10, 1, 20, 5, -29, 2, 14, 5, -40, 1, -18, 21, -69, -2, 3, -48, 4, -16, 1, 13, -1, -2, -27, 19, -5, -15, 16, 12, 4, 5, 23, -15, 10, 29, 23, 5, -17, -11, -2, 9, 4, 0, 26, -34, -5, 1, -4, -15, -3, 2, -21, -3, -3, -11, -1, 2, 15, -14, -3, 2, 22, 8, 0, 14, -10, -1, -8, 8, 27, 0, 53, -24, -34, -39, -1, -21, 0, -5, 7, 9, -4, -20, 24, -41, -1, 4, -2, -15, -4, -46, -19, 14, -4, 2, 2, 7, 6, -13, 24, -3, -4, -6, -2, 5, 34, 2, -23, -27, -1, -3, 2, -37, 5, -1, 15, 3, 0, -15, -4, 3, 14, 3, -5, -6, -8, 2, 0, -5, -6, 3, -2, 16, 5, -1, -27, 11, -10, -18, -3, 32, 7, -9, 21, -7, -5, 28, -20, -6, -5, 8, -14, -19, -13, 26, -31, 19, -2, 1, 7, 0, -5, 8, -4, 34, -3, 5, -3, 10, -18, 3, -24, 21, 5, -5, 2, 14, 0, 6, -1, -3, 2, -3, 2, 2, 4, 22, -3, -10, -16, 5, -3, -4, -3, -4, 29, 14, -35, 3, 1, 2, -12, 32, 4, 5, -18, -5, 17, -41, -5, -13, 21, 8, -18, -2, -18, 9, 0, -13, -48, 0, 3, -7, 10, -30, 10, -18, 21, -12, -12, 0, 5, 0, 4, 8, 9, -13, 1, -5, -1, -6, 3, -3, -32, 1, -4, -39, 3, -14, 2, -1, -4, 1, 10, 44, -5, 4, 7, 3, -11, 0, -7, -2, 7, -8, 10, 5, 3, 6, -15, -5, 8, 31, 5, -22, 24, 9, -32, 2, 11, 7, 2, -2, 19, -16, -3, 6, 4, 7, 0, 13, 17, 4, -4, -14, 7, -17, 27, 1, -26, -45, 2, -2, 1, -29, 0, -2, 10, 8, 4, -33, 0, -13, -11, -4, -5, -6, -53, 15, 1, -1, -19, -1, 2, 16, 21, 1, 5, 11, 18, -4, -20, -15, -43, 3, 4, -26, 2, 0, 18, 4, -5, 0, -13, -13, 22, 19, -47, -8, -3, -6, -3, 20, 2, 15, 29, 45, 7, -5, 5, -10, -7, 1, -2, -8, -5, 3, -1, 30, -1, 2, -58, -7, -4, 7, 1, -4, -12, -48, -4, -15, -54, 2, 10, -5, 0, 0, 17, 13, -14, -1, 0, -13, 2, -3, -3, -18, -42, 3, 7, -75, 6, -44, -14, -24, 16, -1, -3, -25, -19, -24, 23, -34, -4, 1, 2, -16, 12, -9, -1, -2, -6, 7, -1, 41, -27, -1, -19, -27, -13, 2, -3, -31, 
  12, -1, 38, -3, -1, -30, 5, 3, 10, 43, 9, 19, -41, 25, 2, 23, -17, 1, 11, 23, -14, -1, -12, 3, 3, 5, 1, 24, 32, -15, 5, -28, -6, 1, -6, 6, -23, -3, 19, 51, -11, -52, -11, -8, 3, 6, 0, -1, 0, 18, -4, -1, -12, 3, -2, -7, -37, -6, -9, 14, 5, -2, -3, 15, -2, -6, 9, -1, -7, -6, -8, 1, 1, 16, 4, -7, -31, -23, -5, -2, -3, 1, -13, 2, -16, -5, -13, 33, -15, -10, 2, -8, -12, -6, 19, -73, -1, 9, 45, -31, -6, -4, -39, 11, -8, 9, 1, 14, 1, -1, 0, 19, 0, 3, 13, -45, -2, 0, 3, -33, 5, 0, 0, -17, -8, 2, 7, 2, -8, 2, -49, -2, 0, 25, -4, -4, -9, -28, 1, -20, -59, -30, -3, 13, 1, -1, -51, -14, 7, -1, -11, 13, 2, -9, 1, -3, -28, -17, 23, -17, -3, -35, -63, -9, -7, -4, -40, -1, -9, -32, -19, -41, -1, -6, 5, 25, -2, 10, -52, 19, 18, 1, -7, -7, 16, -1, -52, -34, 13, -1, 0, -64, 5, -2, 49, -1, -2, -77, 4, 4, -21, 47, 0, -3, -47, 50, 3, -2, 12, 4, 38, -9, 36, -1, -50, 11, 3, 10, 1, 40, 39, 2, 5, 8, 1, 23, 14, 27, 9, -3, 33, 35, -28, -30, -28, -22, 3, 2, 7, -17, -7, 24, -15, -41, -14, 2, -5, -39, -1, 3, -4, 14, 5, -4, 2, 30, -5, 4, -51, 3, 2, -27, -2, 4, -17, 55, 0, 8, -77, 16, -4, 8, 17, 4, -15, -8, -60, 1, 18, -32, 14, 13, -7, 9, -62, -3, -12, -90, 6, -1, 53, -3, -15, -8, -46, -17, -3, 41, -78, 24, -1, 9, 5, 32, -32, -6, 28, 20, -8, 4, 6, -39, 40, 0, -3, -69, -12, -1, -4, 57, -2, 4, -57, 3, 3, -43, -5, -2, -7, -30, 5, -13, -16, -51, 4, -8, 11, -1, -40, 6, 5, 3, -2, -15, -19, -11, -4, -22, -65, -6, 19, 22, -2, 17, -56, 2, 1, 5, -26, -33, -50, -43, -65, -60, -6, -1, -17, 16, 15, -18, -2, 15, 15, 13, 5, -10, -80, -2, -16, 3, -7, -2, 1, -52, 1, 3, 45, 0, 2, -60, 4, 2, -5, 39, 3, 7, -44, 60, 9, 4, 10, 5, 30, -22, 69, -2, -49, -27, -6, 18, 3, 12, 24, 9, -2, 2, 2, 38, -29, 18, 10, 3, 32, 31, -11, 1, 22, -24, 3, 7, 18, -34, 13, 15, -21, -3, -5, 4, -1, -28, 23, 3, 0, -10, -15, -2, 3, 10, -2, 1, -6, 5, 5, -21, -4, 0, -12, -4, 4, -3, -24, -6, 4, 9, -1, -6, 8, 7, -22, -1, -29, 33, 14, 24, -3, -3, -18, 5, 9, -25, -2, -10, 10, 11, 2, 0, -10, -20, 39, -12, -33, 23, 3, -7, 4, 19, 2, -3, 12, 14, -5, 1, -1, 2, 14, 1, 11, -75, -3, -4, 2, -15, -5, 4, -31, 2, 0, -38, -2, -14, 1, -14, 4, -4, -28, -52, -8, 4, 3, 8, -34, -8, -49, -4, -10, 1, -10, 2, -3, -6, -79, 4, -10, -7, 0, -21, -35, -13, 16, 4, -14, -21, -42, -70, -17, -31, -1, 3, 3, 23, 12, 18, -16, 8, 11, -7, 3, -5, -73, 1, -16, -17, -8, -8, 5, -68, -3, 4, 27, 1, -1, -102, -2, 2, 2, 37, -6, -1, -31, 16, 4, 6, 4, 2, 29, 0, 31, -6, -10, 16, 11, 10, 1, 7, 29, 14, 19, -20, 6, 7, 1, 19, 20, 3, 36, 26, -49, -13, 2, 8, -1, 0, -6, -1, 2, 4, 10, -27, -6, 0, -3, -76, -24, 1, 32, -1, 2, 4, -2, 39, 0, 0, -32, -5, 4, 39, -3, 4, -17, -12, 1, -12, -1, -59, 4, -8, -8, -4, -35, 4, 9, -1, 22, 28, 18, 19, 3, -1, 5, 6, -7, -26, 0, 20, 9, -5, -24, -4, -2, 15, 15, -8, -10, 52, -6, 6, 1, -13, 0, -11, 36, 1, -11, 3, 5, 0, 23, 1, 8, -76, -7, 1, 0, 7, -1, -1, -17, 1, -1, -2, 2, 2, -12, -18, 2, -11, -59, -43, -8, -12, 13, 7, -9, -10, -13, -6, 27, 30, -6, 11, -5, 15, -54, 9, 2, 17, 6, -5, -59, 0, 37, 0, -11, -6, 4, -59, -9, 9, 0, -4, 0, 5, 9, -3, -25, -9, -10, 2, 4, -4, -58, -1, -21, -62, -7, 2, -4, -31, 3, 2, 3, 5, 4, -30, 5, 10, -13, 24, 3, 6, -24, 20, -2, 7, 11, 5, 31, -18, 13, 2, -35, -16, -7, 21, -1, 7, 2, -1, 2, -23, -1, 24, 2, 14, 4, 5, 21, -4, -44, -30, -22, 22, 1, 0, 2, -16, 11, -10, 12, -18, 1, -2, 4, 3, 16, 7, 25, -38, -6, 1, -5, -13, 2, -2, -22, 0, -4, 37, 3, 1, -3, -40, 3, 1, -3, -13, 7, 8, -3, 1, -43, -2, -25, 0, 2, -19, 13, 2, 1, -28, -20, 1, 10, -25, -1, 22, 14, -35, -25, 1, -30, -16, 18, 9, 4, 27, -1, -1, -9, 10, 2, -41, 30, 29, 1, -9, 1, 32, 16, -4, 21, -56, 0, 6, -7, -37, -1, -6, -49, -1, 8, -26, -2, 5, -10, -64, -10, -20, -21, -20, 4, -9, 12, -2, -12, -3, -16, 0, 10, -35, -33, -10, 0, -28, -18, 3, -12, -22, 1, -21, -28, -34, -9, -1, -34, -17, 2, -30, -21, 6, -6, -3, -19, 15, 4, -68, -24, 2, -30, 1, 0, 2, -74, 3, -33, -1, -7, -4, 6, -10, 5, -6, -1, 1, 1, -23, 0, 2, -20, 28, 3, 6, -38, 28, -9, 0, 8, 6, 18, -11, 44, 0, -7, 9, 13, -9, 7, -45, -3, -1, -12, 7, 1, 10, 26, -29, 15, 3, 20, 15, -34, -22, -12, 19, 2, 3, 14, -28, -5, -29, 17, -29, -10, 2, 1, -3, -7, 3, 34, -20, 1, -1, 3, 17, -1, 2, -13, -5, 2, 7, -2, -3, -14, -44, 3, -12, -41, -14, -6, -6, 11, -1, -30, 11, -56, -2, -4, -17, 8, -22, 3, 2, -44, -3, -35, -15, -2, 11, -23, -13, -3, -3, -29, -32, 6, -9, 3, 4, -4, -1, 7, 35, -4, -12, 14, 9, -11, -6, -2, 0, 19, -2, 19, -38, -2, 3, 6, -19, 1, -2, -78, 3, 4, -1, 4, 1, -12, -17, -2, -23, -43, -11, 2, -5, -10, -3, -21, -22, -11, 1, -18, -17, -18, -8, 0, -5, 4, -4, -3, -4, 2, 18, -5, 11, -7, -6, -5, -20, 9, -65, 16, -37, 2, 1, 2, 11, -1, -16, 16, 5, -11, 7, -3, 7, -28, -2, -3, -57, -7, -7, 2, -30, 0, 0, 30, 3, -7, -22, -6, -6, -1, 61, -2, 0, -10, 2, 12, -18, -10, -1, 17, -8, 8, 6, 12, 10, 16, -6, 22, -7, 8, 1, -6, -29, -1, -17, 29, -5, 51, 5, -10, 0, -51, 8, -32, -12, 1, -6, 3, -16, -11, -21, 26, 1, -17, -2, 3, -6, -20, 4, -20, 4, 4, -4, 2, -6, 1, 3, -3, 0, 0, 11, -2, -1, -5, -27, -1, -6, -21, -6, 5, -5, 0, 4, 18, -10, -29, 4, -10, -23, 15, -9, 11, -23, -8, 3, -2, -27, -5, 7, 10, 8, -23, -1, -39, -14, 1, 27, -20, 11, -5, 4, 8, -16, -6, 7, 24, -6, 1, -4, -1, 15, -2, 6, 22, -9, 3, -4, -3, 15, -5, 2, -18, -6, -2, -24, 2, -7, -7, -29, 3, -8, 11, -10, -6, -17, 6, -2, -29, -14, -30, -2, -17, -7, 1, -4, -16, -21, -5, -5, -7, 32, -7, -28, -36, -1, -8, 6, -6, 5, -7, 5, -43, -32, 3, -9, 1, -16, -4, 2, -5, 1, 1, -4, -3, -13, -2, 8, -22, -31, 11, -3, 0, -36, 
  0, -3, 13, 0, 0, 31, 0, -3, 8, 12, 4, -3, 42, -18, -3, -2, 10, 3, -28, -28, -2, 2, 30, 10, 2, -19, 3, -22, -22, -10, 1, 0, -2, 4, -30, -16, 15, 2, -56, 72, 17, -29, 73, -41, -2, -1, 0, 9, 17, -52, -52, 9, 7, -5, 1, 27, -3, 1, -61, 0, 4, -1, 0, -7, 2, 0, 6, 3, 5, 35, -2, 2, 11, 19, 6, -5, 21, 45, 1, 14, 2, 2, 16, 14, 22, -7, -39, 13, -41, -80, -1, 13, 24, 6, -4, -6, 0, 21, 45, -85, -6, 6, -10, -27, -36, 13, 33, 37, -5, 3, 3, -30, 4, -66, 13, 54, -17, 2, 4, 32, -32, 8, -29, 30, -12, -5, -2, -3, -2, 5, -28, -1, 0, 8, 0, -5, 11, -39, -2, -5, -60, 9, 0, -8, -26, -1, 32, 26, -40, 5, -76, 6, -5, 16, -1, 0, 20, -3, 10, -21, -4, 21, 32, -17, 0, 2, 15, -45, 32, 20, -35, 50, -5, -1, 7, 33, 11, -5, -31, -2, -9, 2, 4, 8, -7, -2, 26, -5, -12, -3, 7, 9, 4, -2, -37, -2, 1, 10, 5, -5, -2, 19, 2, -10, 19, -18, -14, 6, -2, -3, -88, -3, -15, -1, 35, -40, -24, -40, -1, -12, -15, -15, -6, -99, -1, -23, 14, -41, -107, -7, -101, 64, -9, -9, 71, -12, -7, 2, 11, 48, 7, -60, -43, 43, 0, 2, -3, 21, -54, -1, -111, 27, 1, 7, -1, -33, 0, 5, 49, -1, -4, 2, -5, -2, 8, -4, -7, 0, 50, 45, -13, 5, -10, -6, 0, 9, 58, -2, -10, -62, -67, -53, -6, -43, 23, -6, 1, -9, 0, 40, 3, -91, -90, 1, -77, 10, 10, 13, 68, 11, -5, -1, 2, -36, 12, -52, -56, 0, -5, 4, -3, -9, -32, -8, -61, 55, -8, -2, 2, -3, 3, 1, -2, 6, 3, -12, 3, -6, -9, -39, 2, 5, -42, 46, -5, -6, -9, 1, 75, 10, -28, -1, 2, 15, 16, 5, -3, 17, -30, -3, -1, 13, -3, -21, -7, -5, 25, -8, 88, -3, -33, 31, -36, 73, -8, -2, -4, 23, 16, 33, 31, 11, -8, 6, 3, 23, 4, -1, 31, 3, -9, -4, 1, 14, 0, 0, 7, -2, -4, 7, 2, -2, 2, 29, 0, 4, -42, -3, -2, 8, -10, 4, -78, 15, 14, 3, -36, -33, -52, 7, -3, -14, -65, -6, -8, -56, 3, 16, 40, -52, -75, 1, -89, -25, -10, -35, 34, 6, -9, -3, -2, 30, -13, -50, -2, 46, -1, -8, 1, 30, -26, -4, -99, 16, -6, 4, 3, -36, 3, 6, 16, 1, -6, -4, -10, 6, 2, -17, -10, -8, 20, -13, 2, 12, -14, -5, 4, -4, 4, -2, -10, -16, -40, -60, 7, -38, 15, -6, 3, -24, -4, 36, 17, -70, 6, -2, -60, -6, 19, -3, 48, 32, -8, 3, 0, 13, 18, -25, -51, -2, -22, 2, -6, 40, -20, -7, -56, 33, -11, 2, 5, 13, -7, 4, 9, -2, 2, -12, 2, -7, 7, -53, 4, 3, -28, 33, 4, 3, -10, -4, 32, -3, -19, 9, -12, 9, 28, -27, 7, -23, -8, -12, -1, -36, -2, -11, 27, -9, 5, -1, -18, -7, -20, 12, -44, 30, -1, -1, -14, 23, 1, -9, 3, 18, 1, 9, -4, 18, -40, -10, -16, 2, -12, -5, -2, 16, -4, 0, -11, -3, 1, 4, -5, -7, 1, 18, -4, 3, -1, 2, -8, 15, -8, 0, -48, -17, -14, -5, 3, -6, -17, -2, 0, -8, -17, -5, -16, -71, 2, 14, 23, 1, -72, 5, -29, 20, 33, -17, 26, -39, 0, -1, 5, 31, 12, -18, -9, 37, 6, -6, 5, 58, -13, -5, -57, 13, 0, 2, 4, -60, -2, 6, 17, 4, -1, -1, -1, -1, 10, -1, 2, -11, 15, -7, -8, 6, -16, 1, -4, 4, 23, 4, 1, -25, -29, -53, -4, -21, 12, -3, -13, -16, -6, -2, 0, -28, 3, 4, -39, -28, 5, 12, 21, -9, -3, 1, 8, 11, 2, 20, -19, -25, -15, -2, 2, 5, -13, -2, -63, 32, 3, -8, 5, 11, 8, 2, 64, -2, -3, -32, 3, 6, 9, -20, -9, -15, 12, 28, 4, 1, -19, 4, 35, 8, -32, -3, -10, 22, -11, -29, 1, 17, 18, -1, -19, -6, -4, 22, 9, -6, -12, -1, 1, -1, -11, 35, -20, 37, -2, 7, -4, 16, 13, 0, 10, 18, 3, 8, 3, 1, -25, -1, 4, 1, 0, 1, -7, 15, 4, -1, 3, -4, -4, 7, 13, 2, 20, 2, -3, 0, 21, 44, -18, -23, 1, -2, -26, -14, 0, 4, 7, -21, 0, -6, 5, 21, -7, 1, -3, -8, -1, 8, 7, -31, -50, -1, -59, 39, 14, 1, 24, -59, -10, -1, 7, 29, 10, -4, -4, 32, 11, 1, 1, 32, -23, -3, -43, -5, 1, -1, 1, 2, 3, 1, 15, -6, 1, -21, 3, -1, 18, 2, 2, 5, -16, 23, -5, 8, -4, 6, -11, 9, 23, 4, 5, -26, -3, -22, 1, 3, 11, -3, -11, -14, 5, -18, -8, 5, 7, -4, 0, -40, -10, 4, 34, -6, 4, 6, 13, -8, 8, -22, -44, -12, -9, 9, 3, 15, -35, -4, -53, 19, -4, -7, 5, 21, 7, -4, 31, -1, 0, -20, 3, 4, 14, -16, 7, -1, -26, 17, -8, -3, 5, 1, 8, -9, 21, 0, -1, 10, 2, -17, 4, 4, 31, -9, 3, -18, 1, 21, 41, 14, -39, 0, 2, 12, -16, 2, 1, 11, -4, -1, 5, 28, -3, 3, 10, 22, 3, 7, 7, 7, -27, -2, -23, 5, -5, 0, 0, 36, -1, -5, -18, -2, -1, 9, -4, -2, 21, 9, -1, -4, 24, 8, 1, -22, -6, 4, -28, -19, -50, 2, -20, -35, -16, 6, 3, 38, 11, 3, -11, -20, 0, 13, -14, 11, -90, -9, -41, 31, -12, -3, 60, -38, 7, 8, 1, 13, 20, -18, -34, 13, 12, 7, 4, 10, -31, 0, -45, -15, -5, -1, -2, 16, -6, 3, 26, -1, -2, -3, -5, 3, 8, 12, 7, -16, -12, -9, -14, 16, 9, -3, -10, 10, -13, 0, -16, -37, -19, 13, 3, -4, 12, 3, -17, -5, 1, -35, 42, -17, -52, -2, -3, -24, -13, 7, 9, -1, -7, 7, 12, -41, 6, 8, -51, -30, 12, 9, -2, -28, -60, -2, -34, 13, -4, -3, 5, 4, 4, -1, 38, 0, 0, -16, -2, 2, 12, -1, 0, -14, -20, 20, 3, 5, -1, -1, 9, 22, 20, 3, 7, 18, 30, -36, -4, 1, 21, -1, -17, -29, 7, 20, -11, -23, -39, 0, -7, 11, -25, 23, 22, 23, -3, -3, -1, 45, 14, 18, -31, 37, -9, 10, -2, -22, -33, 3, -1, 28, 6, 5, -1, 14, -1, -8, 3, -3, -5, -1, 0, -13, 0, -39, 3, -4, 31, -12, -9, 0, -11, 1, 26, -9, 3, -2, -24, 0, -18, 28, 11, 11, 4, -10, -6, 14, -5, -1, -18, 15, 4, 4, 5, -6, 8, 11, 6, -25, -1, 1, -3, -4, 11, 12, -52, 11, 18, 8, -3, 5, -2, -12, -39, 6, -7, -4, 5, 14, 1, 6, 24, -3, 4, 7, 4, -22, -14, 9, 4, 5, 5, -11, -5, -6, 2, -4, -28, -11, -5, 1, -10, -11, -15, -3, 1, 25, 4, -3, 6, 6, -1, -11, 0, 20, -39, 1, -15, -9, -2, -6, 7, 25, 4, 6, -1, -48, 3, 2, -1, -2, -10, 1, 8, 3, 15, 0, 2, 20, -5, -2, 2, -21, 3, 0, 35, -7, -2, 5, 5, -8, -5, 21, 7, 11, -10, -3, -7, 3, -9, 7, 21, 14, 9, 2, -13, 44, 5, 25, 12, 26, 7, 3, 13, 22, 2, 2, 1, 35, -7, -1, 23, 8, -33, 16, -1, 29, 7, 5, -3, 42, 8, 11, 4, 5, -8, -5, 1, -27, 21, -8, -1, 29, -1, 4, 6, 11, 
};
const TfArray<2, int> tensor_dimension4 = { 2, { 6,1344 } };
const TfArray<1, float> quant4_scale = { 1, { 0.013008925132453442, } };
const TfArray<1, int> quant4_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant4 = { (TfLiteFloatArray*)&quant4_scale, (TfLiteIntArray*)&quant4_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data5[64] = { -2871, -2027, 2208, -1681, -640, 843, -3266, -2889, -3959, -2010, -3320, -5514, 605, -2535, -2603, -4635, -3569, -1409, 672, -2736, -3038, -1719, -3395, -2313, -2448, -2289, -2319, -1857, 36, -2963, -3769, -2104, -1641, -448, 934, -1869, -2778, -937, -3125, -1916, -272, -1130, 3207, 1579, -1873, -133, -3124, 1271, -1847, -1009, -939, 912, -4353, -1979, -820, 1187, -2689, -2625, -4283, 1004, -4142, -970, -1512, 206, };
const TfArray<1, int> tensor_dimension5 = { 1, { 64 } };
const TfArray<64, float> quant5_scale = { 64, { 3.5293040127726272e-05, 2.4940414732554927e-05, 0.000131659020553343, 3.4241464163642377e-05, 4.0970378904603422e-05, 0.00014752025890629739, 2.9999087928445078e-05, 5.1686034566955641e-05, 5.7461449614493176e-05, 0.00013554905308410525, 3.6608947993954644e-05, 7.6203614298719913e-05, 0.00012731242168229073, 0.00013318512355908751, 3.7713005440309644e-05, 8.2775164628401399e-05, 6.3014762417878956e-05, 3.7098434404470026e-05, 0.00014202854072209448, 7.4516181484796107e-05, 0.00014656975690741092, 2.6009036446339451e-05, 0.00014925219875294715, 0.00014470570022240281, 0.00011952076602028683, 0.00014033113257028162, 6.8419307353906333e-05, 0.00014992433716543019, 0.00015225546667352319, 3.9866092265583575e-05, 0.00010000196198234335, 0.00015121621254365891, 2.7655474696075544e-05, 0.00013767836207989603, 0.00013045342348050326, 0.00014775569434277713, 0.00015024622553028166, 4.0579136111773551e-05, 0.00014111037307884544, 0.00014852981257718056, 0.00013627912267111242, 0.00013816343562211841, 0.0001336559362243861, 0.00014215215924195945, 3.5271077649667859e-05, 2.9071678000036627e-05, 7.7310010965447873e-05, 0.00012897046690341085, 6.4575964643154293e-05, 0.00013312741066329181, 0.00014601815200876445, 0.00013493324513547122, 7.5544667197391391e-05, 4.0993803850142285e-05, 2.7827558369608596e-05, 0.00014663036563433707, 0.0001397392334183678, 3.131799167022109e-05, 0.00014895755157340318, 0.00013484507508110255, 3.6438039387576282e-05, 3.8774393033236265e-05, 3.369830665178597e-05, 0.00015457306290045381, } };
const TfArray<64, int> quant5_zero = { 64, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant5 = { (TfLiteFloatArray*)&quant5_scale, (TfLiteIntArray*)&quant5_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data6[64*3*3*32] = { 
  /* [0][0][][] */ 4,1,3,1,40,30,41,-33,-12,16,67,-4,-24,-4,-38,-44,-26,5,10,50,-23,-36,-7,-31,40,-42,-17,53,5,46,-17,62, 66,-64,-38,-83,5,47,28,-38,13,3,40,-66,-15,12,-4,9,-62,35,48,9,8,-16,-4,24,31,-34,-56,-23,-64,0,-3,51, 54,-127,-13,-115,-8,17,-34,11,-23,53,24,18,6,-21,10,-51,-41,-45,26,-42,-12,-48,-28,13,2,31,-33,33,-42,14,9,9, 
  /* [0][1][][] */ 60,56,-3,-57,10,-12,-33,14,11,-15,-10,1,-27,44,-17,-22,-14,63,57,26,-27,-5,-54,25,-45,9,-25,25,-15,-1,-51,16, 38,-29,-75,-25,10,4,34,-9,55,12,-25,-18,-1,77,-7,-38,-18,-36,14,-4,-72,-3,-41,10,26,-46,-33,54,-4,-44,1,-27, 1,4,-36,-30,-41,-54,-5,-39,25,17,-36,38,-10,-7,23,-78,-65,-32,-15,-19,-65,-87,-55,-2,-8,51,-59,-21,-3,34,-44,0, 
  /* [0][2][][] */ 29,43,11,-6,33,17,26,16,-13,-7,43,59,-38,1,-2,-21,-36,51,36,60,-37,-46,-38,-6,11,20,33,40,9,44,14,61, 67,-33,2,-31,34,-19,-22,-35,-23,22,-40,61,-22,-10,52,-1,-41,-35,-38,8,-1,-33,21,42,7,-35,11,-7,-19,-48,-22,29, -16,-75,-2,-29,4,9,66,23,-35,4,-30,28,-46,-29,-6,-115,-62,-70,-57,-31,-113,-35,-21,22,-60,-3,-111,35,-56,67,42,9, 
  /* [1][0][][] */ -38,-75,-11,-10,31,-56,-28,-37,-72,-37,-25,5,63,4,0,-52,-93,-80,-31,0,-83,9,36,0,-13,14,-12,-24,-31,-1,-52,-13, 59,-74,-5,-109,-18,38,63,-23,13,-6,-1,-22,-17,-36,58,-62,-127,29,-40,1,-45,-52,-26,27,0,-104,-112,-65,-20,-18,-57,26, -21,-11,-90,-86,-45,38,75,36,48,-9,-40,78,1,-57,-30,-66,31,-34,20,43,-48,15,-73,-25,34,-60,-3,17,-31,12,-43,-73, 
  /* [1][1][][] */ 16,-20,-97,-21,-5,-4,37,49,46,34,-75,11,24,-12,20,-10,-92,21,15,-19,-89,-86,35,-4,-49,7,-98,-34,41,-51,-32,19, -7,9,-78,42,-51,20,77,-50,-49,22,-38,60,-21,-53,35,-96,-85,8,-12,24,-54,36,8,7,-6,-11,31,4,81,83,-22,-51, 20,52,-73,20,-64,18,-21,-2,31,30,22,22,52,44,3,18,-12,-3,-22,-64,-31,-75,-72,-84,-69,-18,-50,-3,2,21,-38,-12, 
  /* [1][2][][] */ -59,8,-5,-64,21,22,52,-61,-8,-52,-84,-2,44,-45,-20,-5,-26,-94,-13,1,-85,5,11,30,-92,-51,17,-34,-69,-37,3,-92, 59,-70,1,-43,-22,-44,25,-6,-55,-4,14,6,54,-23,-11,-72,-54,22,-39,7,-69,-28,-33,4,-19,13,8,2,-2,24,-35,6, -59,-58,52,-24,29,-34,67,-48,43,31,-57,3,16,-68,6,-21,1,-21,43,-20,-71,-89,-62,-37,19,-75,0,47,1,70,-22,32, 
  /* [2][0][][] */ -9,86,-98,-18,-41,-39,-5,49,8,12,-52,2,-5,21,21,-96,-108,7,-4,-119,7,-70,-22,-12,-99,-101,-18,-11,3,51,-99,-1, -2,68,-54,4,-42,-97,-6,24,7,10,-28,0,-18,1,1,32,-24,-7,-6,-17,12,53,-31,-5,-82,34,-5,-33,-1,42,32,5, 8,-30,28,39,-26,-29,3,53,20,-8,-61,-2,8,-3,17,30,66,-26,-5,21,40,87,8,14,-15,-12,2,-5,8,-2,-44,-8, 
  /* [2][1][][] */ 2,-20,-88,70,-31,-41,15,-9,3,-16,-37,-10,11,5,12,38,-76,14,10,-1,-6,-127,22,6,5,-74,-118,6,3,9,-81,17, 14,11,-79,-52,-56,-112,-12,3,27,-1,-49,-18,-12,15,6,-24,24,7,5,15,22,-39,-6,-9,-38,-96,-17,-31,8,-3,-108,1, -9,-42,-24,23,-36,110,-5,14,-23,-9,-36,12,-12,51,-4,69,68,-8,-5,-9,38,16,9,-6,23,-61,-30,-24,-11,12,-69,-1, 
  /* [2][2][][] */ 13,-97,-70,19,-26,124,-3,-11,24,-1,-18,5,-11,33,-4,80,-52,29,3,81,21,-36,10,4,-2,-14,-80,16,10,56,-17,16, 2,-66,-92,-37,-7,-13,2,-28,34,2,-46,3,-24,18,2,19,42,-2,3,13,-59,-108,25,-3,-12,-48,-18,-18,2,38,-87,14, 13,-35,0,-75,-22,79,-14,20,-4,3,0,-1,-8,42,-1,57,35,-13,3,60,-59,55,17,11,30,-49,9,-17,-8,29,-5,5, 
  /* [3][0][][] */ -32,-7,-50,-38,-25,-52,18,-1,-62,-7,-28,-7,-30,-21,26,-21,-20,15,-43,21,16,-127,17,0,-19,-87,-52,-26,7,-5,-73,-53, -52,-47,-56,-119,-6,-54,-37,-18,-35,31,-4,-31,0,-21,-32,-69,-31,-37,25,-44,-63,-17,-14,14,-66,-58,-65,7,-5,-27,5,-55, 28,29,-13,-52,14,-60,4,28,-19,-22,-15,43,35,-58,-13,-51,-3,24,-52,-1,-33,-12,31,-31,15,-53,-49,-49,-46,-37,-51,-11, 
  /* [3][1][][] */ 4,-37,-68,-48,-18,-34,27,-56,-38,-2,1,-24,41,-14,-2,34,-89,-11,-51,4,-52,-25,15,25,32,-69,-84,13,-39,-1,-32,0, 28,8,32,-31,14,0,-13,-6,-24,4,25,19,32,-37,16,21,-88,3,-40,4,-30,-20,52,23,-45,-81,20,-38,-53,-19,-37,-2, 45,-37,-46,-7,28,-46,-10,-1,19,36,12,36,-35,37,-46,-3,-10,-16,-53,-50,-20,-18,-7,49,12,-28,18,55,-38,14,-3,-4, 
  /* [3][2][][] */ 5,-22,19,-50,-5,32,17,16,-52,7,37,-12,1,-27,-65,-17,-32,34,-12,-13,-63,-68,-21,44,-31,-12,-10,-47,45,-27,31,-51, 5,6,-53,-116,-21,-59,-23,-38,-45,-9,-46,24,-10,17,40,-66,-10,29,-19,6,-57,-24,10,-27,-59,-20,-40,37,-31,54,-36,-26, 4,11,41,-62,26,11,36,45,37,-37,-51,34,-27,-21,10,-98,-31,20,1,-39,-63,-15,6,43,-21,-55,-70,22,45,-21,-39,-23, 
  /* [4][0][][] */ -9,4,-100,-40,-23,-45,-17,25,28,-4,0,10,19,20,26,-6,-9,32,-25,-7,11,4,-13,-39,-17,-44,-71,-16,6,-42,-34,28, -7,-6,-2,-127,25,13,-9,-26,-14,25,-6,21,-33,-32,21,-22,-20,5,3,10,13,-23,0,15,15,-35,-39,-42,-37,5,-90,-14, -32,-16,4,-17,15,-34,49,-15,8,-41,0,-32,-11,10,36,27,-57,24,15,27,7,9,18,-16,12,-57,-49,-31,14,-23,-10,-16, 
  /* [4][1][][] */ 18,-60,-43,-35,9,8,3,-12,10,21,37,30,23,-7,21,7,18,44,-34,-6,-39,13,-21,-40,9,-104,-17,-24,-4,-7,-43,5, -27,-38,-56,-31,-9,-61,1,-12,0,12,-34,-21,12,-16,15,17,-34,-50,-37,5,-12,-30,3,30,-24,-59,-76,7,-39,-12,-63,-2, -28,-51,-16,-94,-39,-16,36,31,27,27,-44,-14,-6,13,-23,-38,-63,-55,3,7,-48,19,-8,6,-46,7,-39,-9,-25,-52,-2,-11, 
  /* [4][2][][] */ 9,-81,-77,-3,-4,3,6,-15,14,13,31,-13,4,33,8,10,-4,-10,14,-46,-31,15,-31,13,6,-40,20,24,27,-8,-9,-47, 34,25,-15,-40,-39,16,27,-3,-13,20,-48,9,-24,-2,-17,-8,-25,-34,-34,-10,-54,-19,50,-30,-19,-68,-98,13,14,8,-121,1, -22,-20,-1,-31,-44,5,4,-11,2,1,-26,-46,29,-35,16,14,-10,-42,-46,9,-6,21,37,42,4,-27,40,28,10,-35,-50,4, 
  /* [5][0][][] */ -4,-49,-13,-106,-9,21,7,-39,26,-5,1,-12,-3,-3,0,-109,-34,10,5,55,16,57,-16,-5,-48,-83,-101,19,9,-36,-32,-4, -4,44,-102,71,-4,7,10,8,30,-1,-43,-29,-14,9,2,-35,-127,-4,11,-1,35,-34,19,9,-10,-70,-62,8,3,-30,-79,13, 2,13,-104,-62,-25,34,7,-16,6,-5,-34,14,-9,8,-6,-51,94,1,3,-34,-14,1,-8,12,-1,30,59,46,-10,-10,-17,1, 
  /* [5][1][][] */ 21,-6,-41,-36,3,-27,-1,19,33,8,3,-3,-21,10,5,-46,-63,9,-3,77,-24,49,-31,5,-19,-10,-63,-52,8,-15,29,13, 13,17,-58,4,8,52,2,64,3,-2,-26,-1,-15,10,7,-77,19,-9,-5,68,-5,2,14,9,23,-40,29,-30,8,0,10,1, 1,39,-72,-29,5,-57,-6,-23,4,16,-36,27,-14,21,1,-12,3,7,-4,-58,1,-40,10,3,4,-13,-74,-34,14,-15,26,7, 
  /* [5][2][][] */ -3,59,26,3,-12,-4,4,12,9,-4,-1,-1,-3,-10,1,-53,-31,-7,-1,-38,3,37,-9,6,23,59,-4,43,-12,-25,46,10, -7,-76,46,-4,-6,-32,3,38,-10,-6,-10,-28,15,-5,7,16,32,-5,-10,-66,-24,33,5,-13,-58,26,39,14,1,5,52,-6, 10,32,-13,14,5,-50,-16,-32,-32,-6,-26,16,-9,-11,5,66,-35,-5,-7,55,-15,-89,27,3,-7,9,-76,10,1,-14,28,2, 
  /* [6][0][][] */ -24,-62,-9,-105,18,-48,39,54,16,9,-26,12,54,-26,40,-67,-32,-39,-46,-58,-38,1,41,-16,-74,-103,-96,-22,-59,41,-92,-14, -34,-49,-40,7,-72,-87,-23,-40,1,-4,-42,20,33,-12,-30,-37,-69,-63,-20,-25,-47,-44,-53,53,-69,-106,-37,-70,-37,10,-71,1, 12,-63,-16,-50,-57,-4,-24,-12,8,-54,-70,-52,15,-5,6,-126,-80,-33,-10,-11,-102,-17,47,17,-64,-67,-48,-50,11,41,-87,-42, 
  /* [6][1][][] */ 9,51,-10,-82,-61,-76,-37,-29,-70,-57,34,14,24,-29,33,-69,35,14,-72,-8,-59,15,17,41,7,-65,-70,-24,-18,7,-92,25, 24,30,-98,-10,-71,-84,-13,-6,-13,-27,-10,-42,5,-21,31,-70,23,1,-17,-27,-127,20,-4,54,-22,-32,12,-37,54,0,18,-3, -5,-60,-55,-42,-33,-2,-2,-10,23,16,7,-34,-24,-14,24,-18,-1,36,-33,-83,-114,-94,34,7,-71,-18,-3,5,72,-34,-94,13, 
  /* [6][2][][] */ -17,-50,-38,-11,-53,-13,-53,-30,-20,9,-5,9,-47,8,-38,-103,0,44,37,-14,-9,-31,39,32,14,-15,-99,57,-17,28,-43,24, 62,-35,-66,-31,-16,-64,-16,-28,-20,-42,53,-27,17,-72,8,-68,51,33,3,-72,-38,-62,-27,-52,-48,-97,19,62,-19,-31,-105,-30, 17,-79,-36,-51,-5,-65,18,17,-25,19,-1,-1,-40,-21,22,-38,-6,14,-47,-72,-77,-29,-9,34,-96,-74,-53,46,3,7,-32,-50, 
  /* [7][0][][] */ -25,33,-33,-58,18,-64,30,-31,21,-1,-8,-1,-26,-32,-5,-101,6,-19,-29,-11,-74,-60,-3,1,-19,-23,56,-8,-16,-19,-109,-6, -32,-58,-21,-58,-23,-23,-21,25,-28,-37,7,36,-1,-18,-14,-87,56,-17,14,-4,-41,-38,-12,-9,-41,-86,-70,-39,18,22,-67,-10, -24,-54,-44,57,-5,-49,26,-22,-23,11,-39,-19,18,11,-15,-26,-67,32,13,-29,-46,-93,-1,-14,-13,-47,-35,24,-12,17,-51,2, 
  /* [7][1][][] */ 17,-6,37,-44,1,-32,15,1,-27,21,21,42,6,20,-23,-78,-17,-2,-38,-37,16,-9,24,-20,5,44,-45,-39,17,-20,-54,7, -11,25,-32,-67,-10,-7,6,29,-23,-10,-10,26,-30,-26,-33,-112,-41,-4,2,-30,-9,-45,-32,-46,-35,-31,-78,-2,-12,28,-36,-9, -26,-39,10,-57,-24,-40,0,-29,-14,17,-11,-11,0,1,0,-58,-76,9,-37,-28,-10,-41,8,-25,-29,-57,-64,20,-32,20,-109,11, 
  /* [7][2][][] */ 29,-19,-64,65,0,-15,26,-12,-33,5,-37,29,-2,10,15,43,-47,16,-40,-23,-121,-3,24,7,-15,-66,-53,-31,-37,-9,-53,16, -13,-8,-33,-78,7,-3,35,8,-11,13,19,-17,21,22,7,-85,-57,4,-12,22,-127,-36,-9,16,-15,-31,-104,-42,-12,-17,-94,12, -10,-25,-33,-56,-39,-2,24,13,-16,-17,-18,12,8,-26,-39,-66,-36,0,-40,-13,-68,-64,-28,33,-43,-83,-97,4,14,-10,-103,3, 
  /* [8][0][][] */ -26,-21,4,8,5,17,0,4,-3,-27,-33,-23,22,-4,5,-41,-41,-3,26,73,-25,-22,-21,-13,-44,-42,-54,-12,20,26,-51,8, -26,-39,-30,-13,-25,-34,22,-23,-6,-5,-24,-23,14,-14,22,1,-85,-9,18,28,-14,-57,-4,-13,-9,-87,13,-10,-16,-16,-71,-21, -11,-14,-91,-114,10,-41,-9,6,-7,-9,21,-9,-3,-13,-13,-58,-8,9,-15,56,-52,-79,16,-19,-62,-65,-21,-28,-23,22,-80,-5, 
  /* [8][1][][] */ 12,-17,-28,4,-2,11,16,6,-4,-19,17,9,4,-35,12,-20,-71,-9,-22,-38,-64,-41,0,15,-59,-32,11,-27,-8,11,-43,-12, 7,-56,-40,-27,-7,-11,-1,14,-1,15,1,-11,0,-16,14,-57,-87,-31,-34,5,-28,-66,-3,21,-45,-80,28,-27,-22,-25,-10,-15, -2,-99,-73,-52,-12,-59,-24,21,10,8,-29,-28,8,11,7,-127,-45,19,-2,-4,-101,-83,14,26,-75,-32,23,-28,24,11,-102,-25, 
  /* [8][2][][] */ -32,-60,-69,-20,-35,-19,-2,-15,-19,-22,11,18,25,-25,-22,-41,15,-14,-8,-7,8,-93,-24,19,-74,-95,-25,2,-27,-21,-59,8, -16,-38,-95,-12,-29,-59,-5,0,-14,-35,8,-16,-27,-33,-21,4,-43,-2,18,16,-26,-54,8,8,-2,-73,-28,12,-13,10,-79,-10, -9,-32,-87,-23,-2,77,-13,-21,-28,-29,1,12,9,-36,5,-109,11,-1,-20,-8,19,-101,9,5,-73,-62,1,23,9,17,-88,3, 
  /* [9][0][][] */ -11,-78,-40,23,-30,-25,-2,-12,9,-12,-25,-6,-1,3,-1,55,-14,14,-1,33,-1,-99,-1,-5,-95,-90,-13,-19,-6,18,-24,4, -4,21,-92,20,4,-68,-5,33,-8,2,-33,6,-21,22,-2,26,-73,-3,3,34,-17,-127,-15,11,-100,-107,49,-17,-6,37,-77,-8, 3,-42,-120,44,-26,13,-2,-13,-9,-9,-28,5,-18,0,-6,72,65,-18,-10,29,32,-89,9,-15,-54,-84,70,-25,8,3,-84,-8, 
  /* [9][1][][] */ -6,-109,-41,41,8,-60,0,-16,19,-8,-34,-11,3,-2,-1,62,15,3,3,18,17,-4,0,-9,26,-68,-99,-25,-6,4,-25,11, 0,-8,-104,-4,-16,-55,-14,38,1,-6,-10,-10,-11,20,-14,8,-22,-16,-4,-56,-63,-30,-16,1,-67,-31,24,16,2,25,-108,6, 1,-120,-38,38,-19,-31,-2,-5,-24,1,-28,-13,-13,8,5,-10,-26,-33,12,-63,-6,-42,7,0,-74,-106,8,6,13,-28,-101,-9, 
  /* [9][2][][] */ -16,-56,42,55,30,61,-11,-20,3,0,-20,4,22,18,-16,23,38,15,8,-15,52,62,-33,5,53,29,-2,-14,6,36,57,8, -11,-72,-41,-34,-17,-87,-5,55,6,2,-16,-17,-2,22,-5,-1,-22,-5,-1,-41,-61,-5,6,8,-55,-57,-23,-11,-16,39,14,-6, -3,-23,-16,49,-5,-3,0,-32,-6,-16,-29,-7,-2,11,-2,-42,-59,-12,13,74,37,8,0,-7,-25,-31,-45,-21,-5,4,-12,-3, 
  /* [10][0][][] */ 30,-61,-39,-59,24,2,-9,-12,0,-36,-49,28,-3,16,8,-84,-11,0,-18,-45,-17,-8,-15,-37,-5,-15,-45,-44,6,-31,6,-25, -8,4,-39,-79,-18,-49,11,23,-5,-55,18,44,-9,3,0,-57,-7,57,29,-33,-42,-62,16,-18,11,-6,-81,-10,35,-29,-63,-33, -5,-90,13,-41,21,-53,3,-29,-3,33,-66,8,-24,12,50,-48,-11,11,8,-1,-99,-23,41,51,-49,-41,-48,-15,-23,-43,-29,2, 
  /* [10][1][][] */ 32,-83,-31,66,1,-8,9,17,28,-7,1,-24,25,20,-16,-67,-90,18,-16,-55,-67,-9,-32,6,4,-2,38,29,-11,17,-35,-11, 22,-76,-73,-37,7,3,-6,42,37,36,32,7,27,-5,23,-56,-46,-31,-6,21,-23,19,24,-30,-69,-37,24,-13,3,43,-63,3, 11,-60,-52,-36,6,-48,-23,-27,-5,52,-67,-52,44,-9,-8,-26,-55,-40,-11,24,-81,-46,-11,26,-7,-36,-55,-43,14,18,-24,27, 
  /* [10][2][][] */ -48,-71,1,76,-48,-31,-51,27,19,3,16,-7,20,17,-10,-25,-101,-46,19,-41,-85,-43,11,25,35,-55,-70,-30,-24,-12,-26,-6, -2,-92,-41,-99,-20,-9,6,-13,-47,-16,-38,-41,-51,22,12,-112,-117,9,6,-19,-65,-85,27,0,-32,20,-28,-8,44,-26,-54,-40, -28,-124,-8,-12,-28,-27,-26,-43,26,-3,-62,0,31,-23,58,1,-90,-22,11,-54,-127,-83,-20,9,19,8,56,-45,-50,-8,-26,10, 
  /* [11][0][][] */ 13,-109,-42,-38,4,13,10,-9,0,6,-28,0,-3,5,-8,-24,-57,-27,5,-26,-73,-68,-6,12,-83,-41,-20,1,-11,-12,-111,2, 7,-90,-4,9,12,-29,-5,4,3,6,4,-10,33,-17,-17,-42,-62,-21,-24,8,-70,-52,16,12,-32,-53,-1,2,15,-14,-119,-30, 9,-75,-28,-48,-7,-32,18,-12,3,-27,-27,10,-5,5,-17,-81,-93,16,0,-24,-70,-63,-21,28,-38,-47,-7,15,9,12,-27,9, 
  /* [11][1][][] */ -6,-32,-85,-18,-25,3,-10,1,11,1,-10,0,-20,-4,-4,-28,30,-24,-7,-23,-36,-68,7,-16,-36,-127,-87,9,12,-3,-53,7, 19,-9,13,-44,3,-47,9,10,-18,-13,7,19,-19,-19,-30,-74,-23,14,-20,-20,-92,43,-11,-20,-74,-53,-88,-2,-26,16,-44,6, 16,-88,-79,-79,-11,-12,27,17,-6,2,-9,6,-17,-8,1,-55,-54,-28,-6,-1,-55,-2,-10,-1,-20,-69,-40,-4,1,13,-122,-28, 
  /* [11][2][][] */ -22,-4,-48,-57,-20,-7,28,-3,-14,-14,-19,21,16,-10,2,-21,-50,11,-20,-2,-32,-103,-15,4,-35,-47,-11,7,5,-23,-43,-12, -21,-14,-49,-64,-23,-49,-24,2,-3,3,5,26,11,-10,-3,-24,-16,-9,-26,-7,-62,-26,13,14,-46,30,-74,-30,-4,-15,-11,-7, -11,-92,-66,-6,-19,-10,18,0,-20,-14,-3,-31,4,-19,-25,-90,-20,-1,-6,-8,-24,5,-1,-9,1,-77,-39,8,-5,-9,-43,-5, 
  /* [12][0][][] */ 7,4,-69,-68,23,25,14,25,-18,13,4,12,-7,12,7,-27,54,6,-2,44,7,-6,-16,-4,-80,-58,59,32,17,-2,-4,3, 0,-7,-61,35,32,13,-4,-13,-3,2,11,13,6,18,6,29,-66,29,-8,37,47,-51,-9,-9,19,-14,-4,16,6,6,8,8, -8,-74,40,88,-12,-69,9,-30,1,0,22,-10,5,3,2,19,78,-1,3,68,-40,-76,-8,16,-96,16,111,9,2,-19,-16,-15, 
  /* [12][1][][] */ -1,72,-85,-82,19,-11,15,12,-13,1,24,-2,-3,-17,4,-109,2,8,5,-11,26,105,-35,-6,-39,9,-33,24,8,-18,8,-9, 6,-81,-121,84,29,-74,8,31,-11,3,9,17,-8,7,-2,-2,-100,16,2,8,12,-63,-8,-8,9,-111,-89,19,22,35,-110,4, -17,55,-89,-14,0,-21,5,-11,32,8,29,25,-17,-22,-1,-87,0,-10,-7,-29,-48,-101,14,15,-92,-87,-35,31,6,17,-122,5, 
  /* [12][2][][] */ -5,14,31,-112,10,-60,1,9,-15,-4,24,-5,14,3,0,-98,-7,0,3,-18,-4,101,-29,2,-34,-18,-127,50,-8,5,21,-2, 3,-48,-26,-2,16,-92,1,-17,-15,-4,0,-26,8,19,-4,-26,-80,17,-2,-64,27,-4,-1,5,6,-73,-126,36,1,12,-38,-16, -3,124,-116,-116,23,18,1,-28,-24,-8,12,-11,6,13,-10,-115,61,1,4,11,-30,33,8,2,-58,-73,-15,59,12,7,-87,3, 
  /* [13][0][][] */ 0,-20,-72,35,20,-65,-1,4,28,-3,12,15,-18,-25,7,11,-118,0,10,39,57,-102,9,3,-70,-51,14,-3,12,-17,-69,10, 6,-56,30,76,15,9,-6,-4,41,7,32,11,15,8,-6,71,17,7,11,50,31,-64,-28,5,-17,4,54,-26,9,-20,6,-3, 3,-88,-56,-32,18,49,3,12,45,10,24,-2,12,8,-1,63,62,11,-12,-115,-59,56,-8,-14,37,-10,-26,-9,9,-49,-48,-10, 
  /* [13][1][][] */ 9,56,-95,-57,17,-104,4,8,29,-2,3,-4,27,-22,-10,-81,-69,2,-6,16,-46,-70,4,-11,-61,-72,-47,-25,6,-22,-81,6, 10,-101,29,72,-27,-127,-1,18,39,0,32,-6,-3,-5,5,0,8,6,-5,16,-37,-58,13,-1,-35,0,63,-16,10,-15,23,8, 17,-38,-1,4,-11,58,9,39,30,18,30,-8,-8,15,0,41,-42,11,-6,-52,-85,42,-1,9,62,26,-13,-22,8,-25,-3,1, 
  /* [13][2][][] */ -4,123,-46,-112,0,-82,1,9,31,15,30,12,12,4,-8,-123,-10,12,5,-126,-23,-18,4,6,-89,-114,-122,-24,3,-29,-88,-4, 12,-31,27,-33,-17,-61,-3,49,35,15,42,2,15,28,-3,-57,14,8,22,-23,-15,12,-18,-9,-93,-36,-37,-40,-4,-31,-62,10, 18,46,4,5,7,93,-6,74,32,4,30,-5,-8,21,5,55,-16,15,-10,-38,-2,-32,-8,15,-8,-22,15,-31,-5,-25,20,-10, 
  /* [14][0][][] */ -21,-42,-46,-7,-49,-48,-55,-19,19,9,-57,22,-8,-61,9,-4,12,-29,-24,-29,-67,-61,19,-23,24,0,-56,-15,-15,-11,-53,21, -2,-42,6,5,-9,-44,-13,-25,5,3,-20,8,35,21,32,-115,-46,-58,-56,-25,-57,-45,-4,8,-18,-33,-31,-58,-7,-3,-4,-30, -13,-127,-9,-20,-40,-39,-9,33,-3,-60,-11,-49,-21,9,11,-48,-8,1,-48,-82,-7,-31,-53,-53,-14,-51,-45,3,-9,4,-2,-52, 
  /* [14][1][][] */ -28,16,-63,-29,-58,20,-2,23,-41,-22,-61,-10,-2,15,-45,1,-36,-15,-34,-7,-47,-60,31,9,-2,-51,-51,-44,-1,19,-19,-42, -19,-79,-91,-61,-56,-54,-54,-3,8,1,-10,7,-1,-41,-5,-20,9,-45,9,-52,-21,-32,28,14,-56,-107,-14,-26,-36,45,-27,-7, -12,-70,-73,-9,7,-51,-10,-32,13,-28,-65,-52,8,-69,-5,-51,7,1,-21,-49,32,-46,21,-9,-4,-45,-93,7,19,-48,-64,-28, 
  /* [14][2][][] */ -30,-28,-78,37,10,-41,3,-26,-15,-19,-5,14,35,-27,-45,-7,-102,24,-42,-28,-14,-79,-40,15,-26,-30,-18,32,-19,-55,-101,-56, -44,-54,-112,-33,14,-9,9,22,-2,3,12,-36,41,10,-20,-82,-117,-46,-24,17,-31,-2,-11,4,41,-26,-43,-11,-37,-4,-36,-8, -2,-51,-9,15,9,6,-30,-29,-45,-52,-62,-35,16,-62,-35,-85,36,-54,-64,-40,-40,40,-5,-1,23,-12,-91,21,-30,48,14,-28, 
  /* [15][0][][] */ -13,-57,-23,-11,-27,-126,-17,-15,-8,10,5,-9,6,3,1,37,-45,-23,-9,41,-90,-87,-10,-1,-109,-81,12,9,-28,-5,-81,-25, -5,-101,-109,-31,-18,-23,6,10,-23,-2,-12,9,2,10,13,-24,-34,16,-13,-8,-69,-77,11,-13,-24,-11,-23,-15,11,0,-6,-3, 1,-32,-95,24,-11,18,7,0,-5,-14,-5,-18,-13,-22,-6,-21,-56,-27,-25,41,-67,-102,-12,10,-87,-75,52,23,5,6,-68,3, 
  /* [15][1][][] */ -7,-125,-82,0,0,-127,-18,9,-7,-9,-3,-21,8,0,9,-48,-68,-5,9,-38,-9,-25,10,-17,2,-91,-61,3,-3,4,-10,-6, -7,-120,-51,-10,-13,-69,-5,3,0,-3,-28,-6,-10,-9,-7,-48,-105,-13,-23,-20,-7,-75,-12,-2,-73,-63,-79,-13,-19,-11,-13,-21, -13,-15,-39,34,-15,16,-2,-3,-16,-20,-12,8,0,3,-22,-103,-48,-3,3,-14,-37,-93,-6,8,-75,-41,-41,-13,4,-2,-46,-18, 
  /* [15][2][][] */ 4,10,3,0,-29,-84,-26,-8,-9,-20,-3,8,3,-13,-1,-43,-17,6,-7,-27,-64,-20,-4,-11,-73,14,33,-3,-11,1,42,9, -11,-4,-78,-51,-23,-16,-8,-9,-7,-12,-4,-19,11,-1,25,-31,-115,2,-19,55,-87,-41,5,-26,-82,-49,-24,-10,12,8,-5,7, 4,34,-125,-98,-19,41,2,19,-17,-7,13,-2,-1,3,-14,-58,50,11,-11,8,-95,6,8,6,-101,-107,18,-7,-11,11,-68,0, 
  /* [16][0][][] */ 12,-74,-79,72,-15,-80,-21,-22,13,-4,0,-29,4,-13,1,-33,-24,3,-30,47,-50,-76,-8,-6,-26,-87,-72,-6,-27,16,-64,15, -27,22,-89,-61,-15,-16,-12,14,2,16,-30,-12,-19,-2,-3,-68,-66,-24,-17,33,-58,-94,32,11,-36,-58,-17,-13,11,-8,-38,12, 12,-2,24,-43,-4,-1,5,0,11,-13,-8,-17,11,6,-1,-119,-80,-6,-29,30,-59,-100,21,17,-78,-78,-45,-14,5,25,-86,-25, 
  /* [16][1][][] */ -3,-60,-96,-5,8,-96,-17,8,8,-23,-19,1,-11,6,-8,-30,0,9,-20,-11,-1,-21,17,-9,17,-45,-14,5,7,13,-36,-33, -32,37,-72,-68,-32,-14,-13,-17,-6,-9,4,-32,-14,6,-1,-50,-61,7,16,-27,-16,-67,-12,-16,-33,-65,1,16,-22,11,-68,-21, 13,-14,-6,-38,-28,26,-33,-2,-4,1,-19,-22,6,-6,-22,-86,-51,16,15,-48,-20,-33,22,1,-52,-30,-11,-6,-32,23,-29,17, 
  /* [16][2][][] */ -28,-25,-73,-59,16,-40,-23,13,11,-13,2,-26,-11,-4,3,-51,-6,-1,-9,-12,-72,14,-21,-6,-55,-45,41,-2,-1,2,-6,-35, 6,33,-51,-92,5,-25,8,-3,-35,5,12,2,16,15,2,-56,-44,-14,-12,-18,-57,-37,-30,-31,-39,-15,48,0,-24,-6,-28,-13, -7,-36,12,3,14,12,13,-4,-12,11,13,3,10,-19,1,-51,-4,16,7,-11,-127,-8,-10,35,-54,-38,42,10,12,16,-30,-2, 
  /* [17][0][][] */ -33,-14,-36,-36,-3,-37,-29,-3,-16,-52,-8,9,-17,-15,-44,-54,-17,19,18,-49,9,-64,-15,-10,-40,-32,-3,14,-24,0,-2,-59, -10,18,9,-16,-19,-2,52,-31,14,-3,-5,-30,-25,-36,-26,-18,-3,41,-21,-7,-19,-12,26,21,-42,2,-4,-31,-13,2,-20,-11, 18,-1,-37,-127,27,22,-7,34,-1,-41,-42,39,9,-34,28,-24,-2,1,37,1,6,-13,-28,11,-61,-31,-11,-21,21,-8,-9,-46, 
  /* [17][1][][] */ -33,21,-29,-11,-30,-24,-9,25,-3,25,-71,-5,-26,-55,-34,-16,-14,13,-68,-23,17,-52,21,10,-23,20,-55,-54,28,24,-1,-76, -33,-50,-5,-32,25,15,33,-17,-24,-23,-22,-3,24,-1,-47,-8,-10,-21,-23,7,-47,-48,12,-13,-14,-25,-34,44,-19,35,-11,-37, -46,1,6,3,-41,-46,48,-19,31,12,17,17,-13,-50,-26,-11,34,-1,0,19,-55,0,-40,-6,-68,-52,-50,-1,0,37,-22,10, 
  /* [17][2][][] */ 5,-36,6,-20,-62,-13,-11,11,13,-67,-1,13,9,-35,-10,30,-33,17,-47,-36,-47,-16,-14,24,-33,-34,-119,-13,23,-19,-61,-17, -35,-13,-74,2,-16,-27,-22,-5,-29,6,-21,23,43,-3,-33,-27,-23,-24,-39,-34,-47,19,-51,29,-36,-15,-70,47,-17,-9,-40,27, -42,-16,19,-94,12,23,1,31,-4,-24,-29,0,11,28,4,4,-28,-1,-3,17,7,-32,25,-33,-62,-44,-42,2,21,-9,-18,-24, 
  /* [18][0][][] */ -9,39,-78,11,-9,-81,11,27,14,-8,16,8,28,10,0,20,-83,9,-3,14,103,-19,-29,4,3,-92,-42,3,-7,2,-39,-5, -2,-77,-121,36,-5,-83,2,12,26,2,8,2,28,12,-4,-25,91,-18,0,30,28,-87,18,-5,-54,-108,8,7,3,-37,-103,-7, -1,-23,-38,-15,-2,97,-9,17,3,-8,25,-3,29,-1,-7,42,-56,-9,-6,13,30,87,-13,1,99,9,48,-1,8,-25,72,0, 
  /* [18][1][][] */ 1,18,6,-37,8,-71,-10,33,21,5,2,0,13,-7,-3,-79,-13,-3,2,-77,-39,49,20,-12,-51,-14,-127,15,-9,-6,-38,1, 2,-29,-58,-12,-13,-42,-6,-11,26,7,-17,-5,21,3,3,-64,32,-12,-4,-67,-47,-89,-8,11,-69,-66,-4,9,6,-17,-81,7, -13,8,3,-9,28,-44,-3,-8,-6,-9,38,-7,26,11,6,17,-25,-6,7,-58,4,15,-6,-8,60,29,-7,6,-10,-21,67,6, 
  /* [18][2][][] */ 2,10,5,-89,37,-49,-2,10,-9,5,-1,6,4,-6,-11,-69,-5,3,-2,-58,-64,25,32,-10,-29,-26,-10,7,2,-31,-38,-13, -12,43,-30,20,-13,-36,-1,-13,-7,3,-15,-6,-2,-5,5,-60,18,-5,-3,39,-68,-48,2,6,-25,-36,-93,11,-9,-39,-39,7, -14,-18,30,-29,31,-14,-10,1,-19,0,32,-9,24,-9,-11,-32,-34,-15,2,19,-32,24,12,-11,68,41,62,1,-8,-38,66,-7, 
  /* [19][0][][] */ -14,6,-34,-47,1,-25,-8,2,-19,9,-18,5,-13,-9,15,-55,-23,-3,-33,13,-56,-11,7,13,-41,-80,-54,11,-23,-9,-70,6, 11,51,-16,-75,-29,-13,11,8,-20,4,-15,7,-20,-26,0,-90,-3,2,-22,-47,-71,-32,10,2,-17,-85,-57,4,-24,-22,-35,-17, -1,33,12,-58,-9,-36,-9,6,-25,-13,1,7,-3,-17,-13,-53,-64,17,6,-44,-45,-52,6,-18,7,-45,-76,19,-6,11,41,2, 
  /* [19][1][][] */ 0,34,-73,-33,-1,-66,-14,3,11,-22,2,-5,-21,-8,-26,-42,-35,-2,-16,-18,-33,-15,11,-10,-55,-66,-13,-22,-21,-14,-51,-3, -26,35,-50,-30,-5,-11,-10,10,-11,-14,-12,2,-8,6,-11,-57,-29,-27,-34,-7,-106,6,-7,-4,-61,-28,-94,5,-16,-2,-51,0, -5,42,17,-40,-4,-66,-12,-14,0,1,-3,-30,-11,-2,22,-72,-47,-1,8,-8,-43,-49,15,16,-76,-73,-87,-15,-3,-17,-12,-6, 
  /* [19][2][][] */ 2,32,6,-14,10,-14,-5,4,-18,-5,8,11,-10,0,11,-33,-35,-6,1,22,-57,-37,-2,0,-19,-60,-39,-20,2,-5,-52,7, -5,33,-34,-18,-17,-22,-8,8,-6,-29,0,5,4,-23,-6,-20,17,12,-5,13,-115,-43,13,-23,20,-45,-118,-4,-8,-3,-19,-2, 7,12,25,-115,-28,-37,-3,0,-31,-28,6,2,20,-29,14,-78,-39,-21,-24,68,-94,18,9,-21,53,-14,-127,14,-26,-22,46,-23, 
  /* [20][0][][] */ 3,-51,-38,-17,-2,-84,-14,-4,-13,-2,-3,-11,7,-32,-9,-15,22,13,-7,58,-20,-12,-8,4,-94,-74,20,39,-14,9,-40,-12, -4,-109,-9,-6,11,-50,-9,-9,-33,1,14,-14,-8,-15,-3,18,69,14,4,-32,-89,-110,-2,5,-93,-89,-12,19,-1,24,-127,-9, 3,61,-98,13,-6,110,-16,12,-20,7,13,0,-7,6,-9,70,-21,2,5,-116,-70,37,-4,0,54,-52,-34,9,-10,57,-105,2, 
  /* [20][1][][] */ -2,-61,45,-87,29,-36,6,2,-6,-3,0,-9,-15,-19,1,-115,-47,2,9,12,-78,-37,-10,5,-56,-16,33,5,-1,-21,-102,-7, 7,-61,-67,-5,18,-96,-4,12,2,5,12,-4,-3,-6,1,34,23,7,4,1,-20,-57,-27,6,-13,-65,3,-15,-9,-2,-9,-5, -4,56,10,-4,29,-41,2,22,-16,5,14,15,-2,-15,-7,-7,-71,-15,2,-57,-33,17,-20,-17,42,12,-78,3,-9,-27,3,12, 
  /* [20][2][][] */ 11,-60,65,-90,13,-72,11,-11,-1,15,5,7,-7,3,9,-47,-40,1,10,-4,-92,15,2,13,16,-52,-78,-9,-5,10,-37,5, 0,-33,6,3,28,-80,6,14,-11,0,27,7,6,8,-2,71,73,-1,-8,33,-38,-35,-30,-5,-54,3,38,-18,-12,12,3,-2, -1,64,42,-58,4,15,1,7,-11,14,30,9,25,-5,11,27,-111,2,8,38,-33,-19,-1,9,-51,3,62,9,-5,29,-9,-12, 
  /* [21][0][][] */ -27,-17,-46,-127,20,32,24,-41,-13,14,40,-20,-1,-66,3,-20,28,-52,-11,-46,-1,-2,-28,6,13,-43,-11,-45,-39,-18,-2,57, 32,-48,32,-71,-47,-69,-9,-36,49,-38,-83,35,-51,-32,23,-97,-38,63,44,40,-53,42,-15,47,-48,-45,10,-66,21,-69,-111,44, -54,1,33,-28,11,-15,18,39,-65,-8,-2,37,-8,-56,-10,-79,37,-36,31,17,-48,16,15,-13,-38,-84,-84,-14,-18,-44,7,-55, 
  /* [21][1][][] */ -9,-59,-18,-97,15,25,-34,-85,-25,14,-32,-19,-50,-20,-15,-105,-50,44,30,-19,-65,26,-49,-6,-35,2,-123,-70,5,-14,-34,33, 21,25,19,9,-27,26,-25,-3,4,-40,34,-12,22,5,20,-22,-43,4,-68,-33,-22,-65,74,-13,-59,-26,-43,17,-13,-22,-82,41, -54,-61,-98,17,5,-78,-45,58,40,-55,9,-64,51,-20,9,3,-66,-62,-77,-1,-19,-88,13,18,16,-58,30,-8,-18,-63,41,-16, 
  /* [21][2][][] */ -43,40,-69,-57,-2,-13,-6,13,-11,13,54,-23,-22,-23,-63,-57,-17,0,-23,-17,30,-48,-28,-71,34,-24,-115,7,-13,69,21,36, -7,5,-68,-24,47,26,-9,-53,44,-47,36,15,0,-15,19,45,-18,34,-65,-25,-34,-47,-2,-57,-31,-44,-68,-93,-17,-37,-54,4, -48,-30,-53,36,-41,-64,62,45,42,-25,-1,10,8,-10,-66,10,-47,-40,-28,49,-87,-36,14,16,-9,-71,-65,-9,-69,-42,-126,-61, 
  /* [22][0][][] */ 0,-96,-51,24,12,-37,-9,-5,-6,-3,-28,-12,-3,5,0,-44,-18,6,-5,-8,-64,22,-5,-9,-27,-56,-93,6,-8,2,-34,4, 6,-87,-57,-47,5,-76,-7,6,-3,0,-17,-21,9,-9,-8,-75,-96,-11,-6,-18,-74,-38,4,10,-59,-20,-54,9,-6,-7,-127,6, -6,-11,-57,-58,19,-113,4,7,3,0,-26,-3,10,4,-6,-3,-31,0,-2,-39,-94,-64,8,-9,-29,14,-67,-11,3,-3,-55,-4, 
  /* [22][1][][] */ -9,-85,1,-43,9,41,6,10,-24,-10,13,-12,8,0,1,-30,40,9,6,57,-45,44,-2,-6,-108,-33,40,-5,-7,7,-21,0, -14,-38,-51,41,-1,-51,-13,14,-26,-11,6,-2,-4,3,10,16,-68,-10,4,14,-35,-65,6,-11,-13,-35,-74,-13,-8,-5,-1,4, -1,-65,-39,-28,21,-59,2,-35,7,6,22,-4,1,5,2,-54,28,2,-2,24,-7,-33,-6,-3,-58,-40,31,-14,-8,-6,-105,2, 
  /* [22][2][][] */ -10,-31,-54,-85,20,94,-5,-2,-40,-2,5,-5,11,5,-9,-121,63,2,0,30,-16,70,0,7,66,-26,18,7,-5,14,-27,6, -6,57,-87,85,17,-83,-6,35,-41,5,-18,-7,-8,-14,-5,56,-60,3,-4,-23,-15,8,2,-7,-11,47,-64,-12,4,10,36,-15, -7,-79,-22,4,11,-32,2,-22,-41,6,9,-7,-5,-2,7,-81,2,-13,3,-45,7,-19,-1,3,-112,-125,-4,-7,-4,-8,-16,-6, 
  /* [23][0][][] */ 0,1,5,26,-22,-31,-6,13,-2,-1,14,-12,17,-3,3,-119,-62,-2,9,6,18,-2,14,13,-46,-11,-54,18,-4,-9,-10,6, -1,-79,-6,81,-22,-127,-1,24,-17,-5,35,-30,12,-4,4,-81,34,-1,-10,107,28,40,-3,4,-13,2,-74,11,-12,-5,1,-12, -10,-31,-67,53,-53,-9,-6,-16,23,-4,24,-5,12,3,-2,23,23,2,-2,100,49,-46,0,-13,81,-42,-127,27,5,19,-63,-4, 
  /* [23][1][][] */ 5,6,-5,23,-19,68,-1,-60,10,-12,21,-11,4,-1,3,58,-112,-13,-3,4,-6,-2,-8,-12,10,22,25,2,-13,9,23,-7, 4,-26,-7,-19,-8,-22,-12,30,22,-5,38,16,-2,-6,-9,10,-36,3,-14,58,-7,20,1,-6,-54,21,69,-1,3,4,37,6, 3,-85,-31,-65,-43,-48,-10,-42,21,-5,27,-15,-12,-1,8,-4,-5,-8,-8,86,23,62,2,-1,21,16,24,3,3,28,61,-5, 
  /* [23][2][][] */ -12,21,16,13,-44,-57,5,-4,23,6,21,-6,-7,0,-1,14,-6,3,-4,-75,8,-46,-3,-4,-91,-4,9,18,-14,22,2,7, 0,-33,6,15,-21,-44,5,31,29,-14,21,9,11,-2,-8,-14,-121,9,-13,8,30,-41,1,-3,-53,-13,38,-3,-3,-1,-64,-6, -1,-81,-3,-22,-11,-74,-8,-8,18,-16,16,-3,-21,0,-6,-87,-54,-18,-7,21,-55,-76,-11,-6,-39,12,44,25,-4,-3,-56,1, 
  /* [24][0][][] */ 3,-35,74,51,-24,20,-8,-24,-25,8,31,-10,15,-12,9,-105,-45,-13,-3,-79,46,17,17,11,24,14,-15,-50,11,-5,-15,-12, 2,-5,-8,106,1,-115,4,33,-35,-5,-23,-28,-4,0,-12,-41,37,5,11,-68,1,-7,2,8,-89,-9,-127,-42,-10,-1,-55,-1, -14,-10,-40,7,38,35,9,40,-37,7,6,-11,-9,3,-6,2,101,10,-3,33,69,1,-11,-12,-17,-95,-54,-36,-4,45,-95,1, 
  /* [24][1][][] */ -8,25,28,-87,-34,54,2,25,-43,-23,16,2,32,-2,-10,24,-76,-14,-1,-33,-33,-20,26,-2,-33,28,-52,-18,-5,39,60,-6, 1,-1,10,-8,-26,-70,12,36,-34,-19,-2,12,25,1,-5,-126,-2,-4,1,-74,-56,1,-7,7,-29,51,61,3,-8,-22,49,6, -9,-77,-34,-31,-31,67,14,33,-37,-7,28,16,10,8,-14,-50,76,14,1,-87,41,16,-5,-1,82,-25,11,27,14,44,44,3, 
  /* [24][2][][] */ 4,-43,-18,-51,-18,-53,9,1,-38,8,25,1,35,-8,6,71,-34,-5,-4,5,-28,-59,8,2,-67,19,11,20,15,34,-52,-5, 2,91,4,50,-24,76,-8,-20,-12,-2,-11,-66,20,-8,-9,-38,-54,23,8,-43,-38,-37,-5,-13,28,-6,46,24,4,-28,-36,-11, -11,-9,-57,20,8,6,-11,12,-21,-9,20,-5,26,-2,-7,-13,-9,9,10,-71,44,-46,-6,-7,53,-72,-79,9,0,23,19,8, 
  /* [25][0][][] */ -13,4,51,-1,12,52,5,20,-35,0,67,30,35,-13,-4,18,-12,6,-14,-76,-16,55,5,5,-45,32,1,13,5,43,51,-9, 11,-49,6,-32,17,-82,7,30,-22,-11,29,17,20,-7,-8,-61,33,0,6,-49,-27,24,-11,15,-2,13,47,4,18,-10,14,4, -2,-8,-33,-22,-4,-32,4,15,-22,10,17,5,-12,-6,1,-66,12,-4,2,-33,70,-4,-8,-6,29,-29,28,6,-4,-1,10,5, 
  /* [25][1][][] */ 2,-49,44,30,13,22,2,-23,-14,-10,29,-14,47,-15,-8,45,-23,-1,-3,-73,-87,-9,13,3,-72,37,37,-6,6,-28,18,6, 3,-83,25,-8,0,12,-6,43,-13,-11,19,-8,33,-4,3,-17,-34,-4,7,-30,-55,-47,4,-10,-42,10,60,8,2,-15,-33,-6, 3,7,-48,-79,15,-49,-6,43,-38,-1,22,8,9,-2,-4,-67,-33,-5,-3,11,-32,-31,-4,-5,-8,-72,-11,8,-4,-20,-3,-14, 
  /* [25][2][][] */ -1,-110,-73,31,47,-127,-3,-11,-13,-11,22,-4,28,11,-3,53,-54,10,3,6,-14,-121,0,5,-9,-9,-28,9,-6,3,5,0, 7,54,-82,-85,16,-2,-7,14,-16,9,20,9,27,-2,-5,-18,-38,14,-8,25,13,-18,-6,2,-7,28,-18,8,17,5,42,-11, 3,-35,-124,-64,32,-28,16,32,-17,5,9,8,-2,0,-11,-77,81,-1,-1,19,-8,29,-15,13,4,-64,-6,0,17,-6,12,-11, 
  /* [26][0][][] */ 12,-48,-25,-1,11,-33,5,-10,-17,-14,-4,26,0,-18,-31,25,20,-1,-15,-49,-91,-22,-10,0,17,-23,21,-22,11,-4,-4,10, 2,0,5,-89,-20,-3,12,23,-13,14,15,17,-6,-21,19,-67,-92,-1,-3,-32,-42,6,-5,-18,-37,-44,-75,7,-16,-17,-65,9, 12,-40,14,-69,-20,-5,17,8,-3,3,-16,-13,-13,19,8,-54,-95,11,7,-50,-31,27,10,-5,-4,-26,-92,4,-33,-15,-72,-10, 
  /* [26][1][][] */ 14,-57,3,-52,-25,-8,26,20,-8,-10,-29,28,17,10,-20,8,-30,-17,-8,16,-32,-25,2,-9,-15,-43,-79,4,9,6,-77,-7, -6,-31,-28,-127,15,-8,30,-6,-23,20,11,-13,-20,13,-3,-39,-69,-1,-26,-7,-60,-76,-1,-7,-9,-40,-79,-14,6,2,-79,-3, -4,-79,-26,-93,12,-30,29,2,4,11,-8,32,19,13,-9,-43,47,33,-1,13,-86,-53,-7,19,-19,-6,-106,12,8,-21,-69,12, 
  /* [26][2][][] */ 19,-5,-3,-86,16,-25,22,-7,-10,21,-17,-1,-13,11,-7,-73,-80,-15,15,0,-19,-43,23,25,-64,16,43,-10,-21,-15,-9,-23, 11,-40,28,-112,-2,-11,10,17,-19,-4,6,20,-14,-5,25,-79,-25,30,9,0,-43,-4,-25,-9,-60,19,33,15,11,32,24,19, -10,-65,-49,-82,11,-26,-3,5,-2,17,8,-7,-19,10,7,-37,-90,0,-9,-26,-56,-19,-26,2,-30,-38,-36,7,7,5,-23,1, 
  /* [27][0][][] */ 6,56,16,-112,-10,56,-10,18,-3,-6,-12,-6,7,-8,3,-58,41,-2,-16,-54,-53,8,19,-6,-56,-1,-107,-26,7,17,18,7, 4,-9,34,-88,5,0,2,17,-1,1,48,-23,27,-1,-15,-121,18,-9,-4,-7,-80,31,-25,6,-62,-12,-99,-11,-2,-2,29,-13, 6,-26,16,-85,8,-9,-5,23,9,-9,-7,10,30,2,-17,-57,5,11,0,-49,-28,-31,0,3,-32,-4,-115,-27,-11,1,-22,-12, 
  /* [27][1][][] */ -13,-29,-3,10,9,106,3,15,-17,4,-26,-4,2,-10,-4,27,-96,-3,-5,-70,-87,-31,26,-4,0,22,46,-12,-4,-8,19,-11, -16,-22,-9,5,-9,-27,-2,12,-11,-13,18,-6,5,-5,-8,-34,-77,-27,-13,-20,-73,-21,-18,6,-73,2,0,-1,-1,-24,-7,7, -3,-57,-6,-23,-13,-49,-9,4,-6,-7,7,-14,-1,7,-7,-23,-81,-1,-3,6,-127,28,-13,-2,-19,18,-56,-3,-4,17,6,-13, 
  /* [27][2][][] */ 1,-58,-21,29,39,-47,4,17,-26,-14,18,6,7,-8,-9,72,54,0,-2,39,20,-110,-22,-3,38,-34,52,0,6,21,-43,7, 6,11,-16,-91,-23,9,-12,-59,-3,0,33,2,1,9,7,-30,28,-7,-12,-75,1,-52,13,4,-42,-28,-12,-7,4,-19,-22,-13, -4,-105,18,-97,-14,-40,0,5,-14,-14,14,-17,-6,-10,-8,-72,-50,10,-2,-49,-4,44,2,3,-42,42,-30,-12,-8,9,-34,-11, 
  /* [28][0][][] */ 2,25,7,-68,-30,-68,-12,-27,11,-3,4,-6,-10,2,-7,-4,-44,0,-17,68,-86,-17,5,-8,102,98,-41,7,-6,4,-36,-16, -9,35,-127,0,4,15,-1,22,-10,-6,36,-4,-22,4,7,-65,-18,-1,-9,54,-17,1,5,0,-91,-93,-48,-1,-2,31,-97,0, 1,22,-126,11,33,-72,7,-23,-10,6,18,-12,10,3,8,28,32,-25,0,39,-32,-23,-10,6,43,15,-42,-31,-2,20,22,3, 
  /* [28][1][][] */ -13,-3,-51,-79,-1,-90,-7,-8,4,-13,22,-12,2,-37,5,12,-97,-1,-5,-79,-73,-97,-5,8,-17,62,10,-3,-11,26,10,-12, 2,73,-15,18,9,-16,-12,9,6,-2,31,-5,-35,-11,3,12,-25,5,7,0,14,-61,-9,-6,-79,-78,-19,-34,6,47,-48,3, -10,25,-26,38,35,-24,8,-19,13,-9,15,-10,-12,13,9,52,29,-31,-8,-5,-1,42,2,10,8,-22,25,7,0,31,-61,5, 
  /* [28][2][][] */ -1,-125,-89,-67,12,-56,4,-13,7,-8,5,-9,-1,9,-2,17,-8,-6,4,27,19,-70,-10,-3,-68,41,-61,-10,2,29,10,2, 2,-98,18,101,8,66,4,9,20,-13,34,-12,0,21,-10,31,-40,4,9,52,28,-47,-2,5,-20,-42,-33,-24,7,13,-57,-9, 6,-35,-13,22,12,-28,-3,-12,-26,-1,3,-12,3,11,-5,29,43,-19,3,31,1,13,-7,9,25,-20,44,-39,-6,0,15,-5, 
  /* [29][0][][] */ -12,-34,-29,-102,12,-30,8,-7,-11,-9,10,41,-7,11,-46,-22,-72,4,-24,16,-122,-50,30,51,-13,-31,60,-8,17,15,-40,-2, 50,-81,-2,-22,4,0,24,-30,24,5,-12,19,-32,-21,-8,8,-102,-26,11,-42,-127,-64,24,-18,-60,-60,-2,-6,-33,4,-50,-5, 43,40,-58,-12,-14,10,-17,40,-34,-15,-5,-24,12,-18,-45,-21,-65,-17,23,-32,-95,-64,-14,-10,-47,0,-35,-1,-22,1,-45,-41, 
  /* [29][1][][] */ -27,-83,-17,7,0,-6,-1,25,-5,-6,-12,-10,-38,-31,-32,-62,-108,0,-9,0,-31,-94,-2,-6,-54,-96,-13,31,-22,15,-12,10, 32,-100,-70,-4,1,-52,31,-40,23,-24,-48,14,-17,-22,0,12,-86,5,32,8,-103,-117,-2,-7,4,-86,-15,-3,-18,35,-92,7, 27,-15,-50,36,29,22,25,38,-19,18,-19,33,53,25,-9,-32,-69,2,6,30,-33,-45,-31,-6,-62,-27,23,10,24,48,-55,22, 
  /* [29][2][][] */ 33,-15,-15,-86,-1,19,-2,-19,-17,36,-41,24,30,21,2,-104,-76,-8,-31,-11,-54,-52,-25,17,-36,-38,42,-34,3,-32,-4,-6, 9,-33,-83,-21,-18,20,45,38,-6,19,-46,13,-6,22,1,-37,-100,-40,-48,0,-93,-33,-17,31,28,-80,-72,-31,25,-9,-54,1, 5,-31,-42,18,-37,-22,18,37,9,37,22,-24,-50,-33,3,-34,-75,52,3,-40,-93,4,-22,-48,-33,-81,-76,-13,15,-8,-10,-28, 
  /* [30][0][][] */ -7,25,-5,-21,8,5,-6,-8,13,0,14,14,1,5,-4,5,-40,17,2,0,-105,-29,7,-13,-50,-20,51,-2,-11,23,-25,-17, -4,-4,-94,-71,7,-38,-6,-1,7,6,-5,-5,-5,-13,5,-9,-42,24,-10,20,-73,-87,21,7,-42,-56,45,12,-4,4,-49,-11, 10,-119,-45,-18,0,-44,-4,11,27,7,15,0,12,16,-1,1,-63,5,10,-30,-42,-8,21,20,-39,-14,13,-9,-6,16,3,-3, 
  /* [30][1][][] */ -1,27,-15,-6,5,-22,6,-6,-17,1,-17,16,-1,-8,-4,-6,5,-2,-12,-41,-84,-14,-11,-5,-18,-12,-33,17,-10,15,-28,10, 0,-13,-44,-49,9,-47,18,-11,-13,9,15,-2,16,-5,-6,-14,-21,-14,6,-57,-58,-28,-8,1,-39,-52,-22,14,-8,20,-64,-19, -3,-110,-40,-16,-2,-15,12,-14,-15,4,-6,9,10,14,9,-10,-53,20,10,-17,-69,-53,-18,2,-69,-36,-20,-2,3,22,-84,-3, 
  /* [30][2][][] */ -9,-69,1,37,8,-48,19,12,-4,17,3,13,-1,-7,-6,5,-53,21,9,-12,-54,21,2,10,9,17,-36,19,-11,12,-68,-5, 18,-27,-111,-32,10,-48,-5,11,4,-8,-3,-6,-9,-8,4,-18,-12,19,4,-26,-51,8,-18,11,-31,-31,-6,13,-11,4,-59,-22, 16,-96,-67,12,0,-13,18,15,9,13,0,0,13,-8,-2,-27,1,2,13,12,-74,-8,-11,11,4,-88,-29,-7,1,9,-127,-6, 
  /* [31][0][][] */ 1,11,-65,-76,-30,96,-11,4,18,-11,18,0,-12,14,-9,-15,50,-10,10,47,39,13,2,-7,-27,-24,59,45,4,-4,-51,-9, 4,2,-30,-27,-27,29,-5,-17,24,-17,6,-5,14,40,-9,-31,-28,17,-10,-35,1,-62,14,-1,14,-51,-31,14,-2,16,-55,-10, 4,-29,-87,92,18,-29,9,15,-9,18,-6,2,3,-4,-10,-3,15,26,15,51,-29,1,-7,2,-26,-28,-20,14,-4,35,-101,18, 
  /* [31][1][][] */ 1,-127,-56,-66,-47,13,5,-13,10,-6,8,11,2,16,7,-107,-9,-8,7,57,-29,-22,7,-10,-40,-37,65,28,8,24,-61,1, -10,22,-72,-14,-39,-57,-2,13,23,-14,2,-30,8,15,-9,-6,-76,8,-14,27,36,-28,32,-2,48,-38,7,16,-4,-18,27,-4, 2,-32,-21,47,-2,-12,-14,20,4,-22,-1,3,-8,24,5,-52,67,12,1,-33,6,57,3,-6,-2,8,9,9,-13,30,-8,-13, 
  /* [31][2][][] */ 9,-17,-31,-45,16,-64,9,-8,-1,7,18,-14,-1,18,3,-71,-29,-15,14,-70,-45,46,9,-2,-44,-61,34,25,6,24,-62,-4, -6,53,35,-48,-33,-33,-5,5,31,6,18,-15,-2,24,4,58,-102,26,0,-77,22,-22,14,-14,28,32,-27,25,6,16,28,-2, -7,-36,71,42,41,19,-8,8,24,-20,1,-10,-4,-21,5,-12,68,-30,6,-20,1,76,-13,6,-1,19,45,32,3,30,49,4, 
  /* [32][0][][] */ -55,-14,-22,-127,10,-80,-8,53,-63,-66,13,31,39,-83,27,-4,13,-39,-87,-27,-27,-63,-31,33,-96,17,-88,-41,-75,1,15,-46, 40,-14,-54,-106,21,-60,29,-57,10,31,-14,-12,7,-10,-31,-83,-87,-17,-28,-43,21,-2,34,-17,7,-94,-30,-73,-29,5,-98,-6, 5,-80,-60,-45,-38,-60,-5,37,-74,-28,14,22,34,20,-85,-68,-42,57,8,-63,-31,2,17,-31,-33,-64,24,-29,-29,-17,-110,-57, 
  /* [32][1][][] */ -47,-87,36,-55,1,13,14,-32,1,-18,-21,2,-6,-6,22,3,-39,11,24,21,-68,-21,9,-57,-41,-25,-29,26,-5,-9,-68,-5, 43,-46,-69,-72,17,-4,-64,20,-67,-75,-51,35,-48,-72,-17,-30,-32,43,-26,-80,6,-77,-56,-10,11,4,-8,-77,-88,11,-100,-26, 12,26,-26,-97,4,-22,-3,54,-44,-81,-39,23,-22,15,11,6,-75,39,-58,-70,-97,-68,24,-18,6,-3,10,37,-12,-53,-32,-12, 
  /* [32][2][][] */ 60,-12,-13,-65,-67,-83,22,3,-61,-35,-14,61,6,-73,18,-33,-13,-44,-28,-73,1,10,-59,-55,-69,21,9,-47,-36,-54,-14,-14, 52,21,-102,-79,-17,-54,28,-54,26,22,-57,40,-16,-78,27,-49,-30,53,-47,-71,12,-16,-9,-47,18,52,-21,41,-26,-63,-29,-66, 45,30,47,-30,-23,0,8,23,-23,-57,-88,-6,4,-9,3,2,-32,7,-13,-27,-18,-37,-17,86,8,-67,-40,10,21,-49,-104,-69, 
  /* [33][0][][] */ 1,-13,-33,-28,15,68,1,-21,2,-5,-15,-3,-8,-14,-3,22,13,-1,4,-27,-127,-23,1,-11,-37,16,5,-1,-10,2,-53,-11, -3,-8,29,-26,-14,52,9,-16,-9,9,-13,13,-11,4,-9,62,-47,9,-14,-29,-93,-92,-1,3,-10,55,32,8,2,-5,29,7, 0,-98,26,-96,-10,27,-5,7,5,1,-7,13,5,-1,-1,24,-53,-1,6,9,-106,-101,-3,-6,-42,55,14,5,-10,0,-30,-8, 
  /* [33][1][][] */ 14,-38,46,-45,23,-11,-5,4,-5,-3,3,-5,-8,0,7,-3,-23,-5,-17,-20,-44,-38,5,6,-67,-30,-7,-8,3,-3,-102,0, -9,-40,-45,-37,-30,-70,-4,-15,-11,-11,-7,8,1,-14,14,23,-37,4,-3,-17,-38,-55,-2,-14,-67,-53,-55,-3,-9,-5,9,5, -12,-55,-78,-13,-10,-60,10,0,7,-11,-2,8,-11,-8,4,0,-76,2,3,3,-32,-37,12,2,-1,-76,-85,7,-9,-10,-76,4, 
  /* [33][2][][] */ 7,-91,-21,-60,-8,-16,-8,16,-9,-10,-12,7,-9,-6,4,-86,-73,5,-12,-17,13,-34,-2,-7,44,-72,-35,3,5,-5,-83,-18, -2,-52,-59,-25,-11,-54,7,38,6,-9,-1,11,11,-7,11,-45,-15,-8,3,-3,16,-83,-7,-1,-112,-59,-31,-3,-12,0,-95,-14, -10,-23,-68,-74,-9,-51,-8,-1,-10,-5,8,-6,2,-5,-12,-14,-109,-3,-11,-5,15,-71,13,-10,-32,-93,-114,16,-6,5,-62,-2, 
  /* [34][0][][] */ -1,-91,-121,77,-22,-29,-1,-16,-14,-5,1,9,-2,1,-13,36,73,1,-13,-9,45,-2,-17,-2,8,-89,43,-43,12,1,-73,-1, 9,-3,-56,-36,-30,-13,16,-32,2,5,11,16,17,14,9,6,-11,-12,-10,10,29,-10,5,2,-31,-19,36,-38,-13,1,-1,7, -5,56,48,-46,-49,-87,10,-29,-27,8,14,-3,18,-11,-5,-78,-100,-21,-6,-73,53,-29,-10,-9,-101,42,-78,-57,-4,-9,85,3, 
  /* [34][1][][] */ -7,-47,-8,87,-33,34,-5,-5,14,-10,-17,0,25,-7,5,21,54,22,-10,103,-16,-4,9,-4,-12,-48,55,20,6,-11,-108,-2, 3,-34,-102,-109,-33,-76,2,5,-4,-7,-10,-5,-4,-16,-3,-19,-39,23,-7,69,-42,-110,-6,16,-44,-43,0,-25,-3,-11,11,-12, 14,57,41,-62,-59,-59,2,-22,2,0,-10,-4,31,-12,2,-47,-70,-10,-4,11,-64,-26,-16,-11,-71,34,-43,-45,2,-17,-1,5, 
  /* [34][2][][] */ -3,68,-90,58,-18,127,-2,-24,2,11,0,3,18,14,-4,17,-32,21,9,-50,18,-72,34,-7,-45,-57,22,0,1,-27,-74,-14, 4,10,-93,-68,-30,-81,13,-4,-7,-5,-23,12,-2,19,-10,35,-53,-6,5,-36,-34,-101,3,-1,-32,-25,-68,-36,0,-36,41,-13, 6,54,76,51,-42,-75,10,-27,6,0,-3,0,15,12,2,18,-58,-10,-4,19,-35,-102,-1,10,-78,-21,-83,-41,-9,-20,-2,-3, 
  /* [35][0][][] */ 6,37,51,-75,14,62,12,24,-19,-4,27,6,6,0,3,9,-6,4,-15,-2,-127,50,13,-3,-78,26,-1,25,-8,12,14,-7, -1,26,45,-77,11,10,-1,13,-29,-8,9,31,-2,-11,6,-18,-28,7,3,64,-100,16,-22,-1,-88,9,57,14,-3,9,11,6, -1,6,32,-4,-3,-17,14,21,-17,-4,20,1,-8,-7,-8,-50,-12,13,-15,117,-28,-26,3,3,-22,-10,6,23,7,12,-29,-14, 
  /* [35][1][][] */ 7,-39,30,-2,33,-72,7,-40,-5,-4,38,7,0,-9,4,32,22,1,-12,51,1,-15,-4,7,12,37,18,37,-10,-5,18,5, -11,26,16,21,26,50,11,-28,-16,6,22,-1,-12,2,-19,13,-18,-3,6,-8,-51,-66,10,0,-33,8,24,41,13,-9,-19,-9, 0,31,8,-47,13,6,3,2,-7,-12,25,5,-1,-12,2,-120,45,5,-5,22,-82,-51,3,3,-47,-42,-24,45,5,18,-36,5, 
  /* [35][2][][] */ 6,-57,-49,50,7,-85,-5,24,-26,-3,39,9,-11,-1,3,25,12,-7,4,-14,12,-60,12,0,58,-12,-7,6,-14,10,-25,1, -4,49,-91,36,30,-19,-7,-58,14,2,30,-8,-3,-5,3,35,-31,23,7,4,-13,-114,8,-4,-48,-21,29,17,-10,6,-88,-12, -5,-69,-55,-35,21,76,4,17,13,5,12,-6,-12,4,-8,0,26,5,-11,27,4,-44,-5,8,-45,-54,24,-22,-6,4,-123,5, 
  /* [36][0][][] */ 5,126,-21,-25,-56,17,-2,-15,9,-2,25,0,2,-8,-11,-35,-28,-7,0,-127,-93,22,11,-7,23,-29,-50,-16,3,-29,-68,0, 2,-18,-81,21,-25,-2,1,28,1,5,-30,-13,0,-5,-9,-36,25,-22,-6,-44,-24,-3,4,4,78,-95,-33,7,0,5,-64,1, -1,8,-86,112,1,-32,-3,19,-13,1,-5,-24,17,5,-6,-53,-26,16,-5,-17,49,-6,8,-3,9,0,-81,-25,-9,-5,-27,-10, 
  /* [36][1][][] */ 4,12,-32,-29,-21,-61,-1,20,-36,1,13,-1,12,-5,1,-53,23,0,-8,0,-19,-22,16,3,-28,-22,48,8,-13,31,-39,-15, 8,38,-75,-2,-19,-69,3,29,-37,-2,-35,4,-8,3,2,6,-106,-17,-13,-1,5,0,20,-10,46,0,-95,-15,-12,13,37,-10, -2,-48,12,12,-6,37,6,8,-40,-2,-20,-23,15,20,10,-90,23,19,-10,73,26,7,-6,6,27,8,66,-6,10,8,35,13, 
  /* [36][2][][] */ -4,-32,-46,-108,-22,-76,-3,-18,-32,2,-22,0,-1,-14,6,-115,57,2,-13,-27,-47,48,9,0,-30,-19,64,18,-1,24,-21,-9, -9,76,42,-48,4,25,-12,29,6,-14,-31,5,9,0,0,42,-40,-18,-11,-33,-25,-2,-29,3,-29,37,-35,-4,-4,25,26,0, 5,-60,55,53,20,61,4,-7,-21,-15,-48,-21,-5,-5,8,5,-18,18,-9,41,-35,0,9,-3,-88,5,33,1,-5,10,7,-18, 
  /* [37][0][][] */ -9,27,-6,-80,-48,23,-30,29,23,-5,38,-38,5,1,24,-26,-49,-29,6,-41,-30,-2,22,-33,-25,-91,-63,34,-24,-41,6,-41, -54,-36,-41,-59,9,14,-37,21,-39,-50,29,-43,-31,19,-6,-20,-40,37,-51,-22,-61,6,6,-1,-23,-87,18,-14,-33,6,-4,3, -21,-35,-8,-102,36,-27,-21,-29,22,16,-8,5,-29,-35,-33,1,-43,-1,-4,36,-62,21,-16,56,11,-109,-84,11,14,-49,-22,24, 
  /* [37][1][][] */ 17,-42,-28,-34,5,-27,-19,-9,-23,14,-14,25,-24,-44,22,7,-31,43,27,-16,6,-10,25,-44,14,-67,-2,35,6,6,-55,0, -5,-11,6,-84,14,-11,-44,-4,-15,20,-29,32,-4,-18,-37,-49,-47,38,-22,-18,-57,-45,46,24,3,-2,-21,2,-29,-33,-35,-26, 18,13,5,-89,21,15,-33,-22,22,8,-14,-51,-20,-48,-38,-10,9,1,-8,7,20,-9,0,-17,13,-22,-7,-54,37,-33,-108,-6, 
  /* [37][2][][] */ -3,-48,-39,-21,-29,1,50,34,-8,-6,15,-19,22,-32,9,-17,-78,18,14,9,6,-16,18,6,15,-81,-45,-15,-35,9,-81,-20, -23,5,-12,11,-19,24,46,-17,4,-47,14,21,-35,-10,-38,-49,-38,-28,-30,-42,-46,-33,-38,-10,19,23,15,24,-8,29,-59,-34, -45,-7,-21,-46,-29,4,37,5,19,-28,55,-10,19,-21,6,-39,-58,31,29,45,28,-10,26,23,-12,-42,18,-8,-29,12,-127,41, 
  /* [38][0][][] */ -7,26,-73,29,-27,12,7,33,19,-1,-60,-20,-4,-7,11,-35,-5,0,-9,-9,51,-113,-4,-1,-70,-68,7,53,2,21,-101,5, 4,75,-16,-16,-17,-101,6,18,18,-13,-9,1,-1,8,9,30,69,-18,7,34,-31,-127,-15,6,25,-65,-9,20,1,28,-97,-1, -14,18,14,-16,37,8,-5,46,8,-11,-16,-15,0,-8,-7,14,-23,26,1,56,-39,124,-17,-7,-35,12,-15,24,-7,-23,-21,10, 
  /* [38][1][][] */ -11,17,-45,-52,-16,-20,7,36,26,-8,-45,5,-4,-15,-3,-106,-25,-4,-6,28,6,-18,-14,7,0,-12,106,34,-3,35,7,-3, -12,-40,-82,33,-33,-49,4,41,19,-17,9,-2,-13,-7,5,29,-28,-19,-9,52,-37,-30,-21,12,10,-83,-55,31,11,20,-68,-4, -14,-24,-47,50,-25,45,2,21,5,-17,-6,-10,0,-12,-10,-4,8,14,2,-63,-65,15,24,4,17,-80,-72,23,14,-26,-60,-4, 
  /* [38][2][][] */ -7,5,3,-98,26,22,-4,-21,23,-14,-48,-14,-16,-20,-3,-72,10,-2,4,-41,-37,-24,-11,8,-88,-29,54,-2,-14,38,-4,3, -10,-11,5,42,25,-71,2,15,24,-3,5,-5,-7,24,-1,-4,-28,3,-4,-67,-11,-8,-20,-3,46,25,14,19,3,22,70,-6, -12,-64,83,48,7,-10,-3,-5,9,-1,-18,-29,-2,5,-14,-20,43,3,0,-92,14,35,0,11,44,17,14,-9,-1,16,124,-12, 
  /* [39][0][][] */ 11,-68,-5,33,19,-77,1,-22,10,13,-49,9,2,-15,-2,19,100,-10,-15,-27,-55,-51,11,9,-116,-68,-7,-16,-9,-3,-34,7, -3,13,-25,-33,4,13,-8,8,14,-6,-28,-34,7,17,8,10,-19,-9,-16,16,-23,0,-5,-10,-31,-54,27,-17,-1,43,-24,5, -15,-2,-88,-51,1,32,4,-20,23,-11,-40,26,-8,-17,-6,-27,11,-10,-6,0,29,3,8,6,-64,-65,-2,4,1,37,-52,1, 
  /* [39][1][][] */ -5,-49,-14,11,-4,-42,-8,-6,-27,-1,-29,-8,0,5,1,-29,61,12,2,43,-21,-56,11,-4,2,-111,-2,27,-5,11,-127,6, -4,-41,-3,4,0,33,3,-13,7,-2,-16,-2,-26,30,2,57,-66,18,-7,-12,-85,9,8,9,-23,-48,-70,25,-6,36,-19,-10, -18,-90,-98,-26,-4,99,9,-14,-14,-6,-12,17,1,-7,-4,29,-17,-26,1,-31,-34,-64,-9,11,-32,-79,48,18,8,17,-55,-1, 
  /* [39][2][][] */ 0,-102,-21,-35,-5,-30,-2,23,-35,-5,-14,7,29,25,-10,6,61,2,-6,-70,18,-16,-20,0,53,-12,-8,18,2,-11,15,-13, -3,-48,8,9,-11,22,-9,26,-2,1,-6,8,-18,11,1,86,25,6,-5,-64,-40,53,-31,-4,14,34,0,4,-1,41,52,-6, -9,-91,-18,33,-17,20,5,-9,25,-1,-27,-5,-11,-18,10,-37,18,7,5,15,29,32,20,10,-89,-49,43,-23,-18,16,-79,-4, 
  /* [40][0][][] */ 13,31,-100,-34,19,-40,12,-4,-13,0,17,-4,-43,5,2,-61,-111,-17,-9,-50,-1,-34,-15,-10,21,-110,-78,15,-9,-23,-43,-9, -1,-1,-5,-24,7,14,-14,46,-3,-2,25,-50,-26,6,16,-113,-38,-9,12,-104,-23,47,-14,-16,-95,-5,-75,29,10,-42,-32,7, -13,77,-11,108,20,19,-6,-10,25,-3,26,10,-13,-29,-8,-101,88,-14,11,-28,81,-49,-23,11,22,-32,96,-12,-5,-44,-92,4, 
  /* [40][1][][] */ 11,33,-18,5,24,20,4,11,-16,0,18,0,-17,-10,4,-11,-73,-10,-7,-62,-30,-8,-16,7,14,-34,-99,-33,0,-37,-17,5, 0,12,-5,-98,-21,14,-6,-32,4,-1,37,-47,-17,-10,1,-67,-59,4,3,-37,-63,61,-12,-4,-81,48,0,-14,-4,-10,66,10, 2,52,-24,20,-37,-28,9,-17,32,-6,24,13,-25,-13,13,-28,68,8,5,-84,34,28,-24,-1,46,-4,58,-2,-9,-23,5,-1, 
  /* [40][2][][] */ -4,-1,6,78,23,-67,-5,-74,-4,13,37,7,-11,6,13,26,-55,-4,1,-115,-64,-62,-14,-11,45,-9,-70,-5,8,17,-9,-5, -10,-1,12,-39,14,-111,-9,-10,-10,3,18,-21,-10,11,-4,-43,-11,-3,0,-92,-127,-22,-21,15,10,3,-38,-5,-5,-3,4,5, 5,87,41,59,-11,-1,14,38,18,-4,17,21,-14,11,23,-20,16,-1,-9,-104,-35,27,-32,6,14,33,57,-12,-2,-36,29,-2, 
  /* [41][0][][] */ -1,-74,-92,19,50,-65,14,2,35,-11,9,-2,23,-10,0,-8,-77,-9,3,-7,51,-92,8,8,-107,-14,-8,48,-1,-5,-43,-3, -11,39,-12,0,23,-30,6,-23,42,9,25,2,3,3,-8,58,-82,2,-2,-33,44,7,-3,-2,-53,58,-29,34,11,6,68,-7, 9,-114,-49,1,35,25,7,-30,37,13,20,-14,12,29,-1,14,104,-20,9,-86,-18,-19,1,-3,29,-36,63,52,-10,-4,-7,-9, 
  /* [41][1][][] */ 4,-91,-87,31,17,-48,-3,-22,0,1,6,5,2,-19,9,0,-93,-13,4,-21,-21,-53,6,4,-28,-82,-34,14,-4,-3,-50,-2, -4,77,-8,-17,11,-102,2,13,28,-2,17,5,-8,-34,-6,-66,-16,-12,16,85,-2,23,9,-5,-27,-10,-3,-4,-4,40,-57,14, 7,54,-21,18,29,-26,-5,-9,34,-11,11,10,1,3,3,67,-63,1,-5,-11,-45,-51,-4,-5,63,-51,-48,12,-8,-3,37,7, 
  /* [41][2][][] */ -6,62,63,23,9,63,3,-38,9,-9,0,-12,29,-2,4,-109,-45,-18,8,-76,6,88,18,11,-12,41,-127,21,-6,-12,-73,4, 12,-30,-33,-66,25,3,-6,-1,21,5,3,1,26,4,13,-112,-12,-15,-4,34,-12,95,32,-1,15,-115,-63,21,-11,7,-47,13, 5,50,-99,26,-7,-4,5,25,15,11,30,14,11,24,10,70,43,-10,-7,1,-8,-32,5,-5,37,-81,-55,12,1,1,-31,-4, 
  /* [42][0][][] */ -3,33,-89,-21,-6,-12,1,18,-27,1,-6,1,4,15,-14,-13,49,-4,-2,32,106,3,-28,-1,-17,-74,-17,-45,-15,-46,-29,7, -4,-85,-89,-50,4,-13,-4,-32,10,3,10,-13,6,-12,15,-40,-43,24,3,56,19,-14,-9,-3,-51,-45,-13,-67,-10,-11,21,7, -15,-79,-103,68,-22,-60,6,11,-14,5,8,-4,-2,17,6,-30,83,-10,7,19,47,-19,-15,6,-98,-109,101,-44,-9,-8,-98,-5, 
  /* [42][1][][] */ -4,-13,7,-14,9,28,-16,14,-32,-4,-8,-14,29,-1,9,17,70,7,-8,-45,12,-8,-16,-9,-70,-65,-1,-7,4,26,-30,-4, -4,35,-84,-77,21,-101,5,-34,-2,-5,5,7,-4,5,3,-46,-47,27,-10,2,-29,-81,3,2,-25,-112,-6,-6,0,39,-77,-14, -9,54,-47,-44,8,-73,0,28,-14,-2,-15,-3,10,-4,12,-97,-41,-1,1,-92,15,22,4,-5,-40,-90,-4,-31,4,33,-25,-5, 
  /* [42][2][][] */ -2,37,99,70,0,15,-10,48,-35,-15,-11,-10,-3,-11,-14,79,93,-9,-16,-4,-82,127,-23,1,-105,17,-24,-24,-10,-26,-4,-9, 4,59,-53,4,36,-98,3,-32,-6,2,-19,-9,-1,-32,-7,-18,-79,14,-9,-14,-69,-76,-7,-9,-31,-82,-45,-28,6,-18,-87,-12, 1,87,-17,-88,-2,-82,-6,-15,-16,-6,-7,-2,-4,0,7,-98,-60,5,7,-58,-38,4,-12,-4,-101,-37,-24,19,4,31,-106,-8, 
  /* [43][0][][] */ 1,-21,-18,22,-35,-123,7,16,6,7,-30,10,15,10,-9,61,-8,-4,4,27,56,-120,16,-3,-125,-54,-17,2,9,4,-77,-1, -7,33,-80,-26,-23,102,4,35,-16,11,16,4,-15,5,-10,-13,26,-2,-11,51,7,-71,-16,14,-69,-55,11,-14,-11,-15,-58,-6, -1,38,30,-127,-32,-61,14,44,-16,-7,1,5,12,-14,-7,-55,4,-9,1,-90,61,69,-21,7,-13,55,-82,-17,5,-29,99,3, 
  /* [43][1][][] */ -3,-35,-63,23,-48,-37,-2,6,-27,10,-20,1,6,0,11,65,-15,13,2,7,-33,-2,0,10,-20,-48,-33,12,-2,20,-93,-4, -3,19,-101,43,-30,37,13,17,-9,5,15,-2,-11,6,-6,-10,-19,9,-6,58,-87,-118,-11,-8,-20,-38,-99,-17,6,37,-76,-13, -8,13,96,-20,-28,-27,7,-11,5,4,22,13,21,-21,4,-28,-73,1,-6,-30,-47,26,21,-1,-22,16,-59,-16,3,24,21,-2, 
  /* [43][2][][] */ -8,51,-8,-8,-35,35,-2,32,19,-10,-6,8,6,-2,13,-33,29,1,-8,88,-4,-38,23,-15,-21,-81,18,-15,-5,-9,-56,-11, -2,-14,-36,23,-14,-57,4,32,-13,-9,50,1,-17,-29,4,41,-8,-3,10,87,-51,-17,26,-2,-115,18,-24,-16,-1,32,-63,0, 9,21,38,30,-17,-58,11,11,14,-2,36,-10,8,-21,-10,28,-51,-16,2,-14,4,-39,4,-2,0,24,76,-24,8,-26,-42,6, 
  /* [44][0][][] */ 20,-23,-43,-99,-24,-19,-25,4,-12,18,-52,-48,14,-46,-3,-87,-52,-60,5,-56,-59,-96,33,-21,-85,-15,-67,21,22,-22,-103,-61, 14,-37,-40,-67,-41,-61,-14,-39,-20,-2,-59,18,0,17,17,-90,-55,21,-5,24,-83,-63,4,-38,-43,-1,-22,-24,26,5,-23,-12, -22,-22,-14,-44,48,13,60,42,15,-55,15,20,41,-10,8,-1,9,19,-58,-78,-63,-100,31,50,-77,-91,-20,41,-60,13,-32,18, 
  /* [44][1][][] */ -29,19,-55,-29,-53,21,-48,-19,-39,-34,26,11,-37,12,3,-11,-12,-35,-13,19,-71,-89,-26,25,-70,-24,-36,-34,0,-61,-22,-1, 32,-90,-63,-56,-36,-37,-55,-31,26,-22,0,9,-19,22,7,6,-48,-6,6,19,-29,-127,-34,-47,-110,-5,-59,15,-4,-30,-37,-18, 11,-57,-74,-56,-34,6,-25,-14,-8,60,-51,-2,25,-30,15,-46,-105,8,4,-19,5,-67,13,-12,-35,6,42,25,16,33,-76,-54, 
  /* [44][2][][] */ -21,-27,-24,7,17,-16,27,17,-58,-47,-41,-29,13,-36,-33,4,6,-20,-41,-23,-38,-73,-38,-34,12,-45,20,-42,-29,-42,-16,30, -75,-3,-49,-27,-26,-34,-36,35,5,-3,-6,-20,-28,-49,43,-92,26,-16,-59,-26,-81,-20,-44,25,43,-2,-8,7,-20,-17,-65,26, -39,5,73,-68,-3,-34,-41,-16,-1,-5,-29,11,-9,-38,23,-74,-58,6,5,-16,-16,-38,-8,-46,-23,-28,6,37,-34,4,19,31, 
  /* [45][0][][] */ 27,-39,-34,-28,-45,31,67,84,34,-6,-40,-19,-66,-13,-28,-58,-96,-60,-42,-9,12,-90,56,7,-49,-21,17,-3,30,61,-24,60, 41,18,-1,-52,59,-56,-24,31,74,4,-12,62,-33,55,20,-50,-40,-8,66,16,-40,-81,8,2,-42,22,-127,-23,36,-21,-46,37, -10,10,-86,-28,-30,28,67,6,87,70,34,38,-21,27,7,-41,-79,11,-24,51,-31,-3,-28,23,-3,34,-89,57,-27,41,-105,-41, 
  /* [45][1][][] */ 0,-9,-63,-82,-30,-24,-16,19,-18,64,4,7,-46,54,-41,-15,43,-48,-4,24,-43,-20,13,4,-5,-2,-56,-53,-65,38,-56,16, -6,2,-43,-62,18,-17,73,29,-20,29,8,-22,5,-15,12,-37,3,32,37,0,-34,-46,-3,-50,-62,32,-64,29,9,-6,-54,6, 49,-14,-62,-79,41,-41,-27,-16,22,70,29,37,32,-8,-31,-78,-55,-54,52,59,6,-6,-32,-3,-80,41,-63,81,0,54,-119,-7, 
  /* [45][2][][] */ -18,-34,34,-80,-35,58,-18,30,7,-31,2,60,4,2,-16,19,-85,10,66,-27,-23,2,-24,-3,-84,-22,-107,-16,-41,-35,-18,-23, -8,-19,-28,-58,16,38,7,-8,-10,66,73,22,13,-9,35,-45,24,-14,53,75,-73,0,-73,-11,-84,-57,-20,-35,-57,-11,-58,7, 35,-20,31,26,49,-30,67,42,16,-7,32,54,24,17,23,25,62,-65,49,23,-6,-25,-19,-24,17,18,-48,36,-70,-2,-76,32, 
  /* [46][0][][] */ 3,-103,-109,61,-28,4,-3,-7,-15,-26,-10,-9,7,1,-6,-36,-6,14,-23,-27,-32,-36,-10,-10,-17,-87,-69,-21,-12,2,-53,-9, -25,-43,-107,-36,-13,-2,23,-18,-15,14,8,21,-14,-27,-15,1,-69,11,2,4,-61,-81,20,-9,-19,-120,-86,0,-22,-8,-96,-7, 14,24,4,-64,-5,2,12,15,6,-19,12,0,18,-3,0,-40,1,1,5,-12,-35,26,-2,-9,-44,-10,-54,10,-3,0,-14,-24, 
  /* [46][1][][] */ -5,-17,-16,41,-29,14,-4,4,-4,-10,0,10,14,-29,20,-9,-3,10,0,-53,-127,-36,4,20,-24,-10,-49,-21,5,-7,-27,7, 1,-41,-33,-58,-26,-7,19,20,9,12,-7,0,3,-6,2,-20,-105,-10,-30,-2,-72,-36,-9,-20,-46,-31,-32,-6,7,3,-4,-2, -7,44,-11,-11,-6,-23,9,4,-12,-11,1,1,-5,-7,-13,-17,-59,2,2,-32,-46,-47,-20,10,-38,-27,30,-8,1,2,-13,-31, 
  /* [46][2][][] */ 8,-72,-40,57,-12,21,-7,-17,-13,6,-21,-8,-3,-19,-25,-28,13,-11,-23,-44,-22,-84,-9,-20,-27,-70,-16,-16,-10,12,-62,-2, 12,-29,-41,-92,-5,-21,-9,-11,6,7,-3,1,-18,3,-29,-39,-95,18,-3,-26,-72,-30,-10,-23,-4,-36,-80,7,15,17,-24,-26, 12,-41,-38,-25,5,-2,-5,-9,-14,-20,-2,-4,13,-2,-2,-32,-21,15,-21,-10,-31,-40,5,-2,-45,-93,-71,16,12,-5,-56,-26, 
  /* [47][0][][] */ 0,52,-38,-32,-37,53,14,23,-11,-2,-58,2,-6,-18,2,47,-17,0,-16,-60,-24,-95,31,1,-61,-10,75,24,8,-11,13,3, 4,-1,61,-11,-8,-36,-6,65,20,3,-14,-14,7,-15,-8,-105,24,-15,0,0,-22,59,-17,-13,-70,49,40,18,2,6,12,6, 24,-22,-18,-53,25,-44,9,-2,0,-13,-12,-1,-9,-13,-1,-106,22,-10,3,-58,-44,-16,-7,16,-32,-42,-35,-21,-11,26,-48,-6, 
  /* [47][1][][] */ -4,96,-84,-63,-47,-44,5,-10,-15,-8,11,-3,-8,2,3,51,-127,0,-12,-71,-22,-62,28,6,-3,-23,32,-8,16,-20,-28,-7, 4,6,25,-115,-32,36,2,59,18,5,-25,7,-12,1,-4,-95,-2,8,-9,8,-48,20,-15,7,-79,-10,-125,-28,10,-9,10,-14, 3,39,-8,-57,-24,-1,-11,-24,37,-3,56,6,-4,-9,-15,-75,-9,5,-8,28,-74,-33,22,-6,-67,-27,13,2,-7,34,-14,2, 
  /* [47][2][][] */ 0,106,-35,-116,-27,-11,-14,-12,-13,0,17,5,0,-12,-1,13,-62,8,10,-27,-70,-6,7,-8,-39,-8,-118,-10,1,-19,1,3, 2,47,22,-99,-26,-84,18,20,35,7,0,7,-7,-2,2,-46,-9,44,13,22,-52,52,25,9,-107,6,-71,-32,-2,-11,24,-5, -14,67,13,-47,-29,-30,-6,7,35,-9,33,26,-1,-13,6,-55,16,8,-4,0,-62,-6,11,13,-62,-37,-31,-24,-12,48,-20,0, 
  /* [48][0][][] */ -23,7,-49,-62,-21,-10,-22,-1,7,-32,1,-11,6,-29,-15,10,-67,-12,-13,-64,-45,-107,-3,-5,-30,-17,8,-11,14,-2,-61,-6, -2,-56,-29,-57,-19,-27,-4,-7,-8,-18,-29,-25,-12,-24,4,-68,-45,0,-13,-70,-61,19,11,-18,-46,-19,-38,-17,-6,-3,-50,1, -3,4,-51,-33,15,-26,-29,-20,-27,12,-28,4,-20,-2,-17,-47,22,-15,10,-75,-48,-27,-16,-17,-28,-33,-39,20,-19,55,-15,-28, 
  /* [48][1][][] */ 11,-30,-60,23,-5,38,26,-14,19,26,8,12,16,-13,0,33,-61,-3,-2,-19,-16,-40,-15,-7,26,-85,-86,15,-16,-31,-69,-24, 19,9,-46,-56,-21,-14,26,16,-25,-5,-30,-22,22,8,-11,-46,-55,17,-22,12,-74,-29,-24,-17,-16,-39,-127,-11,-1,-11,-9,-30, -28,-7,-39,15,0,-54,-17,19,-22,10,-26,31,-7,-8,-1,-39,-28,13,9,10,-45,17,-8,-19,-32,-17,-86,-2,7,5,-47,-27, 
  /* [48][2][][] */ 24,-48,-45,-17,0,-7,14,-25,23,24,-8,20,23,-8,-16,-39,0,5,3,6,42,-45,-7,-13,-10,-26,-8,-25,24,-18,-30,-18, -10,51,-12,-86,13,-18,-1,25,-6,16,15,-16,4,18,-22,-110,-20,-15,-5,19,-58,43,5,19,-70,5,-25,-9,8,51,-8,-21, 1,57,11,13,26,9,5,-6,7,-15,7,23,6,-1,-8,-81,-10,-5,-12,9,-5,20,-8,6,-53,10,-69,13,-29,-24,-25,-26, 
  /* [49][0][][] */ 7,34,63,-113,17,-14,-2,14,49,-2,-20,8,-4,6,-11,-122,-40,7,-1,-44,-95,-42,18,-1,-112,44,48,11,8,10,19,0, -10,-45,-1,93,12,-41,10,2,53,-9,-35,18,-9,-4,-3,-71,-27,1,9,-57,-6,10,14,4,32,3,25,6,10,-3,13,-2, -2,-126,3,-32,34,-28,-5,-37,48,-3,-39,39,-15,8,0,-4,34,14,-11,44,73,22,10,5,94,8,3,0,-7,-7,3,1, 
  /* [49][1][][] */ 8,34,20,-57,-9,1,2,-30,37,-6,-18,19,-4,-11,-9,-32,-36,5,-3,-29,-111,-23,26,12,-15,7,-1,-42,1,19,-30,-9, 1,44,36,-43,18,59,-7,-25,48,-7,-37,22,-13,-3,-7,-77,-39,1,5,-62,-70,24,-21,-3,-55,17,5,9,1,-28,23,-10, 8,-45,-5,-13,-18,-33,13,-35,29,-3,-11,31,-14,-3,9,-96,22,0,-6,3,-56,25,12,14,92,-19,-42,-1,3,-31,-3,-3, 
  /* [49][2][][] */ 6,-36,-42,-46,-10,-97,-7,2,47,-8,-1,5,-18,12,-5,29,-74,6,-2,28,22,-92,-12,6,-92,-42,17,-30,-13,0,-41,-1, 0,-10,-27,15,0,45,11,11,41,10,2,-6,-9,3,14,71,-88,-9,3,64,-30,-127,-6,-3,-64,11,102,40,-5,-22,-21,-13, 0,-61,-38,-42,-10,35,-1,-19,40,3,-6,9,-30,-6,-11,48,-20,19,6,-4,-19,-123,7,-7,3,-9,44,52,11,-23,-43,6, 
  /* [50][0][][] */ 7,-113,-124,61,4,-2,-1,24,41,1,20,-5,18,1,9,26,4,-16,-6,69,17,-38,14,-5,-16,-71,-43,-21,-9,-17,-93,3, 0,25,-2,-68,25,-19,6,47,16,-2,8,-5,23,-3,6,-31,-127,2,-7,69,-57,-43,13,8,-41,-7,-66,-24,-4,-24,5,9, -13,20,24,-114,8,-122,-9,-19,6,13,6,20,2,-13,-5,-85,-67,-10,5,19,-67,50,-25,15,-64,-11,-122,-31,3,-30,29,-3, 
  /* [50][1][][] */ 7,-39,2,82,-4,-16,7,19,36,-2,12,12,6,-13,-6,6,52,-13,0,76,38,-2,-10,-2,11,-7,18,-30,6,-22,12,2, 8,13,-108,-10,15,-67,-1,54,9,12,-11,-12,12,-12,-4,29,-38,-14,12,18,19,-65,-19,12,-9,-55,-21,-30,-12,-35,-34,8, -11,54,64,-59,3,-7,0,7,-4,-3,16,16,20,-25,2,-39,-80,-11,-1,-106,-70,44,17,10,-14,25,-15,-36,-3,-26,24,-1, 
  /* [50][2][][] */ -2,-14,-9,-24,7,-23,-1,-18,-1,-3,-19,9,14,1,-11,-73,-41,4,7,2,-19,55,-9,12,50,4,-52,-8,-4,-29,34,0, -8,-10,-62,-22,-9,-91,-5,40,-17,2,4,11,4,-3,-7,38,-4,4,-5,24,-26,21,1,12,50,-21,63,-21,-12,-21,-14,16, -6,72,-25,-40,-1,42,-4,-35,-2,2,4,14,20,-25,8,11,33,-13,-5,-81,-83,-23,19,-13,26,-6,56,-29,1,-7,-33,0, 
  /* [51][0][][] */ 7,-4,63,-85,-24,49,-3,10,16,-3,19,3,1,-11,13,15,36,-2,9,30,-23,59,-26,0,12,41,117,23,-3,-16,51,-9, 4,-22,-7,-48,-4,12,3,64,40,-5,31,-37,-17,-5,7,-65,-32,-4,-2,29,-36,40,1,-10,-51,-1,9,18,0,1,-64,4, 3,-23,-114,-68,-19,-89,7,6,28,9,29,-7,-1,2,1,-70,30,9,-11,-72,42,-12,-10,15,-8,-105,-115,3,5,4,-91,-2, 
  /* [51][1][][] */ 0,31,46,-66,16,49,3,-52,4,8,33,-8,2,2,12,14,-35,16,0,2,-96,1,-20,2,41,-3,-27,8,8,-22,47,5, -6,12,4,-81,4,6,-1,41,46,-5,38,-1,8,-1,11,-75,-72,11,-2,3,-100,-8,9,-1,-19,-22,-52,0,-6,-16,-34,10, -3,59,-64,-48,-23,-49,14,9,36,-9,34,-22,-6,-1,1,15,17,27,8,10,-19,-27,-3,14,-4,5,-32,-1,4,-6,10,7, 
  /* [51][2][][] */ 10,37,31,-99,0,-36,-6,-9,46,2,37,3,28,4,11,-68,-46,14,8,-90,-107,-3,24,8,17,-18,-56,5,1,-31,32,3, 14,78,16,-111,-4,19,5,31,79,-3,43,-3,6,-11,-11,-107,-63,10,3,-86,-100,19,23,-2,-127,-42,-94,13,5,-4,-15,10, 10,48,-30,-69,-29,-58,6,48,24,0,34,3,20,-12,1,27,-14,35,-4,18,-1,-30,8,9,64,-20,-44,-1,0,20,-20,-3, 
  /* [52][0][][] */ -22,-25,-19,-75,-30,-26,-25,4,4,-14,11,-14,-15,6,24,-46,35,23,-3,-18,1,6,2,14,-88,12,-44,22,-9,18,15,-4, -1,-25,-51,12,7,-61,-23,2,-17,-25,-9,-2,-1,-31,18,-45,-1,30,14,-33,-73,-33,11,1,-26,-35,-33,-3,18,11,-44,-4, 21,-25,-53,-49,-12,-3,20,-4,-18,6,17,6,17,-1,13,-82,3,3,-17,21,-31,-75,8,-11,-19,-75,-19,-24,-2,-1,-48,0, 
  /* [52][1][][] */ -22,-38,5,-43,11,-36,8,7,-5,9,4,8,-10,1,-17,-42,-24,-15,-5,-45,-53,-34,-11,27,-113,-9,-5,10,4,-15,-20,-12, -23,-64,-35,-106,-4,-96,-19,-10,3,-1,-3,2,-21,-4,-17,-80,-25,16,-14,0,-48,-61,1,3,-1,-94,-27,3,3,10,-72,12, -1,19,-36,-93,4,13,-18,6,-1,-6,0,4,-23,4,-7,-109,-35,-13,-2,-34,-48,-19,14,-11,-87,-114,-90,-24,-19,-5,-58,-1, 
  /* [52][2][][] */ -13,-52,-45,-7,-25,-20,14,1,-8,9,-14,-16,9,-27,-2,-38,-50,19,6,10,3,9,-13,4,3,-35,-5,14,-10,14,-9,-9, -17,-49,-36,-30,-20,-45,9,8,-31,-22,-19,15,17,-17,5,-29,-16,8,18,8,15,-49,13,-24,-17,-61,-16,7,-10,-10,-63,0, 13,-8,-8,-74,-5,-4,3,12,-11,8,-18,24,-17,-4,9,-93,-85,22,10,-28,-10,25,19,-14,-28,-104,-80,-27,-20,-3,-127,8, 
  /* [53][0][][] */ 16,-34,19,-19,-47,-68,15,-20,-5,-52,-8,22,-23,-25,-12,-15,-35,-10,-18,25,-9,-70,31,-35,-45,9,-46,-12,17,4,25,-10, -7,22,-23,-24,-43,-9,23,-10,7,15,4,7,5,-11,7,-44,66,-41,-26,-37,-44,-34,33,-34,16,5,34,-7,-3,6,21,-1, -35,-36,9,-91,-25,-29,22,23,-6,-51,-15,-4,-35,-33,-28,-16,-12,-27,-53,-34,-82,-75,-14,27,-49,27,10,-21,10,4,-13,-6, 
  /* [53][1][][] */ -49,-19,-29,-50,17,-43,-28,31,-1,-52,17,6,15,-42,-28,-13,14,-32,-10,-15,-8,-26,-39,32,-99,-42,-44,-9,-6,39,-11,-18, -42,-15,9,-34,8,-38,-10,-24,-47,21,-35,16,-33,-44,23,6,-66,-7,8,-32,-42,-82,22,3,-51,-29,17,-26,-10,3,-47,-55, -15,21,11,-45,15,-36,5,-35,-45,-2,-12,-4,-20,4,-34,-16,-106,-53,-50,11,-72,-2,5,39,-104,16,-40,-2,10,-43,-58,-46, 
  /* [53][2][][] */ -44,22,-23,-83,-55,10,-43,-16,-4,7,-14,-34,-30,8,3,12,-27,-27,-49,12,-105,5,-32,8,-53,-9,-23,7,21,27,-2,-19, -24,0,-2,-52,-36,5,1,4,4,20,-54,21,-25,-33,-49,-32,-81,-18,-55,-15,-57,-63,39,25,-55,-42,7,-21,11,51,12,9, -26,16,-29,-70,-34,-32,-20,39,3,23,-19,23,7,-23,34,-6,-127,13,-10,-4,-42,-19,20,24,-61,-20,-38,10,9,2,19,-10, 
  /* [54][0][][] */ 40,-19,-68,45,-36,-63,71,-36,43,19,-50,1,-2,41,-1,-20,15,55,-21,-22,-69,-28,58,-5,6,-6,-59,-40,-30,21,-86,-60, 34,-6,-58,-35,-5,-20,23,14,-46,-31,49,66,6,45,1,-54,-51,-59,-29,4,-82,8,-59,14,-53,1,-21,-42,-20,82,-51,42, 22,54,-2,-30,-31,-30,45,-53,-6,34,43,17,-33,-7,3,4,-44,-27,8,44,0,-25,-25,39,-49,-85,-46,-67,34,70,-85,25, 
  /* [54][1][][] */ -22,-30,-66,-67,-49,43,74,-35,11,27,53,-7,-49,-21,-45,-11,17,-25,25,-37,-92,5,44,-54,-6,-75,59,-42,10,43,-7,8, 23,-28,-81,-118,52,28,9,-18,20,62,-56,64,41,-2,25,-10,-79,-30,30,-50,17,-31,6,4,-7,-71,-22,9,-24,-17,0,-37, 11,-10,-21,-12,12,42,-9,-33,-25,62,36,49,-61,27,-23,-48,-75,25,25,-44,-38,-48,21,-45,-12,-6,17,16,21,15,-74,15, 
  /* [54][2][][] */ -51,-63,-41,-59,7,-11,71,-7,29,35,17,23,54,-4,32,25,-61,59,9,35,-27,-4,15,0,25,-123,-15,31,52,7,-4,-33, 0,58,-48,-71,-45,2,44,53,18,-54,-14,20,4,54,7,-19,-45,45,30,15,-68,-19,18,-4,-67,-16,-83,-50,39,-42,-76,-41, -17,66,-3,-127,30,40,21,10,28,-57,-37,5,41,53,-22,8,-7,70,-9,-38,-64,-17,32,50,-6,-17,-11,-51,-44,24,-21,24, 
  /* [55][0][][] */ -4,18,48,-85,-11,5,5,11,14,-7,21,1,24,9,14,-92,-26,11,0,31,-38,41,-22,6,-57,14,19,-38,4,-7,-44,3, -10,16,-70,-67,-24,-62,2,-23,6,-1,-18,0,8,1,1,-72,-18,-9,2,-30,-5,-32,-27,-3,-34,-92,-16,-30,6,-1,-102,6, -8,-67,-35,-67,-37,2,6,-36,-21,-4,-27,-28,6,-13,1,-127,-21,3,3,-106,49,-17,10,-9,-20,-65,51,-39,-11,-31,-95,-4, 
  /* [55][1][][] */ 1,12,30,2,-21,1,5,2,18,9,-8,-4,29,2,-3,-51,16,-5,1,27,-37,42,-26,-2,37,-8,-40,-36,-3,-11,-3,-4, 7,34,-80,39,1,38,11,-11,32,-6,2,-4,24,-6,7,-67,15,9,-2,-26,-50,-11,-9,9,-20,-83,-87,-34,0,-31,-51,5, -5,-11,-26,-10,-23,-21,-2,-53,-24,-9,-23,-11,-6,-12,5,1,38,-4,9,-70,18,10,-13,-12,45,11,-88,-7,-5,-16,9,-7, 
  /* [55][2][][] */ 13,17,49,9,9,60,-5,38,26,-6,-22,-3,39,1,11,-26,37,-9,-5,-72,-3,8,-25,-1,67,-2,-30,-35,-3,20,49,-1, 5,40,-9,28,33,94,-3,36,17,-10,-28,11,24,-6,0,-78,45,-9,-10,-57,-64,-14,-37,0,-66,-8,-16,-13,2,-30,-3,-10, -8,47,31,77,26,-47,5,-23,2,6,-25,-17,-3,-8,3,9,33,16,-4,-31,4,33,-1,5,51,33,-68,12,4,-40,51,-1, 
  /* [56][0][][] */ -9,-127,8,27,-10,122,6,35,-21,-14,9,21,-5,-21,3,-13,-3,-12,-11,-6,-16,10,-5,3,11,-115,26,40,0,8,-91,-5, 11,-23,-119,47,-33,-64,-10,-8,-80,-7,-33,-5,-4,24,-10,-8,-50,-1,3,60,-27,-71,7,9,-45,-90,15,9,-9,8,-77,-2, 10,58,-49,-13,-21,-93,-10,49,-8,0,-27,15,-6,22,-11,32,-68,-11,-10,106,57,73,7,3,-11,-28,-10,12,8,-3,18,-3, 
  /* [56][1][][] */ 1,-26,-33,20,11,-56,7,24,-18,1,4,12,15,11,-3,37,-64,5,-6,-123,1,17,3,5,23,-23,80,22,-7,21,-7,-3, 4,-28,-5,13,-3,-109,11,56,-34,-5,-61,-32,3,-25,7,-106,32,0,-7,-75,-2,-20,-16,2,-25,-36,39,30,3,-3,-36,-2, 0,-25,-82,-44,6,-2,7,67,-13,8,-12,2,21,28,-12,-66,4,-8,7,-63,50,-36,5,1,-20,-67,49,25,-7,4,-27,5, 
  /* [56][2][][] */ -7,34,54,-9,-4,-21,-8,9,-13,11,-2,5,-9,9,11,-33,-121,-8,-14,-8,-50,49,16,-16,28,29,-103,31,2,29,40,2, 8,-64,56,-10,36,-31,7,25,-23,12,2,-33,-2,-6,11,-81,6,-3,-12,-98,-31,83,-8,2,-12,47,-49,37,-15,-5,28,-13, -12,-48,-64,31,-13,9,3,7,7,18,-11,-11,-20,15,8,-88,40,9,5,30,-4,-14,10,-3,-29,-8,79,16,-20,5,-100,-9, 
  /* [57][0][][] */ -37,10,-22,23,-22,-31,9,13,-59,-19,32,-41,-30,-60,-5,-40,-41,-63,-59,7,8,-35,-33,-22,12,23,-18,-8,-4,26,-102,20, -52,-5,-35,-25,-57,7,4,-31,-59,20,5,12,0,-70,-25,28,-40,-42,-51,14,-61,-68,23,-15,1,-65,50,25,-34,-25,-24,-36, -31,-19,-102,30,-60,7,-20,-31,-66,-18,-22,-41,14,-66,-47,-23,-32,-13,-6,-30,-11,-34,-55,-3,0,-48,-64,-12,-12,-10,-49,-37, 
  /* [57][1][][] */ 20,-62,-91,-33,16,-81,20,-10,-56,31,-32,-36,-23,15,-18,21,22,-3,-46,-58,-40,-19,14,39,-86,-59,-90,-10,28,-20,-42,63, -34,-35,-37,-65,-68,-27,1,-16,2,-36,-4,25,23,23,-57,-49,12,-40,16,-18,-46,8,17,22,-37,-53,-56,-4,-52,-41,-52,-70, -5,-47,-1,19,-52,-11,-73,28,-17,-66,-54,9,-12,20,33,-38,-38,-2,-49,24,-10,-83,-25,-30,-50,-63,-33,38,-26,-9,-83,19, 
  /* [57][2][][] */ -37,-45,-89,55,-49,-32,-68,-28,-50,-3,-4,-15,22,12,-37,-43,-47,-18,-55,5,50,-47,-28,3,25,-83,-28,9,15,-5,-108,30, 30,-49,-26,17,-26,16,-27,44,-20,-65,16,6,32,1,12,11,-61,-27,11,-57,40,-71,18,32,-49,-127,16,-28,-76,-22,-39,-2, 11,-25,24,-53,-47,5,-10,-13,23,20,-13,-50,-43,-13,27,23,-16,-2,-52,-19,-64,-67,-52,-46,-104,-28,-64,-19,-28,9,-6,-45, 
  /* [58][0][][] */ -9,6,50,-8,-30,41,9,9,23,1,31,-4,7,-21,-6,34,-46,7,5,58,-25,22,-20,2,-72,-14,-19,21,-9,-16,-44,-3, -3,-24,-1,43,-10,-96,2,-3,30,10,12,2,-24,-16,6,-51,40,10,9,72,-38,-94,20,2,-63,-70,-48,27,-6,8,-114,-5, 2,99,59,-22,-50,-89,-1,36,24,-2,10,-34,-7,4,3,31,-86,14,-7,28,-25,-17,-7,-7,16,35,-108,38,-3,-27,70,-4, 
  /* [58][1][][] */ -1,9,-30,-5,11,-60,14,13,-23,-10,37,14,16,-17,7,42,-40,-7,-4,25,3,-17,-21,-4,12,-26,-111,-20,-9,-25,-27,2, 7,-93,-127,22,-2,-77,8,-1,6,0,23,7,3,-13,-3,-78,14,-7,-6,11,-7,-18,-6,-4,-58,-81,-7,-16,-10,-15,-58,-2, 6,68,-38,-57,-21,-65,-5,-3,12,3,36,2,-12,-22,-8,5,-6,19,-7,-7,-5,-25,-14,4,25,18,-74,-11,13,-33,22,8, 
  /* [58][2][][] */ 7,4,0,-29,1,-92,2,13,-28,-4,29,-3,5,-2,3,15,-53,-6,7,-34,-55,-21,16,-6,57,-7,1,15,4,-29,44,-3, 4,-83,7,33,13,-48,-8,0,0,0,12,-4,-16,-13,7,-15,-14,-6,-6,-32,-62,51,-17,9,-14,31,36,16,6,3,34,-3, -6,9,69,-41,-28,-27,-9,20,-35,-6,37,-14,0,-8,-10,-1,14,-2,-3,-17,11,86,-12,7,48,44,16,14,3,-29,55,5, 
  /* [59][0][][] */ -2,7,-66,-19,27,2,-3,-9,20,-3,-13,11,20,-1,4,1,-126,-9,11,84,51,-58,3,14,-31,-47,-3,-4,9,42,-59,-2, 0,90,-14,-42,22,30,-5,-20,25,-3,-25,3,21,1,5,23,-47,-1,1,28,-12,-39,-22,-8,-105,22,6,-45,6,9,65,2, -1,-127,-54,76,-14,-67,7,-27,26,0,-21,38,12,13,-1,63,30,10,4,-20,27,26,-1,-4,-23,-75,26,-5,1,0,-68,3, 
  /* [59][1][][] */ 4,-32,-105,-3,14,-12,-7,-5,27,14,-9,3,-1,-2,-9,-50,-59,-6,6,5,67,8,-11,-3,19,-68,-58,19,-9,-19,9,9, -4,65,-100,-94,20,-106,-3,17,52,-10,-29,6,-25,-3,11,-35,-4,4,1,-40,10,-24,-13,-12,-75,-42,-41,-21,13,-12,0,-9, 5,-55,-95,68,19,108,8,-19,-13,11,-39,11,2,12,6,33,-33,-9,12,-22,5,-98,-10,0,-32,-96,-29,7,-1,-2,-109,1, 
  /* [59][2][][] */ -2,18,71,-61,25,94,-8,-45,2,4,6,0,29,8,12,-80,-21,-7,-8,55,45,79,-22,-4,-15,50,-107,20,4,-19,12,4, 5,21,-88,-103,-1,-41,-9,-14,6,7,2,11,2,2,-2,-78,54,-1,10,11,-12,-2,-14,-10,-49,-94,-84,-27,-8,-22,-39,-10, -6,46,-86,73,23,-34,10,2,-1,8,-23,-19,5,0,-6,19,-14,-19,-2,-68,-9,-98,1,-5,2,-65,-47,-30,11,-15,-33,5, 
  /* [60][0][][] */ -26,-72,-79,-31,-13,-8,29,11,-12,-9,14,17,-55,-36,8,-22,-83,16,-1,-59,-32,-100,-3,-12,-1,-53,-42,26,-46,18,-85,-18, 9,-103,-68,-7,19,-16,28,21,-3,-24,-50,4,-49,12,-9,-29,-116,8,-12,-54,-86,-27,-9,55,-45,-54,-63,-11,-4,-26,-14,-21, 29,-71,-71,-6,-40,8,-20,24,-35,5,17,58,-82,-35,-6,-86,-28,11,-16,5,-73,-50,6,14,-28,-17,-95,42,-25,26,-57,-11, 
  /* [60][1][][] */ 45,-30,-59,-114,4,-62,28,-12,8,-39,-43,-26,-74,-13,48,-112,-82,-26,-28,31,-80,-30,-21,4,-113,1,-22,-29,4,13,-42,-9, 39,-101,-26,-106,28,-46,-34,36,-1,9,-29,-28,-69,-41,-3,-29,-126,-17,-41,4,-78,-29,17,-28,-52,-32,-43,-9,-55,4,-37,-19, -32,-29,33,-83,-15,-4,-2,28,6,-48,32,37,-19,-38,-15,50,-53,29,4,4,-127,-74,58,-18,-104,-44,-36,-30,28,-7,-59,-59, 
  /* [60][2][][] */ 19,-49,-56,-97,-46,-7,-2,-25,-8,34,-21,1,-45,25,-31,-48,-53,17,-12,-2,-75,-107,-14,21,-86,2,1,-14,3,58,-81,-25, 30,-37,-54,-77,3,-4,22,39,-12,3,-21,58,-8,-36,49,-43,-124,36,-6,-13,-110,-83,-5,-32,-82,-20,-65,-61,15,-18,-48,0, 22,-65,-53,-40,-32,22,-18,-17,17,-12,-38,-6,-46,4,35,-37,-109,-13,-35,32,-99,14,-42,11,-21,-40,-41,-22,6,-55,-3,-65, 
  /* [61][0][][] */ 7,-24,15,-41,12,-4,11,-17,29,-15,-24,27,18,53,29,-47,-32,-48,21,44,-26,18,-7,-15,17,7,-49,-20,23,-56,-37,44, 0,24,5,-48,-6,44,8,-8,-4,12,-19,21,-39,9,-12,-33,7,3,-13,-23,2,-78,4,-3,-31,-19,-77,13,-29,-12,-75,-4, -55,-37,-34,5,19,-23,18,3,-42,11,-38,-11,-11,-17,5,-45,-101,47,-2,-4,-54,-40,42,-19,-22,-84,-40,-19,-20,25,-47,-8, 
  /* [61][1][][] */ 47,-29,-45,-1,18,-13,-25,-40,18,18,9,21,-7,-9,19,-36,10,17,32,-16,8,-14,13,-7,-8,-37,22,3,-1,5,-31,4, 13,-33,25,-70,-12,-13,-6,-6,49,-2,-2,-39,-30,19,48,-51,-12,7,7,14,-19,-56,-29,-17,-40,-51,-23,30,-26,21,-84,60, 24,-70,-56,19,14,-60,-37,-12,-48,-12,-37,-54,12,-59,5,-41,-68,-13,7,-48,-89,-81,-27,34,6,-12,-36,-12,22,3,-78,-17, 
  /* [61][2][][] */ 51,23,-4,-77,35,55,6,35,18,-16,-11,-24,32,-8,52,8,-9,10,28,-5,-48,10,-9,-30,25,-17,-20,-7,1,-15,-50,51, 15,19,-32,-127,51,-29,25,14,33,31,-39,-9,13,6,5,4,5,-7,-44,-18,0,-33,-9,14,-2,-103,6,-13,16,24,-45,17, 5,-95,-13,-30,0,5,-20,-30,-54,-36,-22,0,-15,-51,-11,11,-22,-2,-62,-12,-98,-81,10,-40,-100,-82,-32,-4,-13,43,-5,-47, 
  /* [62][0][][] */ 6,-56,-46,10,-16,-10,24,-33,5,-33,-68,-37,0,-4,-47,-69,-2,-60,13,-6,-18,-35,-12,-47,7,-15,-70,23,-76,-37,-44,5, -16,27,-1,-75,-56,-51,-14,-14,-1,4,-38,-43,47,-7,-37,-52,-47,-26,-63,-43,-56,-11,11,10,23,-76,-127,-13,32,7,-66,-4, 5,-23,21,-93,-38,-64,38,27,-26,17,-6,19,40,11,17,-60,-54,-22,16,-19,-82,28,-42,34,-25,-119,-60,-15,-64,-26,-124,-53, 
  /* [62][1][][] */ -34,-30,-27,-38,-13,-14,2,-14,-44,1,3,13,2,19,-66,-13,-50,27,17,15,1,-14,-39,12,-63,-24,-6,-14,-39,-23,19,-25, -19,-29,-37,-22,-50,-33,20,-11,-33,-28,-30,-52,19,-32,6,-107,-40,-6,21,-19,-63,-110,57,-31,-8,82,-88,4,54,-3,-108,-1, 25,-4,8,-94,-49,2,58,26,6,-55,-60,16,-14,10,18,-95,36,-52,-26,10,-68,-51,-3,9,-60,-69,-26,-10,-43,-12,-52,-32, 
  /* [62][2][][] */ -46,-24,-29,-32,-54,18,2,4,14,8,-40,-38,13,14,-21,-30,-54,-25,-53,-51,-49,-49,44,14,-10,-6,-21,0,-25,-7,1,-25, -4,-24,13,-79,-51,-66,-40,31,-62,-23,-11,-12,-62,11,13,-112,-41,10,-25,10,-22,-95,62,-19,14,-35,-47,-32,46,-57,-111,31, -16,43,-29,-100,-10,-58,-24,33,-60,-9,23,12,-38,5,2,-110,-28,-16,-24,-12,-121,-42,-11,-29,-29,-48,-69,12,28,-18,-66,15, 
  /* [63][0][][] */ 9,15,-14,34,0,-54,-3,16,14,5,-12,-2,-16,11,6,1,-73,8,3,-16,-21,-65,-3,-2,-127,-7,-59,20,-1,-19,-15,-6, -5,62,23,39,10,14,-6,9,26,8,-20,8,-24,0,-10,13,-59,3,7,-43,-20,-35,-25,-6,-66,-9,-77,17,-8,-12,-64,3, 12,-78,-28,-1,-1,-34,0,29,13,-6,-30,32,-16,-8,12,37,60,-21,-5,8,3,-54,-11,-5,0,-81,-24,-5,-10,-6,-50,-4, 
  /* [63][1][][] */ -2,-106,-76,48,-44,-81,-3,-2,5,-14,-14,-2,16,-16,-4,24,-32,3,-5,37,21,-85,-1,8,2,-52,-14,31,7,-31,-21,1, -7,-3,-80,32,-31,-18,-4,-10,21,-4,-25,-11,11,-9,-7,20,-32,-2,-3,15,16,-9,7,-7,-104,55,22,-13,0,0,-8,0, 0,-42,-71,56,-17,-41,-1,-15,-1,-11,-4,23,-6,-2,1,82,-35,-4,-6,14,17,4,11,14,-1,-45,62,5,4,17,-38,-2, 
  /* [63][2][][] */ -3,-53,16,-33,-48,-52,-3,33,22,-1,-3,0,1,10,2,-32,-18,0,4,-91,10,24,19,-1,10,-8,-57,11,8,-16,1,9, 7,-50,4,3,-33,-9,-8,18,-22,2,-15,4,-10,30,6,-73,-26,-8,7,-3,23,3,-10,3,-31,-16,-18,0,13,0,29,-10, -1,-51,9,0,-34,-81,4,30,28,-11,-6,8,-21,36,-5,-34,-64,9,6,-8,68,11,1,-8,-64,43,31,5,4,25,47,-1, 
};
const TfArray<4, int> tensor_dimension6 = { 4, { 64,3,3,32 } };
const TfArray<64, float> quant6_scale = { 64, { 0.0017921853577718139, 0.0012664776295423508, 0.0066856630146503448, 0.001738786231726408, 0.0020804814994335175, 0.0074910987168550491, 0.0015233578160405159, 0.0026246239431202412, 0.0029179002158343792, 0.006883199792355299, 0.0018590072868391871, 0.0038696299307048321, 0.006464941892772913, 0.0067631588317453861, 0.0019150716252624989, 0.0042033339850604534, 0.0031998981721699238, 0.0018838635878637433, 0.0072122286073863506, 0.0037839419674128294, 0.0074428319931030273, 0.0013207424199208617, 0.0075790472328662872, 0.007348175160586834, 0.0060692806728184223, 0.0071260337717831135, 0.0034743419382721186, 0.0076131783425807953, 0.0077315536327660084, 0.0020244056358933449, 0.0050781131722033024, 0.007678779773414135, 0.001404348760843277, 0.0069913263432681561, 0.0066244429908692837, 0.0075030545704066753, 0.0076295235194265842, 0.0020606140606105328, 0.0071656038053333759, 0.0075423642992973328, 0.00692027248442173, 0.0070159579627215862, 0.0067870668135583401, 0.0072185061872005463, 0.0017910702154040337, 0.0014762637438252568, 0.0039258128963410854, 0.0065491381101310253, 0.0032791763078421354, 0.0067602284252643585, 0.0074148215353488922, 0.0068519287742674351, 0.0038361686747521162, 0.0020816710311919451, 0.0014130872441455722, 0.0074459100142121315, 0.0070959771983325481, 0.001590331899933517, 0.007564084604382515, 0.0068474514409899712, 0.001850328641012311, 0.0019689688924700022, 0.0017112045316025615, 0.0078492416068911552, } };
const TfArray<64, int> quant6_zero = { 64, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant6 = { (TfLiteFloatArray*)&quant6_scale, (TfLiteIntArray*)&quant6_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data7[32] = { -3332, 7818, 1655, -4481, -10694, -2584, -4656, -9498, -6396, -3309, -5778, -8842, -14877, -3760, -4896, -3236, 2205, -3933, -2810, -6738, 2249, 1690, -14090, -10634, -7941, -1248, -2222, -11110, -2179, -8803, -5979, -5434, };
const TfArray<1, int> tensor_dimension7 = { 1, { 32 } };
const TfArray<32, float> quant7_scale = { 32, { 1.4110944903222844e-05, 4.0253071347251534e-05, 3.5094963095616549e-05, 4.5787477574776858e-05, 2.3535481886938214e-05, 4.3038180592702702e-05, 9.0993680714746006e-06, 2.5916342565324157e-05, 2.1732450477429666e-05, 1.3562722415372264e-05, 3.5166140150977299e-05, 1.6244915968854912e-05, 1.5594721844536252e-05, 2.6349769541411661e-05, 1.013212477118941e-05, 3.6975052353227511e-05, 4.5063159632263705e-05, 1.3993351785757113e-05, 1.5286565030692145e-05, 4.2632011172827333e-05, 4.1382099880138412e-05, 4.2942829168168828e-05, 1.3975984984426759e-05, 1.2609631994564552e-05, 4.3928237573709339e-05, 4.2976545955752954e-05, 4.6074823330854997e-05, 2.0516959921224043e-05, 1.2691479241766501e-05, 1.7856364138424397e-05, 4.5093533117324114e-05, 1.1939251635340042e-05, } };
const TfArray<32, int> quant7_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant7 = { (TfLiteFloatArray*)&quant7_scale, (TfLiteIntArray*)&quant7_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data8[32*3*3*16] = { 
  /* [0][0][][] */ -36,42,-20,-11,-15,-10,5,-60,3,-23,-59,-26,31,-40,-21,36, -58,25,26,-18,-49,-66,29,-31,-15,-58,-44,-81,-3,-35,8,-36, -47,-55,12,-41,-52,-11,-62,27,28,-34,-48,-62,30,38,-21,-21, 
  /* [0][1][][] */ -83,42,-21,-34,-22,20,-10,-61,0,11,42,-84,-16,44,-68,27, -122,-83,22,-26,16,-21,-82,-41,-45,7,38,-54,-24,-39,-74,27, -125,-42,-7,-60,-46,27,-43,22,-46,-19,0,-13,-9,18,-6,-17, 
  /* [0][2][][] */ 92,-14,-9,-18,-5,-45,56,12,1,-64,-25,20,7,31,-72,28, -127,-40,0,-64,-69,-7,-64,23,24,-25,-7,-10,-66,26,-71,30, -78,-40,21,-3,-42,-36,-14,7,-58,-42,-39,-45,32,24,-42,26, 
  /* [1][0][][] */ -37,-103,36,10,-117,8,-84,78,-60,64,-19,-98,26,-3,-55,-4, 27,-72,-44,-9,57,23,-75,-81,47,-114,13,4,-10,5,-46,-20, -23,-77,45,3,-64,-100,27,-58,-64,-85,-23,11,-59,3,34,-11, 
  /* [1][1][][] */ -45,-73,-8,-17,-78,15,-91,45,-33,70,-27,-67,-2,-1,-14,-56, 1,-55,-57,-15,75,-4,-84,-86,-9,-68,-79,12,7,10,0,-69, 22,-7,36,-3,-127,-95,16,-47,-52,-106,-17,14,-82,19,46,-6, 
  /* [1][2][][] */ -50,-95,-51,0,-73,-74,-96,35,-62,48,-52,-94,-54,-23,-31,37, 3,-69,-10,13,96,1,0,-41,5,-19,2,26,82,6,14,-35, 28,5,34,-15,-67,-60,40,-45,-17,-58,21,67,-14,15,51,-6, 
  /* [2][0][][] */ 67,58,80,-17,-110,114,63,-55,92,-36,38,95,-89,8,85,17, 33,47,17,4,-120,-50,101,-30,-33,-31,38,47,-85,8,81,-8, 13,62,-53,-11,-127,-124,7,-87,-112,-63,-11,47,-51,21,16,8, 
  /* [2][1][][] */ 22,23,60,1,-55,-51,28,-51,-32,27,78,55,-43,-15,20,24, -48,-56,-94,-28,-20,-18,-22,-117,-57,-38,-25,-12,19,-3,36,5, -66,-61,-79,7,9,-65,-108,-114,-93,-78,-36,-49,-12,-15,-49,0, 
  /* [2][2][][] */ 20,86,31,-17,-5,-28,40,-27,-27,20,-8,61,15,17,32,-13, -26,22,-68,-27,-115,56,29,-103,-31,-58,-52,-19,24,-11,23,31, -54,-80,-59,3,-73,-113,-112,-104,-105,-42,-25,-41,-95,-2,-56,-4, 
  /* [3][0][][] */ 8,-127,-86,5,92,-61,-91,-34,-34,-22,9,8,-5,5,-63,55, -10,-44,-5,5,-98,-105,32,12,-38,41,-47,-46,19,-4,-74,-3, -102,-90,14,-14,-5,-64,-9,-19,-107,-56,-28,-83,-63,19,-46,10, 
  /* [3][1][][] */ -10,-5,-14,11,85,24,-44,-11,13,2,4,0,10,-16,-102,-84, 23,-6,-25,24,-21,-7,-33,-3,30,44,-64,-24,52,-7,-96,-67, -80,29,54,-11,30,-33,30,0,-73,-6,-24,-92,19,8,-78,-66, 
  /* [3][2][][] */ 32,-11,31,13,31,68,46,-16,40,-47,30,101,-28,-5,17,-57, 73,19,42,-1,-73,78,19,22,79,29,11,-20,-30,-11,21,6, -15,9,74,-2,-50,-18,57,6,-24,-65,-7,-41,-48,-8,17,2, 
  /* [4][0][][] */ -49,-33,-65,5,2,-79,-36,-74,-100,-56,-6,-53,-2,-8,-61,12, 61,-58,-13,21,0,-1,-67,-31,17,-8,-18,-95,4,26,-52,15, 15,-20,-12,-5,-56,3,-73,-57,40,-73,8,-88,-10,-14,-90,-31, 
  /* [4][1][][] */ -41,-8,-52,0,-48,-98,-32,-15,-94,-24,-13,-91,-31,-16,-99,20, 113,-17,25,-18,-4,-10,-67,-21,27,-45,16,-11,-14,40,-127,-22, 57,0,47,18,-79,7,-109,-36,72,-51,14,-32,-74,-7,-67,-8, 
  /* [4][2][][] */ -114,-33,-39,-32,9,-33,-87,-18,-16,-21,-42,-69,32,1,-90,28, 88,-30,-15,20,-39,-24,-66,-22,16,-54,1,32,31,-2,-1,43, 19,-14,52,24,-58,-34,-87,-64,0,-38,0,23,-18,18,-31,22, 
  /* [5][0][][] */ -88,-4,-54,-2,-76,-74,-20,-116,-87,-108,-90,-50,-96,15,-65,3, -25,-17,16,-8,-37,86,-5,-57,89,-98,-54,30,9,10,20,-24, -26,1,-12,5,22,-94,-7,61,-98,69,-21,-5,-10,10,-11,4, 
  /* [5][1][][] */ -67,-49,-51,-11,-27,-46,-127,-28,-73,-60,-73,-82,13,10,-89,57, 71,71,93,-4,-28,98,17,-106,110,-79,28,68,-38,9,41,32, 92,47,127,4,43,-105,5,16,-27,8,40,79,-13,-11,25,-12, 
  /* [5][2][][] */ -46,-44,-60,7,-29,-80,-45,24,-55,-71,-34,-68,-54,-3,-74,-21, -53,-88,-51,-9,-25,49,-3,23,25,-34,26,-22,53,-13,7,-23, -96,-109,-75,-17,76,2,-70,94,-54,57,21,-82,57,-11,-67,9, 
  /* [6][0][][] */ 64,-57,-58,-106,17,-48,-51,29,24,11,-62,30,-73,46,-67,-100, -38,-4,-59,-38,-53,-22,-79,31,26,-58,-106,16,-90,-99,38,8, 81,-85,10,-58,-18,33,-41,-40,-66,56,-35,-30,-23,-65,-10,-66, 
  /* [6][1][][] */ -41,-49,32,6,-46,43,-99,45,-87,-37,-69,-45,-75,36,-127,-32, -61,-13,50,-86,-3,25,-101,-93,-57,-8,7,-102,-69,-28,-90,45, -74,-98,-38,16,-83,-6,-25,-86,-79,-40,3,57,-63,-20,-6,-106, 
  /* [6][2][][] */ -28,-46,-87,34,38,-3,-62,-4,-57,26,12,44,-81,-28,3,-94, -21,34,-86,-20,-42,-32,-16,44,1,-103,12,-73,-7,-50,-43,-85, -54,56,-3,-6,46,-44,77,-34,13,-33,-91,-63,-51,51,58,-83, 
  /* [7][0][][] */ -16,-86,4,-16,-58,35,-6,-35,31,-5,-36,-47,-85,14,-46,-7, 38,-34,-74,-21,-56,-77,24,-98,-127,-78,-99,50,-25,23,3,3, -41,-20,-78,15,-72,-81,50,-71,-57,-30,-62,9,-48,9,41,13, 
  /* [7][1][][] */ 4,-58,3,-10,-66,0,-65,-112,10,-39,-35,-67,-87,-24,-37,-33, -55,-61,-102,-22,-59,-38,-2,-72,-70,-118,-88,-88,-42,-9,-58,-60, 5,-17,-51,2,-59,5,-67,-69,-12,-75,-113,-69,-11,20,6,-55, 
  /* [7][2][][] */ -18,-88,-40,28,-79,4,-45,-62,16,-35,-76,-82,-85,21,4,-28, -86,-31,-92,-25,-81,14,-55,-122,-118,-103,-67,-54,-40,2,-49,17, -42,-9,-32,-14,-90,-58,-31,-58,-50,-84,-53,-72,18,15,-17,8, 
  /* [8][0][][] */ 41,-7,-71,15,-60,16,-18,-39,-63,-97,-11,13,-10,-17,5,1, -64,-23,-35,-14,42,-24,-49,-72,-65,-72,-40,-54,-51,-18,-7,-42, -57,-22,-75,1,-19,-97,-26,-82,-96,-62,-15,-74,30,38,-53,-37, 
  /* [8][1][][] */ 45,-26,-60,-40,-16,-28,-42,-39,-15,1,-79,-41,54,-13,-21,-7, -80,-63,-42,-45,42,-44,-48,-62,-53,-17,-60,-70,23,22,-20,3, -93,-62,-34,-33,-54,-53,-26,-78,-110,-83,-52,-49,6,-2,-56,5, 
  /* [8][2][][] */ -33,-5,-35,-35,-14,-47,-32,-26,-57,-45,-37,-14,36,8,-15,2, -42,-24,-58,-34,-10,-18,-79,-66,-81,4,-29,-79,-2,-17,-12,10, -81,-65,-58,-4,-51,-71,-100,-35,-127,-46,-107,-48,7,-27,-88,-19, 
  /* [9][0][][] */ -83,66,8,-40,-14,-31,31,20,23,0,-52,-46,26,-24,-85,41, -73,-6,19,-6,-38,20,-48,-57,33,-85,12,-80,25,-6,-35,-31, -62,-68,29,16,-5,-42,12,-26,-62,-11,-6,-31,40,-28,-39,-9, 
  /* [9][1][][] */ 11,51,-32,34,-45,-15,21,12,25,-23,-21,-127,-11,-20,-33,23, -13,-66,-50,-18,9,-54,27,19,-3,-66,26,-30,-16,58,34,16, 11,-8,-42,20,-15,2,-30,1,25,31,-43,47,-45,31,-49,-13, 
  /* [9][2][][] */ -94,-36,46,-69,-5,-55,32,-52,-15,-72,22,-84,1,-41,-54,8, -23,-21,-34,-48,-69,-58,11,-18,-29,-37,-2,-80,-26,-30,-65,-44, -14,-54,-46,-25,-64,-11,-23,-54,30,-16,-40,-57,-47,-32,21,-1, 
  /* [10][0][][] */ -23,-22,-38,-23,-26,-60,-46,-30,-59,-21,-21,-44,-8,-8,-20,0, -79,-55,-11,11,3,18,-112,-25,0,-35,-21,-42,-9,17,-12,-4, -53,-68,-39,-1,4,34,-101,-28,15,-29,-2,-89,-8,-16,-64,-14, 
  /* [10][1][][] */ 6,24,-2,-23,-42,-37,-13,-34,-32,-43,-12,-89,-50,-4,-44,-15, -21,-52,12,-6,-12,-1,-35,-34,-1,-36,43,-15,6,19,-95,17, 33,-38,-3,-17,-3,55,-40,-39,26,-17,62,-1,0,-17,-26,15, 
  /* [10][2][][] */ -12,-24,-36,1,-30,-54,-31,-61,-52,-54,11,-7,-51,1,-39,-23, -28,-7,15,3,-1,15,-8,-43,17,-44,-27,19,-75,-1,35,-21, -127,-22,-18,-9,9,-17,-12,-19,-61,-17,-8,9,-69,-28,-8,-2, 
  /* [11][0][][] */ -41,-22,-123,22,-65,-120,-5,-59,-38,-16,-68,-32,4,13,-63,-2, -42,16,-46,2,19,-33,63,-54,-7,-35,-127,-35,-38,56,-30,-9, -102,-99,-4,14,-4,28,-75,-6,-12,-8,5,-111,-12,21,-99,-41, 
  /* [11][1][][] */ -55,-80,-77,10,-67,-108,-48,-9,-79,-29,-103,-15,-10,-5,-88,-8, -115,-36,-51,23,-27,-122,15,-27,-45,-64,-97,-54,18,-14,-9,13, -34,-23,-33,33,-1,-1,-29,29,-26,-41,-24,-56,0,38,-51,12, 
  /* [11][2][][] */ -23,-30,-91,-24,-61,0,-16,-35,-22,-63,5,52,55,-7,-22,12, -67,18,-60,-47,-27,-77,-3,-16,-43,1,-14,-2,49,45,9,21, -35,-61,-22,-46,29,0,-76,-20,9,-36,-73,-103,-15,-22,-67,15, 
  /* [12][0][][] */ -41,-46,-43,14,-45,-46,-46,-101,-51,-119,-20,-10,5,3,-19,-17, -60,-14,-36,-21,106,-8,-39,-86,-77,-35,3,-58,-39,16,10,-9, -28,-16,-26,2,-13,-12,32,-72,-81,-80,-2,1,26,-39,1,-31, 
  /* [12][1][][] */ -34,-12,-55,-25,-52,-4,-7,-74,-17,-28,-93,-59,-2,-47,6,0, 21,-59,-76,5,-37,-19,-9,-18,-81,-99,-5,-52,-28,32,-50,32, -5,-71,-51,17,-63,3,-50,-27,32,-30,-31,-59,-53,-15,11,18, 
  /* [12][2][][] */ -18,7,-57,-40,5,-55,8,25,-127,36,-49,-39,33,-18,9,-26, 25,31,-47,-14,-78,64,-41,8,84,-98,-17,-17,-7,10,3,-13, 9,10,92,-9,-65,20,-45,-54,47,-43,64,-69,12,-25,-15,115, 
  /* [13][0][][] */ -69,-42,7,14,-59,4,19,11,-10,-39,-15,-87,-20,-21,33,6, -3,-4,17,11,-62,-18,25,6,-48,-4,-20,-34,45,-20,-41,-20, -17,37,28,-7,-16,8,18,-45,7,-33,-23,33,25,-24,27,17, 
  /* [13][1][][] */ -40,-17,-48,3,-17,7,-39,-14,-18,-22,-7,-12,-21,-5,-40,19, -75,-29,9,-33,-61,-19,-63,-9,-30,1,1,-71,18,-4,-12,2, -60,1,-3,8,-9,-18,15,-7,-17,-48,-51,-127,-37,13,-126,-27, 
  /* [13][2][][] */ -40,-21,0,13,-24,-11,-42,-17,-37,-29,-6,-66,-5,15,-58,4, -11,-5,-40,-35,-15,-6,-49,-36,-6,-9,14,-44,-8,12,-31,-13, -30,1,1,-15,-35,-9,19,-30,4,-44,-10,0,5,-16,15,-17, 
  /* [14][0][][] */ -72,25,29,-11,-16,30,-21,-86,-35,-59,37,34,21,-8,-46,-50, -60,-40,41,-31,3,-81,-70,-54,38,-2,-73,-90,42,-46,-20,-3, -127,14,58,-54,-24,-43,-72,1,-41,-56,-8,-112,67,41,-95,61, 
  /* [14][1][][] */ -29,17,-76,-35,39,-46,16,0,-43,-87,-26,-34,-25,-32,-38,6, 3,41,5,-25,-75,-17,-69,-81,-37,15,-5,-32,-8,54,0,6, -90,-48,-70,50,-16,-45,79,-67,-74,-36,-30,-43,57,66,-69,-27, 
  /* [14][2][][] */ -21,-5,-55,-56,-56,-50,19,-41,-53,-84,40,-1,-49,67,-85,18, 22,-70,1,-65,-66,41,49,38,-70,-67,34,-31,-87,-34,-1,-76, -11,-68,-40,52,-8,-50,-41,35,-12,21,2,-71,-13,1,-105,-15, 
  /* [15][0][][] */ 26,-60,-27,-24,28,-47,-9,30,-43,73,31,-48,30,-15,-26,51, 18,14,-1,-18,-66,-42,-42,-41,-45,-100,-48,-77,-38,2,3,46, 23,7,-22,-23,-71,-61,-25,-43,-59,-126,-15,38,-105,-10,49,20, 
  /* [15][1][][] */ 4,-32,-3,8,109,45,-12,92,37,99,55,-91,101,5,-46,76, 0,-73,20,10,-9,28,-40,32,57,35,-43,-95,26,-1,-91,-21, -11,-57,24,-27,-33,-12,-3,-59,-46,-85,-29,-22,-81,10,2,-106, 
  /* [15][2][][] */ -6,23,-76,10,127,-40,-10,51,-7,107,56,-35,71,-19,-74,-55, 3,-56,48,-17,-67,75,-44,10,88,44,15,-92,29,7,-103,-30, 0,4,73,1,-58,34,44,-30,20,-31,-27,3,-87,13,13,-108, 
  /* [16][0][][] */ 6,-21,-29,-12,-74,63,-48,-28,7,-31,10,-14,-59,0,6,-9, -112,-96,-44,0,42,1,-50,23,-101,-31,13,-107,-54,-13,-89,-31, -21,-20,-47,10,65,-34,-87,21,-8,59,-57,-8,79,-2,-41,0, 
  /* [16][1][][] */ 62,28,16,-5,-99,49,63,-48,68,-82,35,65,-101,6,30,-3, -34,-43,5,-11,-13,1,25,23,-11,-30,8,-13,-41,1,-15,-82, 65,-8,15,9,-7,-5,-29,31,34,32,1,21,37,0,-19,-76, 
  /* [16][2][][] */ 35,-7,-16,-1,-68,26,15,-127,-9,-96,-23,25,-79,11,36,17, -47,-74,5,-10,36,-40,-39,-18,-58,-69,14,-90,-49,5,-65,75, 9,-54,1,2,77,9,-49,8,-1,22,0,-72,55,12,-83,90, 
  /* [17][0][][] */ -96,22,-82,31,-36,-82,-38,-65,-32,12,-31,-45,-59,-13,-4,32, -31,-25,7,37,-30,-28,-20,8,3,-42,-52,-50,-22,-51,2,12, -10,55,-68,26,-69,-64,-52,13,-53,-90,-12,-17,-58,13,-118,-43, 
  /* [17][1][][] */ -28,-8,-59,23,-4,-91,16,-71,-75,-18,-55,-33,-29,-24,-14,-38, -36,-55,9,-47,-40,-72,6,-28,4,-12,-57,-56,13,-30,-24,-34, -46,19,10,-43,9,-58,-54,-77,-30,5,-64,0,1,-4,-21,-6, 
  /* [17][2][][] */ -78,-1,-127,17,-33,-101,-54,-75,-80,-3,-76,-17,-81,35,-45,20, -43,50,-33,-1,-35,24,-35,8,-77,-51,-80,-76,-73,-13,-21,0, -40,-5,-39,-25,-5,-1,47,-36,21,-10,34,43,-60,-35,-50,49, 
  /* [18][0][][] */ -51,-37,33,-55,-13,-35,-18,-41,-8,-18,-51,-98,-21,-33,-40,1, -21,-90,-18,-39,-5,5,-21,35,-3,-13,-12,-27,16,19,-56,25, -10,-18,25,-22,-31,-54,7,35,31,-13,2,-24,-23,-26,-35,16, 
  /* [18][1][][] */ -127,32,-54,-42,-27,20,24,-19,10,23,-49,-41,-59,48,-41,-22, -56,1,-31,23,20,-31,-35,-20,-3,-47,-6,-73,-52,-39,-32,-43, 11,-2,-44,-25,-64,7,16,10,-26,7,-2,30,0,-34,-34,-53, 
  /* [18][2][][] */ -127,-21,-52,-33,17,19,-23,-47,-22,-35,13,-26,-41,-6,7,-20, -62,-24,17,22,-35,20,-20,-6,-14,-21,-55,-21,-34,19,-20,18, -60,39,19,-20,-68,-43,-3,20,-17,-46,-41,-56,-23,-8,-51,-17, 
  /* [19][0][][] */ -54,-55,-73,-16,-117,-42,18,-59,-107,-87,-40,-61,-89,14,-27,8, -96,-97,-91,-21,-83,-73,-62,-38,-26,-102,-26,-67,-127,-10,-91,-2, -45,-37,-27,11,-98,-6,-9,-65,-40,-106,-47,-96,-112,-4,-87,1, 
  /* [19][1][][] */ -91,-44,14,5,5,28,-45,41,-97,29,-10,-65,18,6,-37,-10, -88,-50,-40,-9,40,102,-30,49,33,27,16,-120,44,-2,-53,-11, -93,-49,72,12,48,10,-109,45,-93,32,-2,-101,80,4,-115,9, 
  /* [19][2][][] */ 5,17,20,6,-58,-1,90,13,26,-23,19,44,-42,16,112,63, 3,-17,40,9,-9,3,-6,-24,71,-25,31,36,-40,7,-14,19, -46,28,27,-6,30,24,-1,24,-23,13,-40,13,50,13,-16,15, 
  /* [20][0][][] */ 17,101,-6,20,70,25,-33,12,42,27,33,-30,59,7,-31,20, -53,44,42,-7,31,7,64,34,-54,38,6,-50,31,5,-7,27, -3,-42,-41,-13,76,34,-94,24,5,37,2,-124,68,18,-101,11, 
  /* [20][1][][] */ -12,-23,0,-6,3,73,9,-5,35,-14,40,34,-19,-4,-41,-71, -28,-25,32,1,-57,21,76,-4,44,11,23,11,-8,7,3,-81, -29,13,-29,6,12,36,-42,6,27,-30,29,-16,-37,-17,-51,-82, 
  /* [20][2][][] */ 35,30,-15,2,-64,43,-82,-43,24,-25,17,-32,-22,-20,-40,-26, -22,-10,25,13,-114,-70,-11,-11,-43,-17,-4,-79,-56,-4,-39,-71, -7,11,-75,-3,-69,-30,-36,-65,-25,-36,-30,-61,-81,12,-55,-127, 
  /* [21][0][][] */ 22,40,69,12,-6,47,23,-17,42,44,11,30,-3,-13,-7,-19, -34,-108,98,-5,21,12,-42,-3,31,35,1,13,45,-11,31,8, -114,-117,-91,-13,28,23,-117,-54,17,-67,0,-125,-35,-7,-127,-21, 
  /* [21][1][][] */ 18,2,39,5,-18,-87,-14,-76,-32,-24,-91,0,-57,13,0,-25, -10,-69,45,9,20,-11,-59,-74,7,-21,-55,24,-9,4,31,-23, -51,-56,-49,-12,57,6,-67,-37,1,-89,-37,-73,-48,11,-50,-87, 
  /* [21][2][][] */ 18,31,2,-15,-68,-57,65,-46,-33,-31,1,57,-113,-20,44,-83, 49,7,25,-9,41,41,48,-42,17,-42,-23,99,-49,5,77,-32, -19,18,-47,15,113,53,18,-8,81,-83,31,13,-16,-20,15,27, 
  /* [22][0][][] */ -105,-48,13,-5,-18,-4,-49,7,0,-91,-31,-109,-61,-46,-106,-47, -31,-43,-38,-43,16,-55,-127,-40,-26,-20,-66,-82,20,-48,-62,-57, -32,-77,-37,-16,29,-13,-89,-1,-121,-33,-5,-46,31,-2,-99,-24, 
  /* [22][1][][] */ -26,-83,-45,23,-50,-13,-81,-14,-34,-114,-52,-104,-33,-45,-91,30, -52,-68,-63,-43,-2,26,-63,-95,-23,-28,-45,-99,-104,-18,-92,-21, -8,-22,-73,-25,-87,45,-11,-41,-69,-44,27,-12,34,-30,-90,13, 
  /* [22][2][][] */ -107,-77,-42,9,-46,-46,-102,-42,-21,-32,-45,-20,-43,-4,-42,-37, -92,-52,-31,-18,-20,-46,-54,-31,-75,-82,-38,-32,-49,-11,-79,-29, -13,-98,-28,-31,-69,-59,-46,43,-121,-39,-72,3,-25,28,-8,39, 
  /* [23][0][][] */ -104,-44,-119,15,-38,0,10,-63,-45,-87,-46,2,-35,51,-42,-26, -73,-15,-36,-48,-21,-122,20,28,-61,-38,-43,-34,-57,23,-45,32, -102,-17,-35,27,-32,40,-61,-50,-56,-12,-96,11,34,18,-103,56, 
  /* [23][1][][] */ -41,4,-9,-53,23,6,-15,-79,-46,-41,-34,-28,14,34,-56,-49, -58,-65,36,-42,-69,-11,25,-27,-85,-58,-62,-127,12,-24,-127,-33, -7,49,-73,41,-48,8,-21,-87,-12,-12,44,34,57,32,-126,22, 
  /* [23][2][][] */ -18,33,-78,-57,-44,24,35,-40,-85,-36,-20,-44,-46,20,4,-3, -43,7,-25,-41,9,-84,-35,-12,-95,9,-45,-123,-30,-29,-17,-25, -10,-24,-32,-66,-10,37,-119,-25,-56,-33,-34,-52,28,20,-36,-57, 
  /* [24][0][][] */ -32,-124,-22,-8,49,-96,-84,42,-35,69,-34,-29,88,20,-92,15, -60,-127,-57,22,-61,42,-27,-5,-14,-4,-13,-69,-19,-15,13,-4, -74,-29,-2,16,70,44,-69,-38,-56,-48,-9,46,10,-24,-26,-19, 
  /* [24][1][][] */ 9,-40,-42,-5,61,-6,-87,54,0,72,-28,-16,99,16,-89,40, -13,-31,-6,-1,-115,2,22,4,-6,-41,1,-64,-60,-6,35,28, -57,17,-13,1,8,14,-37,-30,-61,-87,-16,-21,-17,8,-23,10, 
  /* [24][2][][] */ 87,51,-4,2,-20,13,5,63,30,29,39,70,59,-4,24,69, 41,58,25,-4,-62,-22,100,-27,-9,-125,25,47,-95,-11,98,17, -35,0,-3,-5,12,-37,58,-49,-43,-98,11,35,-82,-1,49,-45, 
  /* [25][0][][] */ 56,11,105,-2,-27,13,23,43,21,43,56,58,9,6,34,9, 66,26,-25,14,-50,58,-4,-54,63,-93,59,32,-97,1,33,15, -7,-43,26,14,-65,3,39,-10,-61,-45,30,-32,-127,-13,-13,-11, 
  /* [25][1][][] */ -30,3,17,-13,5,-20,4,11,9,35,42,29,22,-12,-3,24, 29,11,-59,-16,-9,-59,-50,-51,-30,-92,-8,46,-33,19,25,-62, -32,-30,-7,-18,-22,98,2,-27,23,-35,10,-27,-73,-1,-24,-5, 
  /* [25][2][][] */ -52,-3,-8,-7,56,-65,-17,22,-53,55,20,-38,44,-9,-23,12, -17,12,-74,-20,101,-5,-24,-15,-10,-20,-30,-4,20,26,-6,-15, -57,-55,-29,-8,3,50,-27,-30,-39,51,-23,-103,11,-2,-62,-12, 
  /* [26][0][][] */ 50,-4,85,-6,-122,95,-45,-79,106,-92,34,20,-117,9,30,1, 30,30,55,-8,-75,45,67,-41,44,-102,0,27,-120,-5,52,-34, 48,-35,-22,-5,-22,64,-45,-19,28,-23,-16,21,0,-14,-5,-11, 
  /* [26][1][][] */ -23,26,-12,-3,-47,-79,-31,-33,-64,-34,-52,-41,-35,15,6,-81, -44,11,-26,-1,8,-68,-6,5,-63,0,-25,-10,-2,-3,47,1, -35,-58,-38,-2,62,-55,-83,59,-24,81,-55,-57,80,-22,-54,-1, 
  /* [26][2][][] */ -124,-114,-70,-5,-44,0,-25,0,4,6,9,-66,-61,16,-52,-19, -78,-111,-35,14,-11,-60,-93,-3,-33,-18,32,-27,10,4,-67,20, -32,-118,-48,23,62,80,-89,65,44,88,61,-82,34,-5,-127,53, 
  /* [27][0][][] */ -5,-7,-4,-28,-58,-70,-61,-71,-70,-113,-59,-65,-76,18,-59,5, -51,-53,-43,-34,29,-20,-75,-72,-40,-117,-17,-101,-37,-45,-75,-11, -42,-51,-99,11,25,-12,-39,13,-54,-99,11,-127,47,-20,-82,17, 
  /* [27][1][][] */ -51,-4,-23,12,-69,-84,-44,-52,-70,-28,12,-28,-31,4,18,12, -67,5,-83,-20,16,3,-57,-9,-57,-20,-42,12,3,-19,-54,-51, -25,-13,-95,-33,31,1,-33,23,-42,8,-8,-52,35,2,-56,-7, 
  /* [27][2][][] */ -33,-49,-57,-35,-43,-79,-8,-97,-21,-19,-87,-35,-41,-9,-35,39, -25,-42,-78,-22,-32,-38,-107,-47,-55,-28,-1,-69,-31,-28,-26,3, -34,-39,-46,-23,-30,7,-89,-66,-1,-39,-67,-22,-44,32,-43,-48, 
  /* [28][0][][] */ -21,-56,-46,-29,-12,-34,44,36,-38,-46,22,-88,-67,65,-127,5, 45,-5,-96,53,-18,0,17,-41,-12,-40,-28,-113,-76,25,-39,-57, 13,-27,-12,-32,-38,-34,-2,25,-13,-32,-22,-111,18,12,17,-4, 
  /* [28][1][][] */ -34,50,-9,53,-9,-31,-51,-50,-5,-14,26,-23,16,29,-97,-31, -64,-45,-46,18,-9,-10,-48,14,-64,-19,-41,-59,-8,-40,-12,-46, -41,-51,-74,-68,-32,-63,-37,-33,-52,21,36,-87,21,-54,-37,-65, 
  /* [28][2][][] */ 11,-5,-67,34,5,35,5,-48,-72,38,-17,-31,-58,-19,7,-58, -6,16,-18,49,-55,-35,-28,3,-48,-30,-49,-43,-28,1,-13,6, 2,6,1,26,-16,-22,-54,-11,-44,-56,-10,-110,33,33,-28,-22, 
  /* [29][0][][] */ -6,-32,-10,-34,-31,-34,-75,-41,-36,-62,53,-27,-65,-26,-30,-39, -20,-94,-7,-9,-6,-49,-60,-44,26,1,5,-57,25,-30,27,-31, -98,-48,7,-16,-76,-60,47,-97,-64,-72,-2,-25,-9,-17,4,-25, 
  /* [29][1][][] */ -3,-5,-18,28,-36,-30,-72,-119,-9,-49,-12,-5,1,17,-7,-13, -18,-69,-30,24,-88,8,-15,-65,-12,-8,-75,-102,-75,-10,-83,-35, -83,50,36,-9,-79,-98,-31,-67,-83,26,-61,-80,-101,-23,-108,-34, 
  /* [29][2][][] */ 5,-36,-95,-11,-55,-58,-40,-105,-81,-96,-82,32,-54,-45,-42,-26, -5,-11,-92,-53,-28,-54,-71,-110,-66,-57,-43,-76,-49,-33,-63,32, -127,-44,-41,14,-69,-97,-30,-82,-60,-62,-44,-76,-118,-5,-58,31, 
  /* [30][0][][] */ 56,5,55,13,8,55,-3,11,95,67,9,20,51,9,17,0, -2,40,15,-8,107,23,32,1,52,-15,42,20,-48,14,29,5, -43,-36,-7,2,-33,73,-10,39,6,7,39,1,-11,6,-45,7, 
  /* [30][1][][] */ 44,6,68,-14,-34,-17,-35,17,1,42,6,-14,14,7,-9,-22, 22,30,23,7,-19,-33,37,-45,-16,-111,9,35,-88,11,63,-83, -6,-49,-23,1,-86,-12,18,-14,-28,-33,21,3,-28,17,24,-102, 
  /* [30][2][][] */ -10,21,57,8,65,-127,-5,35,-94,66,-11,-36,41,3,-25,-15, -15,47,-7,-6,85,-38,52,-99,-37,-69,-29,40,-11,-18,60,-22, -43,5,-2,8,-25,-68,2,-39,-90,-5,-22,34,26,6,0,-55, 
  /* [31][0][][] */ -26,44,9,-62,-63,-8,-14,-32,15,-75,-2,-66,-61,-40,-75,-64, -61,22,2,-66,-54,-3,-67,7,-57,-105,21,35,21,1,-91,-11, 55,-43,46,10,-42,-82,28,18,-58,-35,22,21,33,-52,-97,-19, 
  /* [31][1][][] */ -45,-47,-64,-15,-78,38,-74,-7,27,-111,-30,-39,-67,-71,-20,-30, -22,-36,-51,-75,-58,-46,-12,5,3,-47,32,-23,13,39,52,-63, -33,-15,32,-27,-13,1,32,-6,14,-62,-39,-56,-20,-83,-111,25, 
  /* [31][2][][] */ -46,5,-52,32,-44,5,3,-20,-81,-127,17,-46,-8,14,-51,33, -12,-62,-8,-32,6,-63,36,22,-60,-81,-40,-8,-7,-56,21,21, 9,1,34,-79,-29,-27,-88,-58,29,-76,36,28,23,47,-58,-11, 
};
const TfArray<4, int> tensor_dimension8 = { 4, { 32,3,3,16 } };
const TfArray<32, float> quant8_scale = { 32, { 0.0022193747572600842, 0.0063310181722044945, 0.0055197491310536861, 0.0072014718316495419, 0.003701669629663229, 0.006769061554223299, 0.0014311521081253886, 0.0040761320851743221, 0.0034180879592895508, 0.0021331501193344593, 0.0055309436284005642, 0.0025550066493451595, 0.0024527437053620815, 0.004144301638007164, 0.0015935844276100397, 0.0058154501020908356, 0.0070875510573387146, 0.0022008796222507954, 0.0024042767472565174, 0.0067051788792014122, 0.0065085925161838531, 0.006754064466804266, 0.0021981482859700918, 0.001983247697353363, 0.0069090500473976135, 0.0067593674175441265, 0.0072466656565666199, 0.0032269153743982315, 0.0019961206708103418, 0.0028084556106477976, 0.0070923278108239174, 0.0018778099911287427, } };
const TfArray<32, int> quant8_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data9[16] = { -4983, -6799, -9970, -19610, -17948, -11852, -7650, -12585, -12750, -13514, -6268, 13580, -27855, -9875, 11635, -23337, };
const TfArray<1, int> tensor_dimension9 = { 1, { 16 } };
const TfArray<16, float> quant9_scale = { 16, { 1.8959621229441836e-05, 2.0059735106769949e-05, 1.7277967344853096e-05, 5.2229406719561666e-06, 1.6482310456922278e-05, 2.1194755390752107e-05, 1.8964085029438138e-05, 2.0092658814974129e-05, 2.1462001313921064e-05, 1.5044521205709316e-05, 2.3805021555745043e-05, 1.5377403542515822e-05, 1.3785674127575476e-05, 5.0160638238594402e-06, 1.4204844774212688e-05, 1.9291775970486924e-05, } };
const TfArray<16, int> quant9_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data10[16*3*3*8] = { 
  /* [0][0][][] */ -8,-18,52,31,21,16,45,91, -31,-15,-3,-67,-29,20,25,70, 88,-6,51,-127,-48,-2,85,14, 
  /* [0][1][][] */ -2,-34,40,42,37,-7,-8,-49, -12,-42,3,15,-38,1,8,-30, 44,21,7,-12,-4,23,13,-108, 
  /* [0][2][][] */ -59,30,-14,23,19,22,-13,-22, 0,55,-11,34,-38,14,-43,-36, 54,52,-22,5,-33,-1,-4,-70, 
  /* [1][0][][] */ -9,0,28,38,-9,-16,46,-20, 8,1,-57,-32,7,27,62,-38, 22,0,47,-29,-15,-10,61,-61, 
  /* [1][1][][] */ -19,-41,16,34,-32,-21,-16,-116, 26,-9,-31,41,-19,10,-14,-127, -1,-50,1,39,-10,16,-30,-109, 
  /* [1][2][][] */ -41,-23,19,-7,18,15,14,-74, 18,16,-15,5,3,8,32,-73, -41,14,58,20,2,-14,-27,-85, 
  /* [2][0][][] */ 2,0,22,94,-1,-14,35,67, 25,16,5,21,-15,-28,58,126, 39,7,14,-127,-15,-2,82,-30, 
  /* [2][1][][] */ 66,-8,6,81,-29,4,49,23, 2,-31,-47,-20,-9,-8,7,7, 31,-120,-42,-110,13,0,-37,-116, 
  /* [2][2][][] */ 41,-5,23,51,-30,14,-19,-32, -31,46,-45,20,-9,5,13,16, -3,-48,-52,-45,-34,-30,-62,-112, 
  /* [3][0][][] */ 19,-54,80,-48,35,-46,-77,-10, -21,-75,-38,61,-28,-66,-85,-41, -109,11,-47,-40,13,-46,72,-28, 
  /* [3][1][][] */ 31,-43,72,-32,-34,-80,-78,-76, -41,7,-104,-62,-92,28,-18,16, -116,42,77,31,-69,-50,56,5, 
  /* [3][2][][] */ -31,35,71,-105,33,-52,-43,-95, -103,-20,-54,-58,-89,-90,-110,8, -127,-4,73,-109,22,-59,-48,-27, 
  /* [4][0][][] */ -27,-78,24,-101,-32,-25,-74,-71, -83,0,-33,13,-14,14,-66,83, 93,-103,-109,-49,-29,24,-70,56, 
  /* [4][1][][] */ -43,-5,58,-7,13,20,63,-90, -98,44,-30,46,-31,28,-16,103, -8,-29,-98,-1,26,-7,58,95, 
  /* [4][2][][] */ 28,-24,33,-21,-8,-16,63,-127, -51,57,-20,50,-9,-12,-119,94, 65,-45,-103,-42,26,-9,-15,96, 
  /* [5][0][][] */ 23,4,14,72,-7,-25,33,13, -127,26,-26,-22,11,14,-86,54, -36,-66,71,-13,10,1,-13,88, 
  /* [5][1][][] */ 74,17,24,49,8,-4,-28,-65, -64,-11,4,-19,8,9,-6,45, 33,-24,17,-46,-17,8,18,29, 
  /* [5][2][][] */ 117,22,-8,52,-25,17,-8,-76, 2,23,3,11,0,-24,-9,-41, 59,31,-45,-48,-8,10,-27,-60, 
  /* [6][0][][] */ -11,36,15,105,-27,-8,-13,25, 13,-21,47,-44,-17,-5,19,-18, -75,-70,-46,-22,-9,2,-16,-71, 
  /* [6][1][][] */ 25,-14,48,37,-26,8,-19,-42, 68,19,-21,-51,3,16,24,-80, 4,61,-53,31,-2,2,62,-65, 
  /* [6][2][][] */ 55,-35,19,16,-25,8,-5,-73, 66,18,-9,31,1,6,-8,-65, -34,4,-44,68,-20,-18,7,-127, 
  /* [7][0][][] */ -76,4,12,-4,-26,21,-20,23, 45,15,13,-1,15,16,-31,-3, 29,37,-89,28,19,6,-8,-2, 
  /* [7][1][][] */ -93,33,-12,1,13,-13,45,24, 26,-78,5,-16,-12,18,49,1, -4,-40,-87,17,-7,-19,24,18, 
  /* [7][2][][] */ -92,11,9,15,-1,-16,68,19, 35,-127,-12,-97,22,1,74,-9, 9,-13,-83,-25,-18,3,83,2, 
  /* [8][0][][] */ 20,21,39,72,1,-10,58,34, -127,22,26,-14,13,-9,-24,94, 26,-99,114,-28,0,8,20,48, 
  /* [8][1][][] */ 57,-45,39,60,-6,-27,35,-46, -48,-70,31,-41,0,12,-2,33, 30,-57,12,-51,-2,10,42,2, 
  /* [8][2][][] */ 52,52,47,57,8,9,-28,-73, -7,30,-7,8,9,-19,-53,-15, 79,82,-45,-42,-8,-19,2,-83, 
  /* [9][0][][] */ -90,3,73,88,-9,22,-17,111, 37,24,-62,22,45,16,-47,19, 81,30,-119,47,-18,13,14,54, 
  /* [9][1][][] */ -117,9,-4,16,-18,27,-122,94, 26,-76,-14,25,56,-1,-49,-14, 32,-42,-95,-57,-18,17,13,0, 
  /* [9][2][][] */ -121,59,7,21,8,1,-115,80, 81,-1,-27,-13,24,3,-27,33, 64,10,-127,-96,14,23,-6,14, 
  /* [10][0][][] */ -71,-36,-20,13,3,-9,17,-18, -21,-34,-29,-35,-12,-18,4,-12, -64,-11,-20,46,-16,9,10,23, 
  /* [10][1][][] */ 3,-5,-8,30,3,9,20,-11, 61,-35,-19,-29,-9,-19,25,-10, 6,-1,-52,6,5,4,-1,-18, 
  /* [10][2][][] */ 32,61,-9,41,8,-17,8,-22, 14,118,-39,70,2,17,-20,-32, -4,127,-31,102,-9,-10,9,-35, 
  /* [11][0][][] */ -29,13,-25,60,18,12,9,-53, -66,-34,-47,-127,35,-23,-40,23, 32,-15,-13,-62,-21,-21,-21,-67, 
  /* [11][1][][] */ 61,85,40,3,14,7,44,-93, 2,35,-46,-10,-15,10,2,-37, 81,2,-10,-3,-26,13,68,-119, 
  /* [11][2][][] */ 1,6,30,64,19,-5,-27,-82, 11,17,52,-53,-1,2,-36,-27, 47,-17,-13,-14,-8,4,19,-82, 
  /* [12][0][][] */ -111,66,-75,111,-14,6,-59,61, -10,52,40,60,5,22,-57,32, 123,87,-37,89,36,-31,-29,52, 
  /* [12][1][][] */ -127,-13,-40,37,8,20,-7,59, -44,-49,62,22,47,-28,43,30, 40,-22,-33,-46,26,-22,-9,67, 
  /* [12][2][][] */ -114,-18,-57,8,0,9,-127,35, -60,-92,36,-5,43,1,-8,1, 93,-43,-27,-55,46,-25,-42,33, 
  /* [13][0][][] */ -90,-55,-13,-63,-120,39,-74,-70, -59,11,-60,-16,-125,-96,-92,-98, -68,2,69,-21,56,-90,-84,29, 
  /* [13][1][][] */ -85,22,26,-96,44,-79,-27,-30, -79,13,-77,-106,-106,87,16,50, -64,-76,35,-101,35,-22,-8,18, 
  /* [13][2][][] */ -93,17,-68,56,-92,-11,-114,-79, -88,-11,65,-25,53,-42,-127,-10, -83,65,-59,-46,-11,5,-55,23, 
  /* [14][0][][] */ 46,75,77,84,1,53,42,-23, -13,85,-25,12,-18,9,49,-53, 22,11,-50,44,2,-16,19,-127, 
  /* [14][1][][] */ 69,-26,2,29,-39,35,3,-33, 46,55,-55,-70,6,5,35,-33, -20,69,-82,-114,-3,15,-3,-89, 
  /* [14][2][][] */ 46,29,24,28,-21,28,5,-30, 12,-87,-46,-119,20,-32,1,-51, -3,-22,-34,-92,-2,10,-16,-85, 
  /* [15][0][][] */ -127,-75,-10,-66,-4,-14,-118,35, -44,11,12,22,-4,-19,14,28, -99,-35,-2,-59,-30,-7,-54,29, 
  /* [15][1][][] */ -72,-43,3,-89,-4,20,47,27, -57,3,16,20,-25,20,47,34, -66,-35,2,-57,9,9,19,8, 
  /* [15][2][][] */ -51,-10,-15,-54,-24,-30,-30,-50, -31,-2,-4,0,-3,-23,-37,-87, -35,12,16,-21,-29,-4,-111,-78, 
};
const TfArray<4, int> tensor_dimension10 = { 4, { 16,3,3,8 } };
const TfArray<16, float> quant10_scale = { 16, { 0.0062483316287398338, 0.0066108852624893188, 0.0056941262446343899, 0.0017212721286341548, 0.0054319095797836781, 0.0069849425926804543, 0.006249802652746439, 0.0066217356361448765, 0.0070730159059166908, 0.0049580717459321022, 0.0078451819717884064, 0.0050677764229476452, 0.0045432061888277531, 0.0016530937282368541, 0.0046813478693366051, 0.0063577964901924133, } };
const TfArray<16, int> quant10_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data11[8] = { 18798, -2641, -21530, -4760, -24998, -9969, 3874, -36854, };
const TfArray<1, int> tensor_dimension11 = { 1, { 8 } };
const TfArray<8, float> quant11_scale = { 8, { 1.5876028555794619e-05, 2.1765566998510621e-05, 1.4736614502908196e-05, 1.8057517081615515e-05, 9.7770189313450828e-06, 6.2526955844077747e-06, 1.4075979379413184e-05, 1.1857368917844724e-05, } };
const TfArray<8, int> quant11_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data12[8*3*3*1] = { 
  /* [0][0][][] */ 56, 7, 1, 
  /* [0][1][][] */ 43, -127, -40, 
  /* [0][2][][] */ 82, -59, -40, 
  /* [1][0][][] */ -127, -66, -57, 
  /* [1][1][][] */ 30, -27, 64, 
  /* [1][2][][] */ -50, 53, 6, 
  /* [2][0][][] */ 69, 110, -101, 
  /* [2][1][][] */ -3, -23, -127, 
  /* [2][2][][] */ 33, 48, -111, 
  /* [3][0][][] */ -127, 45, -47, 
  /* [3][1][][] */ -95, 118, -49, 
  /* [3][2][][] */ 11, 77, 40, 
  /* [4][0][][] */ 25, -109, -44, 
  /* [4][1][][] */ 42, -127, -14, 
  /* [4][2][][] */ -57, 28, -49, 
  /* [5][0][][] */ -81, 4, -40, 
  /* [5][1][][] */ 34, 43, -1, 
  /* [5][2][][] */ -127, -14, -30, 
  /* [6][0][][] */ 84, 89, 21, 
  /* [6][1][][] */ 33, -40, -20, 
  /* [6][2][][] */ -65, -127, -97, 
  /* [7][0][][] */ 83, 69, 31, 
  /* [7][1][][] */ 46, 127, 15, 
  /* [7][2][][] */ -47, 108, -28, 
};
const TfArray<4, int> tensor_dimension12 = { 4, { 8,3,3,1 } };
const TfArray<8, float> quant12_scale = { 8, { 0.0041455486789345741, 0.0056834248825907707, 0.0038480248767882586, 0.0047151786275207996, 0.0025529752019792795, 0.0016327038174495101, 0.0036755197215825319, 0.0030961961019784212, } };
const TfArray<8, int> quant12_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const TfArray<4, int> tensor_dimension13 = { 4, { 1,98,41,1 } };
const TfArray<1, float> quant13_scale = { 1, { 0.0038296568673104048, } };
const TfArray<1, int> quant13_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const TfArray<4, int> tensor_dimension14 = { 4, { 1,98,41,8 } };
const TfArray<1, float> quant14_scale = { 1, { 0.0030343492981046438, } };
const TfArray<1, int> quant14_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const TfArray<4, int> tensor_dimension15 = { 4, { 1,49,21,8 } };
const TfArray<1, float> quant15_scale = { 1, { 0.0030343492981046438, } };
const TfArray<1, int> quant15_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const TfArray<4, int> tensor_dimension16 = { 4, { 1,49,21,16 } };
const TfArray<1, float> quant16_scale = { 1, { 0.0063580721616744995, } };
const TfArray<1, int> quant16_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const TfArray<4, int> tensor_dimension17 = { 4, { 1,25,11,16 } };
const TfArray<1, float> quant17_scale = { 1, { 0.0063580721616744995, } };
const TfArray<1, int> quant17_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant17 = { (TfLiteFloatArray*)&quant17_scale, (TfLiteIntArray*)&quant17_zero, 0 };
const TfArray<4, int> tensor_dimension18 = { 4, { 1,25,11,32 } };
const TfArray<1, float> quant18_scale = { 1, { 0.019692739471793175, } };
const TfArray<1, int> quant18_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant18 = { (TfLiteFloatArray*)&quant18_scale, (TfLiteIntArray*)&quant18_zero, 0 };
const TfArray<4, int> tensor_dimension19 = { 4, { 1,13,6,32 } };
const TfArray<1, float> quant19_scale = { 1, { 0.019692739471793175, } };
const TfArray<1, int> quant19_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant19 = { (TfLiteFloatArray*)&quant19_scale, (TfLiteIntArray*)&quant19_zero, 0 };
const TfArray<4, int> tensor_dimension20 = { 4, { 1,13,6,64 } };
const TfArray<1, float> quant20_scale = { 1, { 0.031626451760530472, } };
const TfArray<1, int> quant20_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant20 = { (TfLiteFloatArray*)&quant20_scale, (TfLiteIntArray*)&quant20_zero, 0 };
const TfArray<4, int> tensor_dimension21 = { 4, { 1,7,3,64 } };
const TfArray<1, float> quant21_scale = { 1, { 0.031626451760530472, } };
const TfArray<1, int> quant21_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant21 = { (TfLiteFloatArray*)&quant21_scale, (TfLiteIntArray*)&quant21_zero, 0 };
const TfArray<2, int> tensor_dimension22 = { 2, { 1,1344 } };
const TfArray<1, float> quant22_scale = { 1, { 0.031626451760530472, } };
const TfArray<1, int> quant22_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant22 = { (TfLiteFloatArray*)&quant22_scale, (TfLiteIntArray*)&quant22_zero, 0 };
const TfArray<2, int> tensor_dimension23 = { 2, { 1,6 } };
const TfArray<1, float> quant23_scale = { 1, { 0.7378649115562439, } };
const TfArray<1, int> quant23_zero = { 1, { 36 } };
const TfLiteAffineQuantization quant23 = { (TfLiteFloatArray*)&quant23_scale, (TfLiteIntArray*)&quant23_zero, 0 };
const TfArray<2, int> tensor_dimension24 = { 2, { 1,6 } };
const TfArray<1, float> quant24_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant24_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant24 = { (TfLiteFloatArray*)&quant24_scale, (TfLiteIntArray*)&quant24_zero, 0 };
const TfLiteReshapeParams opdata0 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs0 = { 2, { 0,1 } };
const TfArray<1, int> outputs0 = { 1, { 13 } };
const TfLiteConvParams opdata1 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs1 = { 3, { 13,12,11 } };
const TfArray<1, int> outputs1 = { 1, { 14 } };
const TfLitePoolParams opdata2 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs2 = { 1, { 14 } };
const TfArray<1, int> outputs2 = { 1, { 15 } };
const TfLiteConvParams opdata3 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs3 = { 3, { 15,10,9 } };
const TfArray<1, int> outputs3 = { 1, { 16 } };
const TfLitePoolParams opdata4 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs4 = { 1, { 16 } };
const TfArray<1, int> outputs4 = { 1, { 17 } };
const TfLiteConvParams opdata5 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs5 = { 3, { 17,8,7 } };
const TfArray<1, int> outputs5 = { 1, { 18 } };
const TfLitePoolParams opdata6 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs6 = { 1, { 18 } };
const TfArray<1, int> outputs6 = { 1, { 19 } };
const TfLiteConvParams opdata7 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs7 = { 3, { 19,6,5 } };
const TfArray<1, int> outputs7 = { 1, { 20 } };
const TfLitePoolParams opdata8 = { kTfLitePaddingSame, 2,2, 2,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs8 = { 1, { 20 } };
const TfArray<1, int> outputs8 = { 1, { 21 } };
const TfLiteReshapeParams opdata9 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs9 = { 2, { 21,2 } };
const TfArray<1, int> outputs9 = { 1, { 22 } };
const TfLiteFullyConnectedParams opdata10 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs10 = { 3, { 22,4,3 } };
const TfArray<1, int> outputs10 = { 1, { 23 } };
const TfLiteSoftmaxParams opdata11 = { 1 };
const TfArray<1, int> inputs11 = { 1, { 23 } };
const TfArray<1, int> outputs11 = { 1, { 24 } };
};

TensorInfo_t tensorData[] = {
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension0, 4018, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant0))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data1, (TfLiteIntArray*)&g0::tensor_dimension1, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data2, (TfLiteIntArray*)&g0::tensor_dimension2, 8, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data3, (TfLiteIntArray*)&g0::tensor_dimension3, 24, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant3))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data4, (TfLiteIntArray*)&g0::tensor_dimension4, 8064, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant4))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data5, (TfLiteIntArray*)&g0::tensor_dimension5, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant5))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data6, (TfLiteIntArray*)&g0::tensor_dimension6, 18432, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant6))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data7, (TfLiteIntArray*)&g0::tensor_dimension7, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant7))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data8, (TfLiteIntArray*)&g0::tensor_dimension8, 4608, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant8))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data9, (TfLiteIntArray*)&g0::tensor_dimension9, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant9))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data10, (TfLiteIntArray*)&g0::tensor_dimension10, 1152, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant10))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data11, (TfLiteIntArray*)&g0::tensor_dimension11, 32, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant11))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data12, (TfLiteIntArray*)&g0::tensor_dimension12, 72, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant12))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 32144), (TfLiteIntArray*)&g0::tensor_dimension13, 4018, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant13))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension14, 32144, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant14))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 32144), (TfLiteIntArray*)&g0::tensor_dimension15, 8232, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant15))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension16, 16464, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant16))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 16464), (TfLiteIntArray*)&g0::tensor_dimension17, 4400, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant17))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension18, 8800, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant18))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 8800), (TfLiteIntArray*)&g0::tensor_dimension19, 2496, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant19))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension20, 4992, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant20))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 4992), (TfLiteIntArray*)&g0::tensor_dimension21, 1344, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant21))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension22, 1344, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant22))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 1344), (TfLiteIntArray*)&g0::tensor_dimension23, 6, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant23))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension24, 6, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant24))}, },
};

#ifndef TF_LITE_STATIC_MEMORY
TfLiteNode tflNodes[12] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs8, (TfLiteIntArray*)&g0::outputs8, (TfLiteIntArray*)&g0::inputs8, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata8)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs9, (TfLiteIntArray*)&g0::outputs9, (TfLiteIntArray*)&g0::inputs9, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata9)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs10, (TfLiteIntArray*)&g0::outputs10, (TfLiteIntArray*)&g0::inputs10, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata10)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs11, (TfLiteIntArray*)&g0::outputs11, (TfLiteIntArray*)&g0::inputs11, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata11)), nullptr, 0, },
};
#else
TfLiteNode tflNodes[12] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs8, (TfLiteIntArray*)&g0::outputs8, (TfLiteIntArray*)&g0::inputs8, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata8)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs9, (TfLiteIntArray*)&g0::outputs9, (TfLiteIntArray*)&g0::inputs9, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata9)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs10, (TfLiteIntArray*)&g0::outputs10, (TfLiteIntArray*)&g0::inputs10, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata10)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs11, (TfLiteIntArray*)&g0::outputs11, (TfLiteIntArray*)&g0::inputs11, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata11)), nullptr, 0, },
};
#endif

used_operators_e used_ops[] =
{OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_CONV_2D, OP_MAX_POOL_2D, OP_CONV_2D, OP_MAX_POOL_2D, OP_CONV_2D, OP_MAX_POOL_2D, OP_RESHAPE, OP_FULLY_CONNECTED, OP_SOFTMAX, };


// Indices into tflTensors and tflNodes for subgraphs
const size_t tflTensors_subgraph_index[] = {0, 25, };
const size_t tflNodes_subgraph_index[] = {0, 12, };

// Input/output tensors
static const int in_tensor_indices[] = {
  0, 
};

static const int out_tensor_indices[] = {
  24, 
};


size_t current_subgraph_index = 0;

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = false;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization = tensorData[i].quantization;
  if (tensor->quantization.type == kTfLiteAffineQuantization) {
    TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
    tensor->params.scale = quant->scale->data[0];
    tensor->params.zero_point = quant->zero_point->data[0];
  }

}

static void init_tflite_eval_tensor(int i, TfLiteEvalTensor *tensor) {

  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBufferImpl(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  uint32_t align_bytes = (bytes % 16) ? 16 - (bytes % 16) : 0;

  if (current_location - (bytes + align_bytes) < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  // align to the left aligned boundary of 16 bytes
  current_location -= 15; // for alignment
  current_location += 16 - ((uintptr_t)(current_location) & 15);

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}

typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;

static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArenaImpl(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBufferImpl(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBufferImpl(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensorImpl(const struct TfLiteContext* context,
                               int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensorImpl(const struct TfLiteContext* context,
                                       int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

class EonMicroContext : public MicroContext {
 public:
 
  EonMicroContext(): MicroContext(nullptr, nullptr, nullptr) { }

  void* AllocatePersistentBuffer(size_t bytes) {
    return AllocatePersistentBufferImpl(nullptr, bytes);
  }

  TfLiteStatus RequestScratchBufferInArena(size_t bytes,
                                           int* buffer_index) {
  return RequestScratchBufferInArenaImpl(nullptr, bytes, buffer_index);
  }

  void* GetScratchBuffer(int buffer_index) {
    return GetScratchBufferImpl(nullptr, buffer_index);
  }
 
  TfLiteTensor* AllocateTempTfLiteTensor(int tensor_index) {
    return GetTensorImpl(nullptr, tensor_index);
  }

  void DeallocateTempTfLiteTensor(TfLiteTensor* tensor) {
    return;
  }

  bool IsAllTempTfLiteTensorDeallocated() {
    return true;
  }

  TfLiteEvalTensor* GetEvalTensor(int tensor_index) {
    return GetEvalTensorImpl(nullptr, tensor_index);
  }

};


} // namespace

TfLiteStatus tflite_learn_28_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;

  EonMicroContext micro_context_;
  
  // Set microcontext as the context ptr
  ctx.impl_ = static_cast<void*>(&micro_context_);
  // Setup tflitecontext functions
  ctx.AllocatePersistentBuffer = &AllocatePersistentBufferImpl;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArenaImpl;
  ctx.GetScratchBuffer = &GetScratchBufferImpl;
  ctx.GetTensor = &GetTensorImpl;
  ctx.GetEvalTensor = &GetEvalTensorImpl;
  ctx.ReportError = &MicroContextReportOpError;

  ctx.tensors_size = 25;
  for (size_t i = 0; i < 25; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }

  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }

  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].init) {
        tflNodes[i].user_data = registrations[used_ops[i]].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
      }
    }
  }
  current_subgraph_index = 0;

  for(size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].prepare) {
        ResetTensors();
        TfLiteStatus status = registrations[used_ops[i]].prepare(&ctx, &tflNodes[i]);
        if (status != kTfLiteOk) {
          return status;
        }
      }
    }
  }
  current_subgraph_index = 0;

  return kTfLiteOk;
}

TfLiteStatus tflite_learn_28_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(in_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_28_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(out_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_28_invoke() {
  for (size_t i = 0; i < 12; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[used_ops[i]].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_28_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
